/**
 * @brief     libdae header
 * @author    Thomas Atwood (tatwood.net)
 * @date      2011
 * @copyright unlicense / public domain
 ****************************************************************************/
#ifndef DAE_H_
#define DAE_H_

#include <stddef.h>

//****************************************************************************
// enums

enum dae_obj_typeid_e
{
    dae_ID_BOOLEAN,
    dae_ID_HEXBINARY,
    dae_ID_FLOAT,
    dae_ID_BYTE,
    dae_ID_SHORT,
    dae_ID_INT,
    dae_ID_STRING,
    dae_ID_UNSIGNEDBYTE,
    dae_ID_UNSIGNEDINT,
    dae_ID_ANYURI,
    dae_ID_DATETIME,
    dae_ID_DOUBLE,
    dae_ID_ID,
    dae_ID_INTEGER,
    dae_ID_LONG,
    dae_ID_NAME,
    dae_ID_NCNAME,
    dae_ID_NMTOKEN,
    dae_ID_NONNEGATIVEINTEGER,
    dae_ID_POSITIVEINTEGER,
    dae_ID_TOKEN,
    dae_ID_UNSIGNEDLONG,
    dae_ID_MATH,
    dae_ID_FLOAT_TYPE,
    dae_ID_INT_TYPE,
    dae_ID_UINT_TYPE,
    dae_ID_SIDREF_TYPE,
    dae_ID_SID_TYPE,
    dae_ID_LIST_OF_INTS_TYPE,
    dae_ID_LIST_OF_NAMES_TYPE,
    dae_ID_LIST_OF_UINTS_TYPE,
    dae_ID_BOOL2_TYPE,
    dae_ID_BOOL3_TYPE,
    dae_ID_BOOL4_TYPE,
    dae_ID_BOOL2X2_TYPE,
    dae_ID_BOOL2X3_TYPE,
    dae_ID_BOOL2X4_TYPE,
    dae_ID_BOOL3X2_TYPE,
    dae_ID_BOOL3X3_TYPE,
    dae_ID_BOOL3X4_TYPE,
    dae_ID_BOOL4X2_TYPE,
    dae_ID_BOOL4X3_TYPE,
    dae_ID_BOOL4X4_TYPE,
    dae_ID_FLOAT2_TYPE,
    dae_ID_FLOAT3_TYPE,
    dae_ID_FLOAT4_TYPE,
    dae_ID_FLOAT2X2_TYPE,
    dae_ID_FLOAT2X3_TYPE,
    dae_ID_FLOAT2X4_TYPE,
    dae_ID_FLOAT3X2_TYPE,
    dae_ID_FLOAT3X3_TYPE,
    dae_ID_FLOAT3X4_TYPE,
    dae_ID_FLOAT4X2_TYPE,
    dae_ID_FLOAT4X3_TYPE,
    dae_ID_FLOAT4X4_TYPE,
    dae_ID_INT2_TYPE,
    dae_ID_INT3_TYPE,
    dae_ID_INT4_TYPE,
    dae_ID_INT2X2_TYPE,
    dae_ID_INT2X3_TYPE,
    dae_ID_INT2X4_TYPE,
    dae_ID_INT3X2_TYPE,
    dae_ID_INT3X3_TYPE,
    dae_ID_INT3X4_TYPE,
    dae_ID_INT4X2_TYPE,
    dae_ID_INT4X3_TYPE,
    dae_ID_INT4X4_TYPE,
    dae_ID_DIGITS_TYPE,
    dae_ID_MAGNITUDE_TYPE,
    dae_ID_MORPH_METHOD_ENUM,
    dae_ID_NODE_ENUM,
    dae_ID_SAMPLER_BEHAVIOR_ENUM,
    dae_ID_URIFRAGMENT_TYPE,
    dae_ID_UP_AXIS_ENUM,
    dae_ID_VERSION_ENUM,
    dae_ID_INPUT_LOCAL_TYPE,
    dae_ID_INPUT_LOCAL_OFFSET_TYPE,
    dae_ID_TARGETABLE_FLOAT_TYPE,
    dae_ID_TARGETABLE_FLOAT3_TYPE,
    dae_ID_TOKEN_ARRAY_TYPE,
    dae_ID_IDREF_ARRAY_TYPE,
    dae_ID_NAME_ARRAY_TYPE,
    dae_ID_BOOL_ARRAY_TYPE,
    dae_ID_FLOAT_ARRAY_TYPE,
    dae_ID_INT_ARRAY_TYPE,
    dae_ID_PARAM_TYPE,
    dae_ID_ACCESSOR_TYPE,
    dae_ID_P_TYPE,
    dae_ID_LOOKAT_TYPE,
    dae_ID_MATRIX_TYPE,
    dae_ID_SCALE_TYPE,
    dae_ID_SKEW_TYPE,
    dae_ID_TRANSLATE_TYPE,
    dae_ID_IMAGE_SOURCE_TYPE_HEX,
    dae_ID_IMAGE_MIPS_TYPE,
    dae_ID_IMAGE_FACE_ENUM,
    dae_ID_IMAGE_FORMAT_HINT_CHANNELS_ENUM,
    dae_ID_IMAGE_FORMAT_HINT_PRECISION_ENUM,
    dae_ID_IMAGE_FORMAT_HINT_RANGE_ENUM,
    dae_ID_CHANNEL_TYPE,
    dae_ID_SAMPLER_TYPE,
    dae_ID_ALTITUDE_MODE_ENUM,
    dae_ID_TECHNIQUE_TYPE,
    dae_ID_EXTRA_TYPE,
    dae_ID_POLYLIST_TYPE,
    dae_ID_POLYGONS_TYPE,
    dae_ID_POLYGONS_TYPE_PH,
    dae_ID_LINESTRIPS_TYPE,
    dae_ID_TRISTRIPS_TYPE,
    dae_ID_LINES_TYPE,
    dae_ID_TRIANGLES_TYPE,
    dae_ID_TRIFANS_TYPE,
    dae_ID_VERTICES_TYPE,
    dae_ID_ASSET_TYPE,
    dae_ID_ASSET_TYPE_CONTRIBUTOR,
    dae_ID_ASSET_TYPE_COVERAGE,
    dae_ID_ASSET_TYPE_COVERAGE_GEOGRAPHIC_LOCATION,
    dae_ID_ASSET_TYPE_COVERAGE_GEOGRAPHIC_LOCATION_ALTITUDE,
    dae_ID_ASSET_TYPE_UNIT,
    dae_ID_IMAGE_TYPE,
    dae_ID_IMAGE_TYPE_RENDERABLE,
    dae_ID_IMAGE_TYPE_INIT_FROM,
    dae_ID_IMAGE_TYPE_CREATE_2D,
    dae_ID_IMAGE_TYPE_CREATE_2D_SIZE_EXACT,
    dae_ID_IMAGE_TYPE_CREATE_2D_SIZE_RATIO,
    dae_ID_IMAGE_TYPE_CREATE_2D_UNNORMALIZED,
    dae_ID_IMAGE_TYPE_CREATE_2D_ARRAY,
    dae_ID_IMAGE_TYPE_CREATE_2D_FORMAT,
    dae_ID_IMAGE_TYPE_CREATE_2D_FORMAT_HINT,
    dae_ID_IMAGE_TYPE_CREATE_2D_INIT_FROM,
    dae_ID_IMAGE_TYPE_CREATE_3D,
    dae_ID_IMAGE_TYPE_CREATE_3D_SIZE,
    dae_ID_IMAGE_TYPE_CREATE_3D_ARRAY,
    dae_ID_IMAGE_TYPE_CREATE_3D_FORMAT,
    dae_ID_IMAGE_TYPE_CREATE_3D_FORMAT_HINT,
    dae_ID_IMAGE_TYPE_CREATE_3D_INIT_FROM,
    dae_ID_IMAGE_TYPE_CREATE_CUBE,
    dae_ID_IMAGE_TYPE_CREATE_CUBE_SIZE,
    dae_ID_IMAGE_TYPE_CREATE_CUBE_ARRAY,
    dae_ID_IMAGE_TYPE_CREATE_CUBE_FORMAT,
    dae_ID_IMAGE_TYPE_CREATE_CUBE_FORMAT_HINT,
    dae_ID_IMAGE_TYPE_CREATE_CUBE_INIT_FROM,
    dae_ID_CAMERA_TYPE,
    dae_ID_CAMERA_TYPE_OPTICS,
    dae_ID_CAMERA_TYPE_OPTICS_TECHNIQUE_COMMON,
    dae_ID_CAMERA_TYPE_OPTICS_TECHNIQUE_COMMON_ORTHOGRAPHIC,
    dae_ID_CAMERA_TYPE_OPTICS_TECHNIQUE_COMMON_PERSPECTIVE,
    dae_ID_CAMERA_TYPE_IMAGER,
    dae_ID_LIGHT_TYPE,
    dae_ID_LIGHT_TYPE_TECHNIQUE_COMMON,
    dae_ID_LIGHT_TYPE_TECHNIQUE_COMMON_AMBIENT,
    dae_ID_LIGHT_TYPE_TECHNIQUE_COMMON_DIRECTIONAL,
    dae_ID_LIGHT_TYPE_TECHNIQUE_COMMON_POINT,
    dae_ID_LIGHT_TYPE_TECHNIQUE_COMMON_SPOT,
    dae_ID_INSTANCE_WITH_EXTRA_TYPE,
    dae_ID_INSTANCE_IMAGE_TYPE,
    dae_ID_INSTANCE_CAMERA_TYPE,
    dae_ID_INSTANCE_FORCE_FIELD_TYPE,
    dae_ID_INSTANCE_LIGHT_TYPE,
    dae_ID_INSTANCE_MATERIAL_TYPE,
    dae_ID_INSTANCE_MATERIAL_TYPE_BIND,
    dae_ID_INSTANCE_MATERIAL_TYPE_BIND_VERTEX_INPUT,
    dae_ID_BIND_MATERIAL_TYPE,
    dae_ID_BIND_MATERIAL_TYPE_TECHNIQUE_COMMON,
    dae_ID_INSTANCE_CONTROLLER_TYPE,
    dae_ID_INSTANCE_GEOMETRY_TYPE,
    dae_ID_INSTANCE_NODE_TYPE,
    dae_ID_INSTANCE_PHYSICS_MATERIAL_TYPE,
    dae_ID_INSTANCE_RIGID_CONSTRAINT_TYPE,
    dae_ID_LIBRARY_CAMERAS_TYPE,
    dae_ID_LIBRARY_IMAGES_TYPE,
    dae_ID_LIBRARY_LIGHTS_TYPE,
    dae_ID_FX_COLOR_TYPE,
    dae_ID_FX_OPAQUE_ENUM,
    dae_ID_FX_SAMPLER_WRAP_ENUM,
    dae_ID_FX_SAMPLER_MIN_FILTER_ENUM,
    dae_ID_FX_SAMPLER_MAG_FILTER_ENUM,
    dae_ID_FX_SAMPLER_MIP_FILTER_ENUM,
    dae_ID_FX_SETPARAM_GROUP_SAMPLER_STATES,
    dae_ID_INSTANCE_EFFECT_TYPE,
    dae_ID_INSTANCE_EFFECT_TYPE_TECHNIQUE_HINT,
    dae_ID_INSTANCE_EFFECT_TYPE_SETPARAM,
    dae_ID_MATERIAL_TYPE,
    dae_ID_LIBRARY_MATERIALS_TYPE,
    dae_ID_FX_SAMPLER_TYPE,
    dae_ID_FX_SAMPLER1D_TYPE,
    dae_ID_FX_SAMPLER2D_TYPE,
    dae_ID_FX_SAMPLER3D_TYPE,
    dae_ID_FX_SAMPLERCUBE_TYPE,
    dae_ID_FX_SAMPLERRECT_TYPE,
    dae_ID_FX_SAMPLERDEPTH_TYPE,
    dae_ID_FX_MODIFIER_ENUM,
    dae_ID_FX_RENDERTARGET_TYPE,
    dae_ID_FX_RENDERTARGET_TYPE_PARAM,
    dae_ID_FX_COLORTARGET_TYPE,
    dae_ID_FX_DEPTHTARGET_TYPE,
    dae_ID_FX_STENCILTARGET_TYPE,
    dae_ID_FX_CLEARCOLOR_TYPE,
    dae_ID_FX_CLEARDEPTH_TYPE,
    dae_ID_FX_CLEARSTENCIL_TYPE,
    dae_ID_FX_DRAW_TYPE,
    dae_ID_FX_PIPELINE_STAGE_ENUM,
    dae_ID_FX_ANNOTATE_TYPE,
    dae_ID_FX_NEWPARAM_TYPE,
    dae_ID_FX_INCLUDE_TYPE,
    dae_ID_FX_CODE_TYPE,
    dae_ID_FX_SOURCES_TYPE,
    dae_ID_FX_SOURCES_TYPE_IMPORT,
    dae_ID_FX_TARGET_TYPE,
    dae_ID_FX_TARGET_TYPE_BINARY,
    dae_ID_FX_TARGET_TYPE_BINARY_HEX,
    dae_ID_FX_COMMON_FLOAT_OR_PARAM_TYPE,
    dae_ID_FX_COMMON_FLOAT_OR_PARAM_TYPE_FLOAT,
    dae_ID_FX_COMMON_FLOAT_OR_PARAM_TYPE_PARAM,
    dae_ID_FX_COMMON_COLOR_OR_TEXTURE_TYPE,
    dae_ID_FX_COMMON_COLOR_OR_TEXTURE_TYPE_COLOR,
    dae_ID_FX_COMMON_COLOR_OR_TEXTURE_TYPE_PARAM,
    dae_ID_FX_COMMON_COLOR_OR_TEXTURE_TYPE_TEXTURE,
    dae_ID_FX_COMMON_TRANSPARENT_TYPE,
    dae_ID_FX_COMMON_NEWPARAM_TYPE,
    dae_ID_PROFILE_COMMON_TYPE,
    dae_ID_PROFILE_COMMON_TYPE_TECHNIQUE,
    dae_ID_PROFILE_COMMON_TYPE_TECHNIQUE_CONSTANT,
    dae_ID_PROFILE_COMMON_TYPE_TECHNIQUE_LAMBERT,
    dae_ID_PROFILE_COMMON_TYPE_TECHNIQUE_PHONG,
    dae_ID_PROFILE_COMMON_TYPE_TECHNIQUE_BLINN,
    dae_ID_PROFILE_BRIDGE_TYPE,
    dae_ID_GL_MAX_LIGHTS_INDEX_TYPE,
    dae_ID_GL_MAX_CLIP_PLANES_INDEX_TYPE,
    dae_ID_GL_MAX_TEXTURE_IMAGE_UNITS_INDEX_TYPE,
    dae_ID_GL_BLEND_ENUM,
    dae_ID_GL_FACE_ENUM,
    dae_ID_GL_BLEND_EQUATION_ENUM,
    dae_ID_GL_FUNC_ENUM,
    dae_ID_GL_STENCIL_OP_ENUM,
    dae_ID_GL_MATERIAL_ENUM,
    dae_ID_GL_FOG_ENUM,
    dae_ID_GL_FOG_COORD_SRC_ENUM,
    dae_ID_GL_FRONT_FACE_ENUM,
    dae_ID_GL_LIGHT_MODEL_COLOR_CONTROL_ENUM,
    dae_ID_GL_LOGIC_OP_ENUM,
    dae_ID_GL_POLYGON_MODE_ENUM,
    dae_ID_GL_SHADE_MODEL_ENUM,
    dae_ID_GL_ALPHA_VALUE_TYPE,
    dae_ID_GL_ENUMERATION_TYPE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_ALPHA_FUNC,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_ALPHA_FUNC_FUNC,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_ALPHA_FUNC_VALUE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_FUNC,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SRC,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_DEST,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SEPARATE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SEPARATE_SRC_RGB,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SEPARATE_DEST_RGB,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SEPARATE_SRC_ALPHA,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SEPARATE_DEST_ALPHA,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_EQUATION,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_EQUATION_SEPARATE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_EQUATION_SEPARATE_RGB,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_EQUATION_SEPARATE_ALPHA,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_COLOR_MATERIAL,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_COLOR_MATERIAL_FACE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_COLOR_MATERIAL_MODE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_CULL_FACE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_DEPTH_FUNC,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_FOG_MODE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_FOG_COORD_SRC,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_FRONT_FACE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_MODEL_COLOR_CONTROL,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LOGIC_OP,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POLYGON_MODE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POLYGON_MODE_FACE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POLYGON_MODE_MODE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_SHADE_MODEL,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_FUNC,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_REF,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_MASK,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_OP,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_OP_FAIL,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_OP_ZFAIL,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_OP_ZPASS,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_SEPARATE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_SEPARATE_FRONT,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_SEPARATE_BACK,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_SEPARATE_REF,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_SEPARATE_MASK,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_OP_SEPARATE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_OP_SEPARATE_FACE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_OP_SEPARATE_FAIL,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_OP_SEPARATE_ZFAIL,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_OP_SEPARATE_ZPASS,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_MASK_SEPARATE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_MASK_SEPARATE_FACE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_MASK_SEPARATE_MASK,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_AMBIENT,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_DIFFUSE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_SPECULAR,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_POSITION,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_CONSTANT_ATTENUATION,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_LINEAR_ATTENUATION,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_QUADRATIC_ATTENUATION,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_SPOT_CUTOFF,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_SPOT_DIRECTION,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_SPOT_EXPONENT,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURE1D,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURE2D,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURE3D,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURECUBE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURERECT,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTUREDEPTH,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURE1D_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURE2D_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURE3D_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURECUBE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURERECT_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTUREDEPTH_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURE_ENV_COLOR,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_TEXTURE_ENV_MODE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_CLIP_PLANE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_CLIP_PLANE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_COLOR,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_COLOR_MASK,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_DEPTH_BOUNDS,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_DEPTH_MASK,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_DEPTH_RANGE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_FOG_DENSITY,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_FOG_START,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_FOG_END,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_FOG_COLOR,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_MODEL_AMBIENT,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHTING_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LINE_STIPPLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LINE_WIDTH,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_MATERIAL_AMBIENT,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_MATERIAL_DIFFUSE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_MATERIAL_EMISSION,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_MATERIAL_SHININESS,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_MATERIAL_SPECULAR,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_MODEL_VIEW_MATRIX,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POINT_DISTANCE_ATTENUATION,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POINT_FADE_THRESHOLD_SIZE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POINT_SIZE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POINT_SIZE_MIN,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POINT_SIZE_MAX,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POLYGON_OFFSET,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_PROJECTION_MATRIX,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_SCISSOR,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_MASK,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_ALPHA_TEST_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_BLEND_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_COLOR_LOGIC_OP_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_COLOR_MATERIAL_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_CULL_FACE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_DEPTH_BOUNDS_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_DEPTH_CLAMP_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_DEPTH_TEST_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_DITHER_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_FOG_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_MODEL_LOCAL_VIEWER_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LIGHT_MODEL_TWO_SIDE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LINE_SMOOTH_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LINE_STIPPLE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_LOGIC_OP_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_MULTISAMPLE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_NORMALIZE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POINT_SMOOTH_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POLYGON_OFFSET_FILL_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POLYGON_OFFSET_LINE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POLYGON_OFFSET_POINT_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POLYGON_SMOOTH_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_POLYGON_STIPPLE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_RESCALE_NORMAL_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_SAMPLE_ALPHA_TO_COVERAGE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_SAMPLE_ALPHA_TO_ONE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_SAMPLE_COVERAGE_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_SCISSOR_TEST_ENABLE,
    dae_ID_GL_PIPELINE_SETTINGS_GROUP_STENCIL_TEST_ENABLE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_COLOR,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_EQUATION,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_EQUATION_SEPARATE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_EQUATION_SEPARATE_RGB,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_EQUATION_SEPARATE_ALPHA,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_FUNC,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SRC,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_DEST,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SEPARATE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SEPARATE_SRC_RGB,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SEPARATE_DEST_RGB,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SEPARATE_SRC_ALPHA,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SEPARATE_DEST_ALPHA,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_COLOR_MASK,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_CULL_FACE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_DEPTH_FUNC,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_DEPTH_MASK,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_DEPTH_RANGE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_FRONT_FACE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_LINE_WIDTH,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_POLYGON_OFFSET,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_POINT_SIZE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_SAMPLE_COVERAGE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_SAMPLE_COVERAGE_VALUE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_SAMPLE_COVERAGE_INVERT,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_SCISSOR,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_FUNC,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_REF,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_MASK,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_SEPARATE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_SEPARATE_FRONT,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_SEPARATE_BACK,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_SEPARATE_REF,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_SEPARATE_MASK,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_MASK,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_MASK_SEPARATE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_MASK_SEPARATE_FACE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_MASK_SEPARATE_MASK,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_OP,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_OP_FAIL,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_OP_ZFAIL,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_OP_ZPASS,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_OP_SEPARATE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_OP_SEPARATE_FACE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_OP_SEPARATE_FAIL,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_OP_SEPARATE_ZFAIL,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_OP_SEPARATE_ZPASS,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_BLEND_ENABLE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_CULL_FACE_ENABLE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_DEPTH_TEST_ENABLE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_DITHER_ENABLE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_POLYGON_OFFSET_FILL_ENABLE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_POINT_SIZE_ENABLE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_SAMPLE_ALPHA_TO_COVERAGE_ENABLE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_SAMPLE_COVERAGE_ENABLE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_SCISSOR_TEST_ENABLE,
    dae_ID_GLES2_PIPELINE_SETTINGS_GROUP_STENCIL_TEST_ENABLE,
    dae_ID_GLES2_VALUE_GROUP_USERTYPE,
    dae_ID_GLES2_VALUE_GROUP_USERTYPE_SETPARAM,
    dae_ID_GLES2_VALUE_GROUP_ARRAY,
    dae_ID_GLES2_NEWPARAM_TYPE,
    dae_ID_GLES2_SHADER_TYPE,
    dae_ID_GLES2_SHADER_TYPE_SOURCES,
    dae_ID_GLES2_PROGRAM_TYPE,
    dae_ID_GLES2_PROGRAM_TYPE_BIND_ATTRIBUTE,
    dae_ID_GLES2_PROGRAM_TYPE_BIND_UNIFORM,
    dae_ID_GLES2_PROGRAM_TYPE_BIND_UNIFORM_PARAM,
    dae_ID_GLES2_PASS_TYPE,
    dae_ID_GLES2_PASS_TYPE_STATES,
    dae_ID_GLES2_PASS_TYPE_EVALUATE,
    dae_ID_PROFILE_GLES2_TYPE,
    dae_ID_PROFILE_GLES2_TYPE_TECHNIQUE,
    dae_ID_GLSL_ARRAY_TYPE,
    dae_ID_GLSL_NEWPARAM_TYPE,
    dae_ID_GLSL_SHADER_TYPE,
    dae_ID_GLSL_PROGRAM_TYPE,
    dae_ID_GLSL_PROGRAM_TYPE_BIND_ATTRIBUTE,
    dae_ID_GLSL_PROGRAM_TYPE_BIND_UNIFORM,
    dae_ID_GLSL_PROGRAM_TYPE_BIND_UNIFORM_PARAM,
    dae_ID_PROFILE_GLSL_TYPE,
    dae_ID_PROFILE_GLSL_TYPE_TECHNIQUE,
    dae_ID_PROFILE_GLSL_TYPE_TECHNIQUE_PASS,
    dae_ID_PROFILE_GLSL_TYPE_TECHNIQUE_PASS_STATES,
    dae_ID_PROFILE_GLSL_TYPE_TECHNIQUE_PASS_EVALUATE,
    dae_ID_CG_ARRAY_TYPE,
    dae_ID_CG_SETPARAM_TYPE,
    dae_ID_CG_USER_TYPE,
    dae_ID_CG_NEWPARAM_TYPE,
    dae_ID_CG_PASS_TYPE,
    dae_ID_CG_PASS_TYPE_STATES,
    dae_ID_CG_PASS_TYPE_PROGRAM,
    dae_ID_CG_PASS_TYPE_PROGRAM_SHADER,
    dae_ID_CG_PASS_TYPE_PROGRAM_SHADER_SOURCES,
    dae_ID_CG_PASS_TYPE_PROGRAM_SHADER_BIND_UNIFORM,
    dae_ID_CG_PASS_TYPE_PROGRAM_SHADER_BIND_UNIFORM_PARAM,
    dae_ID_CG_PASS_TYPE_EVALUATE,
    dae_ID_PROFILE_CG_TYPE,
    dae_ID_PROFILE_CG_TYPE_TECHNIQUE,
    dae_ID_GLES_MAX_LIGHTS_INDEX_TYPE,
    dae_ID_GLES_MAX_CLIP_PLANES_INDEX_TYPE,
    dae_ID_GLES_TEXENV_MODE_ENUM,
    dae_ID_GLES_TEXTURE_CONSTANT_TYPE,
    dae_ID_GLES_TEXENV_COMMAND_TYPE,
    dae_ID_GLES_TEXCOMBINER_OPERATOR_RGB_ENUM,
    dae_ID_GLES_TEXCOMBINER_OPERATOR_ALPHA_ENUM,
    dae_ID_GLES_TEXCOMBINER_SOURCE_ENUM,
    dae_ID_GLES_TEXCOMBINER_OPERAND_RGB_ENUM,
    dae_ID_GLES_TEXCOMBINER_OPERAND_ALPHA_ENUM,
    dae_ID_GLES_TEXCOMBINER_ARGUMENT_RGB_TYPE,
    dae_ID_GLES_TEXCOMBINER_ARGUMENT_ALPHA_TYPE,
    dae_ID_GLES_TEXCOMBINER_COMMAND_RGB_TYPE,
    dae_ID_GLES_TEXCOMBINER_COMMAND_ALPHA_TYPE,
    dae_ID_GLES_TEXCOMBINER_COMMAND_TYPE,
    dae_ID_GLES_TEXTURE_PIPELINE_TYPE,
    dae_ID_GLES_SAMPLER_WRAP_ENUM,
    dae_ID_GLES_SAMPLER_TYPE,
    dae_ID_GLES_SAMPLER_TYPE_TEXCOORD,
    dae_ID_GLES_STENCIL_OP_ENUM,
    dae_ID_GLES_ENUMERATION_TYPE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_ALPHA_FUNC,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_ALPHA_FUNC_FUNC,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_ALPHA_FUNC_VALUE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_BLEND_FUNC,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_SRC,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_BLEND_FUNC_DEST,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_CLIP_PLANE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_COLOR_MASK,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_CULL_FACE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_DEPTH_FUNC,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_DEPTH_MASK,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_DEPTH_RANGE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_FOG_COLOR,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_FOG_DENSITY,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_FOG_MODE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_FOG_START,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_FOG_END,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_FRONT_FACE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LOGIC_OP,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_AMBIENT,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_DIFFUSE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_SPECULAR,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_POSITION,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_CONSTANT_ATTENUATION,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_LINEAR_ATTENUATION,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_QUADRATIC_ATTENUATION,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_SPOT_CUTOFF,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_SPOT_DIRECTION,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_SPOT_EXPONENT,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_MODEL_AMBIENT,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LINE_WIDTH,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_MATERIAL_AMBIENT,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_MATERIAL_DIFFUSE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_MATERIAL_EMISSION,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_MATERIAL_SHININESS,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_MATERIAL_SPECULAR,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_MODEL_VIEW_MATRIX,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_POINT_DISTANCE_ATTENUATION,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_POINT_FADE_THRESHOLD_SIZE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_POINT_SIZE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_POINT_SIZE_MIN,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_POINT_SIZE_MAX,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_POLYGON_OFFSET,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_PROJECTION_MATRIX,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_SCISSOR,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_SHADE_MODEL,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_FUNC,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_REF,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_STENCIL_FUNC_MASK,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_STENCIL_MASK,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_STENCIL_OP,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_STENCIL_OP_FAIL,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_STENCIL_OP_ZFAIL,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_STENCIL_OP_ZPASS,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_TEXTURE_PIPELINE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_ALPHA_TEST_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_BLEND_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_CLIP_PLANE_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_COLOR_LOGIC_OP_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_COLOR_MATERIAL_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_CULL_FACE_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_DEPTH_TEST_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_DITHER_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_FOG_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHTING_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LIGHT_MODEL_TWO_SIDE_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_LINE_SMOOTH_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_MULTISAMPLE_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_NORMALIZE_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_POINT_SMOOTH_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_POLYGON_OFFSET_FILL_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_RESCALE_NORMAL_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_SAMPLE_ALPHA_TO_COVERAGE_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_SAMPLE_ALPHA_TO_ONE_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_SAMPLE_COVERAGE_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_SCISSOR_TEST_ENABLE,
    dae_ID_GLES_PIPELINE_SETTINGS_GROUP_STENCIL_TEST_ENABLE,
    dae_ID_GLES_NEWPARAM_TYPE,
    dae_ID_PROFILE_GLES_TYPE,
    dae_ID_PROFILE_GLES_TYPE_TECHNIQUE,
    dae_ID_PROFILE_GLES_TYPE_TECHNIQUE_PASS,
    dae_ID_PROFILE_GLES_TYPE_TECHNIQUE_PASS_STATES,
    dae_ID_PROFILE_GLES_TYPE_TECHNIQUE_PASS_EVALUATE,
    dae_ID_EFFECT_TYPE,
    dae_ID_LIBRARY_EFFECTS_TYPE,
    dae_ID_BOX_TYPE,
    dae_ID_PLANE_TYPE,
    dae_ID_SPHERE_TYPE,
    dae_ID_CYLINDER_TYPE,
    dae_ID_CAPSULE_TYPE,
    dae_ID_FORCE_FIELD_TYPE,
    dae_ID_LIBRARY_FORCE_FIELDS_TYPE,
    dae_ID_PHYSICS_MATERIAL_TYPE,
    dae_ID_PHYSICS_MATERIAL_TYPE_TECHNIQUE_COMMON,
    dae_ID_LIBRARY_PHYSICS_MATERIALS_TYPE,
    dae_ID_EDGES_TYPE,
    dae_ID_WIRES_TYPE,
    dae_ID_FACES_TYPE,
    dae_ID_SHELLS_TYPE,
    dae_ID_SOLIDS_TYPE,
    dae_ID_LINE_TYPE,
    dae_ID_CIRCLE_TYPE,
    dae_ID_ELLIPSE_TYPE,
    dae_ID_PARABOLA_TYPE,
    dae_ID_HYPERBOLA_TYPE,
    dae_ID_TORUS_TYPE,
    dae_ID_PCURVES_TYPE,
    dae_ID_SIDREF_ARRAY_TYPE,
    dae_ID_SOURCE_TYPE,
    dae_ID_SOURCE_TYPE_TECHNIQUE_COMMON,
    dae_ID_ANIMATION_TYPE,
    dae_ID_LIBRARY_ANIMATIONS_TYPE,
    dae_ID_SKIN_TYPE,
    dae_ID_SKIN_TYPE_JOINTS,
    dae_ID_SKIN_TYPE_VERTEX_WEIGHTS,
    dae_ID_CONVEX_MESH_TYPE,
    dae_ID_MESH_TYPE,
    dae_ID_SPLINE_TYPE,
    dae_ID_SPLINE_TYPE_CONTROL_VERTICES,
    dae_ID_NURBS_SURFACE_TYPE,
    dae_ID_NURBS_SURFACE_TYPE_CONTROL_VERTICES,
    dae_ID_NURBS_TYPE,
    dae_ID_NURBS_TYPE_CONTROL_VERTICES,
    dae_ID_MORPH_TYPE,
    dae_ID_MORPH_TYPE_TARGETS,
    dae_ID_CONTROLLER_TYPE,
    dae_ID_LIBRARY_CONTROLLERS_TYPE,
    dae_ID_ORIGIN_TYPE,
    dae_ID_ORIENT_TYPE,
    dae_ID_CURVE_TYPE,
    dae_ID_SURFACE_CURVES_TYPE,
    dae_ID_CURVES_TYPE,
    dae_ID_SWEPT_SURFACE_TYPE,
    dae_ID_CONE_TYPE,
    dae_ID_SURFACE_TYPE,
    dae_ID_SURFACE_TYPE_CYLINDER,
    dae_ID_SURFACES_TYPE,
    dae_ID_BREP_TYPE,
    dae_ID_GEOMETRY_TYPE,
    dae_ID_LIBRARY_GEOMETRIES_TYPE,
    dae_ID_INSTANCE_JOINT_TYPE,
    dae_ID_TARGETABLE_FLOAT4_TYPE,
    dae_ID_ROTATE_TYPE,
    dae_ID_LINK_TYPE,
    dae_ID_LINK_TYPE_ATTACHMENT_FULL,
    dae_ID_LINK_TYPE_ATTACHMENT_START,
    dae_ID_LINK_TYPE_ATTACHMENT_END,
    dae_ID_RIGID_CONSTRAINT_TYPE,
    dae_ID_RIGID_CONSTRAINT_TYPE_REF_ATTACHMENT,
    dae_ID_RIGID_CONSTRAINT_TYPE_ATTACHMENT,
    dae_ID_RIGID_CONSTRAINT_TYPE_TECHNIQUE_COMMON,
    dae_ID_RIGID_CONSTRAINT_TYPE_TECHNIQUE_COMMON_ENABLED,
    dae_ID_RIGID_CONSTRAINT_TYPE_TECHNIQUE_COMMON_INTERPENETRATE,
    dae_ID_RIGID_CONSTRAINT_TYPE_TECHNIQUE_COMMON_LIMITS,
    dae_ID_RIGID_CONSTRAINT_TYPE_TECHNIQUE_COMMON_LIMITS_SWING_CONE_AND_TWIST,
    dae_ID_RIGID_CONSTRAINT_TYPE_TECHNIQUE_COMMON_LIMITS_LINEAR,
    dae_ID_RIGID_CONSTRAINT_TYPE_TECHNIQUE_COMMON_SPRING,
    dae_ID_RIGID_CONSTRAINT_TYPE_TECHNIQUE_COMMON_SPRING_ANGULAR,
    dae_ID_RIGID_CONSTRAINT_TYPE_TECHNIQUE_COMMON_SPRING_LINEAR,
    dae_ID_NODE_TYPE,
    dae_ID_LIBRARY_NODES_TYPE,
    dae_ID_VISUAL_SCENE_TYPE,
    dae_ID_VISUAL_SCENE_TYPE_EVALUATE_SCENE,
    dae_ID_VISUAL_SCENE_TYPE_EVALUATE_SCENE_RENDER,
    dae_ID_VISUAL_SCENE_TYPE_EVALUATE_SCENE_RENDER_INSTANCE_MATERIAL,
    dae_ID_VISUAL_SCENE_TYPE_EVALUATE_SCENE_RENDER_INSTANCE_MATERIAL_TECHNIQUE_OVERRIDE,
    dae_ID_VISUAL_SCENE_TYPE_EVALUATE_SCENE_RENDER_INSTANCE_MATERIAL_BIND,
    dae_ID_LIBRARY_VISUAL_SCENES_TYPE,
    dae_ID_RIGID_BODY_TYPE,
    dae_ID_RIGID_BODY_TYPE_TECHNIQUE_COMMON,
    dae_ID_RIGID_BODY_TYPE_TECHNIQUE_COMMON_DYNAMIC,
    dae_ID_RIGID_BODY_TYPE_TECHNIQUE_COMMON_MASS_FRAME,
    dae_ID_RIGID_BODY_TYPE_TECHNIQUE_COMMON_SHAPE,
    dae_ID_RIGID_BODY_TYPE_TECHNIQUE_COMMON_SHAPE_HOLLOW,
    dae_ID_INSTANCE_RIGID_BODY_TYPE,
    dae_ID_INSTANCE_RIGID_BODY_TYPE_TECHNIQUE_COMMON,
    dae_ID_INSTANCE_RIGID_BODY_TYPE_TECHNIQUE_COMMON_DYNAMIC,
    dae_ID_INSTANCE_RIGID_BODY_TYPE_TECHNIQUE_COMMON_MASS_FRAME,
    dae_ID_INSTANCE_RIGID_BODY_TYPE_TECHNIQUE_COMMON_SHAPE,
    dae_ID_INSTANCE_RIGID_BODY_TYPE_TECHNIQUE_COMMON_SHAPE_HOLLOW,
    dae_ID_INSTANCE_PHYSICS_MODEL_TYPE,
    dae_ID_PHYSICS_MODEL_TYPE,
    dae_ID_LIBRARY_PHYSICS_MODELS_TYPE,
    dae_ID_PHYSICS_SCENE_TYPE,
    dae_ID_PHYSICS_SCENE_TYPE_TECHNIQUE_COMMON,
    dae_ID_LIBRARY_PHYSICS_SCENES_TYPE,
    dae_ID_KINEMATICS_NEWPARAM_TYPE,
    dae_ID_KINEMATICS_FRAME_TYPE,
    dae_ID_COMMON_PARAM_TYPE,
    dae_ID_COMMON_BOOL_OR_PARAM_TYPE,
    dae_ID_COMMON_FLOAT_OR_PARAM_TYPE,
    dae_ID_KINEMATICS_LIMITS_TYPE,
    dae_ID_COMMON_SIDREF_OR_PARAM_TYPE,
    dae_ID_BIND_JOINT_AXIS_TYPE,
    dae_ID_BIND_KINEMATICS_MODEL_TYPE,
    dae_ID_KINEMATICS_CONNECT_PARAM_TYPE,
    dae_ID_KINEMATICS_SETPARAM_TYPE,
    dae_ID_INSTANCE_KINEMATICS_SCENE_TYPE,
    dae_ID_KINEMATICS_INDEX_TYPE,
    dae_ID_KINEMATICS_PARAM_TYPE,
    dae_ID_KINEMATICS_BIND_TYPE,
    dae_ID_MOTION_AXIS_INFO_TYPE,
    dae_ID_INSTANCE_KINEMATICS_MODEL_TYPE,
    dae_ID_INSTANCE_ARTICULATED_SYSTEM_TYPE,
    dae_ID_KINEMATICS_SCENE_TYPE,
    dae_ID_LIBRARY_KINEMATICS_SCENES_TYPE,
    dae_ID_COMMON_FLOAT2_OR_PARAM_TYPE,
    dae_ID_MOTION_EFFECTOR_INFO_TYPE,
    dae_ID_MOTION_TECHNIQUE_TYPE,
    dae_ID_MOTION_TYPE,
    dae_ID_MINMAX_TYPE,
    dae_ID_JOINT_LIMITS_TYPE,
    dae_ID_AXIS_TYPE,
    dae_ID_AXIS_CONSTRAINT_TYPE,
    dae_ID_JOINT_TYPE,
    dae_ID_LIBRARY_JOINTS_TYPE,
    dae_ID_FORMULA_TECHNIQUE_TYPE,
    dae_ID_FORMULA_NEWPARAM_TYPE,
    dae_ID_FORMULA_SETPARAM_TYPE,
    dae_ID_INSTANCE_FORMULA_TYPE,
    dae_ID_ANIMATION_CLIP_TYPE,
    dae_ID_LIBRARY_ANIMATION_CLIPS_TYPE,
    dae_ID_FORMULA_TYPE,
    dae_ID_KINEMATICS_MODEL_TECHNIQUE_TYPE,
    dae_ID_KINEMATICS_MODEL_TYPE,
    dae_ID_LIBRARY_KINEMATICS_MODELS_TYPE,
    dae_ID_KINEMATICS_AXIS_INFO_TYPE,
    dae_ID_KINEMATICS_TECHNIQUE_TYPE,
    dae_ID_KINEMATICS_TYPE,
    dae_ID_ARTICULATED_SYSTEM_TYPE,
    dae_ID_LIBRARY_ARTICULATED_SYSTEMS_TYPE,
    dae_ID_LIBRARY_FORMULAS_TYPE,
    dae_ID_COLLADA,
    dae_ID_COLLADA_SCENE,
    dae_ID_FX_SURFACE_COMMON_TYPE,
    dae_ID_INVALID = -1
};


enum dae_native_typeid_e
{
    /// can be evaluated as int32_t
    dae_NATIVE_BOOL32 = dae_ID_BOOLEAN,
    /// can be evaluated as uint8_t
    dae_NATIVE_HEX8 = dae_ID_HEXBINARY,
    /// can be evaluated as float
    dae_NATIVE_FLOAT = dae_ID_FLOAT,
    /// can be evaluated as int8_t
    dae_NATIVE_INT8 = dae_ID_BYTE,
    /// can be evaluated as int16_t
    dae_NATIVE_INT16 = dae_ID_SHORT,
    /// can be evaluated as int32_t
    dae_NATIVE_INT32 = dae_ID_INT,
    /// can be evaluated as char*
    dae_NATIVE_STRING = dae_ID_STRING,
    /// can be evaluated as uint8_t
    dae_NATIVE_UINT8 = dae_ID_UNSIGNEDBYTE,
    /// can be evaluated as uint32_t
    dae_NATIVE_UINT32 = dae_ID_UNSIGNEDINT
};

//****************************************************************************
// typedefs

typedef enum dae_native_typeid_e dae_native_typeid;
typedef enum dae_obj_typeid_e dae_obj_typeid;

typedef void* dae_obj_ptr;

typedef char* dae_anyURI;
typedef char* dae_dateTime;
typedef float dae_double;
typedef char* dae_ID;
typedef int dae_integer;
typedef int dae_long;
typedef char* dae_Name;
typedef char* dae_NCName;
typedef char* dae_NMTOKEN;
typedef unsigned int dae_nonNegativeInteger;
typedef unsigned int dae_positiveInteger;
typedef char* dae_token;
typedef unsigned int dae_unsignedLong;
typedef void* dae_math;
typedef dae_double dae_float_type;
typedef dae_long dae_int_type;
typedef dae_unsignedLong dae_uint_type;
typedef char* dae_sidref_type;
typedef dae_NCName dae_sid_type;
typedef struct dae_list_of_ints_type_s dae_list_of_ints_type;
typedef struct dae_list_of_names_type_s dae_list_of_names_type;
typedef struct dae_list_of_uints_type_s dae_list_of_uints_type;
typedef int dae_bool2_type[2];
typedef int dae_bool3_type[3];
typedef int dae_bool4_type[4];
typedef int dae_bool2x2_type[4];
typedef int dae_bool2x3_type[6];
typedef int dae_bool2x4_type[8];
typedef int dae_bool3x2_type[6];
typedef int dae_bool3x3_type[9];
typedef int dae_bool3x4_type[12];
typedef int dae_bool4x2_type[8];
typedef int dae_bool4x3_type[12];
typedef int dae_bool4x4_type[16];
typedef dae_float_type dae_float2_type[2];
typedef dae_float_type dae_float3_type[3];
typedef dae_float_type dae_float4_type[4];
typedef dae_float_type dae_float2x2_type[4];
typedef dae_float_type dae_float2x3_type[6];
typedef dae_float_type dae_float2x4_type[8];
typedef dae_float_type dae_float3x2_type[6];
typedef dae_float_type dae_float3x3_type[9];
typedef dae_float_type dae_float3x4_type[12];
typedef dae_float_type dae_float4x2_type[8];
typedef dae_float_type dae_float4x3_type[12];
typedef dae_float_type dae_float4x4_type[16];
typedef dae_int_type dae_int2_type[2];
typedef dae_int_type dae_int3_type[3];
typedef dae_int_type dae_int4_type[4];
typedef dae_int_type dae_int2x2_type[4];
typedef dae_int_type dae_int2x3_type[6];
typedef dae_int_type dae_int2x4_type[8];
typedef dae_int_type dae_int3x2_type[6];
typedef dae_int_type dae_int3x3_type[9];
typedef dae_int_type dae_int3x4_type[12];
typedef dae_int_type dae_int4x2_type[8];
typedef dae_int_type dae_int4x3_type[12];
typedef dae_int_type dae_int4x4_type[16];
typedef unsigned char dae_digits_type;
typedef short dae_magnitude_type;
typedef char* dae_morph_method_enum;
typedef char* dae_node_enum;
typedef char* dae_sampler_behavior_enum;
typedef char* dae_urifragment_type;
typedef char* dae_up_axis_enum;
typedef char* dae_version_enum;
typedef struct dae_input_local_type_s dae_input_local_type;
typedef struct dae_input_local_offset_type_s dae_input_local_offset_type;
typedef struct dae_targetable_float_type_s dae_targetable_float_type;
typedef struct dae_targetable_float3_type_s dae_targetable_float3_type;
typedef struct dae_token_array_type_s dae_token_array_type;
typedef struct dae_idref_array_type_s dae_idref_array_type;
typedef struct dae_name_array_type_s dae_name_array_type;
typedef struct dae_bool_array_type_s dae_bool_array_type;
typedef struct dae_float_array_type_s dae_float_array_type;
typedef struct dae_int_array_type_s dae_int_array_type;
typedef struct dae_param_type_s dae_param_type;
typedef struct dae_accessor_type_s dae_accessor_type;
typedef dae_list_of_uints_type dae_p_type;
typedef struct dae_lookat_type_s dae_lookat_type;
typedef struct dae_matrix_type_s dae_matrix_type;
typedef dae_targetable_float3_type dae_scale_type;
typedef struct dae_skew_type_s dae_skew_type;
typedef dae_targetable_float3_type dae_translate_type;
typedef struct dae_image_source_type_hex_s dae_image_source_type_hex;
typedef struct dae_image_mips_type_s dae_image_mips_type;
typedef char* dae_image_face_enum;
typedef char* dae_image_format_hint_channels_enum;
typedef char* dae_image_format_hint_precision_enum;
typedef char* dae_image_format_hint_range_enum;
typedef struct dae_channel_type_s dae_channel_type;
typedef struct dae_sampler_type_s dae_sampler_type;
typedef char* dae_altitude_mode_enum;
typedef struct dae_technique_type_s dae_technique_type;
typedef struct dae_extra_type_s dae_extra_type;
typedef struct dae_polylist_type_s dae_polylist_type;
typedef struct dae_polygons_type_s dae_polygons_type;
typedef struct dae_polygons_type_ph_s dae_polygons_type_ph;
typedef struct dae_linestrips_type_s dae_linestrips_type;
typedef struct dae_tristrips_type_s dae_tristrips_type;
typedef struct dae_lines_type_s dae_lines_type;
typedef struct dae_triangles_type_s dae_triangles_type;
typedef struct dae_trifans_type_s dae_trifans_type;
typedef struct dae_vertices_type_s dae_vertices_type;
typedef struct dae_asset_type_s dae_asset_type;
typedef struct dae_asset_type_contributor_s dae_asset_type_contributor;
typedef struct dae_asset_type_coverage_s dae_asset_type_coverage;
typedef struct dae_asset_type_coverage_geographic_location_s dae_asset_type_coverage_geographic_location;
typedef struct dae_asset_type_coverage_geographic_location_altitude_s dae_asset_type_coverage_geographic_location_altitude;
typedef struct dae_asset_type_unit_s dae_asset_type_unit;
typedef struct dae_image_type_s dae_image_type;
typedef struct dae_image_type_renderable_s dae_image_type_renderable;
typedef struct dae_image_type_init_from_s dae_image_type_init_from;
typedef struct dae_image_type_create_2d_s dae_image_type_create_2d;
typedef struct dae_image_type_create_2d_size_exact_s dae_image_type_create_2d_size_exact;
typedef struct dae_image_type_create_2d_size_ratio_s dae_image_type_create_2d_size_ratio;
typedef void* dae_image_type_create_2d_unnormalized;
typedef struct dae_image_type_create_2d_array_s dae_image_type_create_2d_array;
typedef struct dae_image_type_create_2d_format_s dae_image_type_create_2d_format;
typedef struct dae_image_type_create_2d_format_hint_s dae_image_type_create_2d_format_hint;
typedef struct dae_image_type_create_2d_init_from_s dae_image_type_create_2d_init_from;
typedef struct dae_image_type_create_3d_s dae_image_type_create_3d;
typedef struct dae_image_type_create_3d_size_s dae_image_type_create_3d_size;
typedef struct dae_image_type_create_3d_array_s dae_image_type_create_3d_array;
typedef struct dae_image_type_create_3d_format_s dae_image_type_create_3d_format;
typedef struct dae_image_type_create_3d_format_hint_s dae_image_type_create_3d_format_hint;
typedef struct dae_image_type_create_3d_init_from_s dae_image_type_create_3d_init_from;
typedef struct dae_image_type_create_cube_s dae_image_type_create_cube;
typedef struct dae_image_type_create_cube_size_s dae_image_type_create_cube_size;
typedef struct dae_image_type_create_cube_array_s dae_image_type_create_cube_array;
typedef struct dae_image_type_create_cube_format_s dae_image_type_create_cube_format;
typedef struct dae_image_type_create_cube_format_hint_s dae_image_type_create_cube_format_hint;
typedef struct dae_image_type_create_cube_init_from_s dae_image_type_create_cube_init_from;
typedef struct dae_camera_type_s dae_camera_type;
typedef struct dae_camera_type_optics_s dae_camera_type_optics;
typedef struct dae_camera_type_optics_technique_common_s dae_camera_type_optics_technique_common;
typedef struct dae_camera_type_optics_technique_common_orthographic_s dae_camera_type_optics_technique_common_orthographic;
typedef struct dae_camera_type_optics_technique_common_perspective_s dae_camera_type_optics_technique_common_perspective;
typedef struct dae_camera_type_imager_s dae_camera_type_imager;
typedef struct dae_light_type_s dae_light_type;
typedef struct dae_light_type_technique_common_s dae_light_type_technique_common;
typedef struct dae_light_type_technique_common_ambient_s dae_light_type_technique_common_ambient;
typedef struct dae_light_type_technique_common_directional_s dae_light_type_technique_common_directional;
typedef struct dae_light_type_technique_common_point_s dae_light_type_technique_common_point;
typedef struct dae_light_type_technique_common_spot_s dae_light_type_technique_common_spot;
typedef struct dae_instance_with_extra_type_s dae_instance_with_extra_type;
typedef dae_instance_with_extra_type dae_instance_image_type;
typedef dae_instance_with_extra_type dae_instance_camera_type;
typedef dae_instance_with_extra_type dae_instance_force_field_type;
typedef dae_instance_with_extra_type dae_instance_light_type;
typedef struct dae_instance_material_type_s dae_instance_material_type;
typedef struct dae_instance_material_type_bind_s dae_instance_material_type_bind;
typedef struct dae_instance_material_type_bind_vertex_input_s dae_instance_material_type_bind_vertex_input;
typedef struct dae_bind_material_type_s dae_bind_material_type;
typedef struct dae_bind_material_type_technique_common_s dae_bind_material_type_technique_common;
typedef struct dae_instance_controller_type_s dae_instance_controller_type;
typedef struct dae_instance_geometry_type_s dae_instance_geometry_type;
typedef struct dae_instance_node_type_s dae_instance_node_type;
typedef dae_instance_with_extra_type dae_instance_physics_material_type;
typedef struct dae_instance_rigid_constraint_type_s dae_instance_rigid_constraint_type;
typedef struct dae_library_cameras_type_s dae_library_cameras_type;
typedef struct dae_library_images_type_s dae_library_images_type;
typedef struct dae_library_lights_type_s dae_library_lights_type;
typedef dae_float4_type dae_fx_color_type;
typedef char* dae_fx_opaque_enum;
typedef dae_NMTOKEN dae_fx_sampler_wrap_enum;
typedef dae_NMTOKEN dae_fx_sampler_min_filter_enum;
typedef dae_NMTOKEN dae_fx_sampler_mag_filter_enum;
typedef dae_NMTOKEN dae_fx_sampler_mip_filter_enum;
typedef struct dae_fx_setparam_group_sampler_states_s dae_fx_setparam_group_sampler_states;
typedef struct dae_instance_effect_type_s dae_instance_effect_type;
typedef struct dae_instance_effect_type_technique_hint_s dae_instance_effect_type_technique_hint;
typedef struct dae_instance_effect_type_setparam_s dae_instance_effect_type_setparam;
typedef struct dae_material_type_s dae_material_type;
typedef struct dae_library_materials_type_s dae_library_materials_type;
typedef struct dae_fx_sampler_type_s dae_fx_sampler_type;
typedef dae_fx_sampler_type dae_fx_sampler1D_type;
typedef struct dae_fx_sampler2D_type_s dae_fx_sampler2D_type;
typedef dae_fx_sampler_type dae_fx_sampler3D_type;
typedef dae_fx_sampler_type dae_fx_samplerCUBE_type;
typedef dae_fx_sampler_type dae_fx_samplerRECT_type;
typedef dae_fx_sampler_type dae_fx_samplerDEPTH_type;
typedef dae_NMTOKEN dae_fx_modifier_enum;
typedef struct dae_fx_rendertarget_type_s dae_fx_rendertarget_type;
typedef struct dae_fx_rendertarget_type_param_s dae_fx_rendertarget_type_param;
typedef dae_fx_rendertarget_type dae_fx_colortarget_type;
typedef dae_fx_rendertarget_type dae_fx_depthtarget_type;
typedef dae_fx_rendertarget_type dae_fx_stenciltarget_type;
typedef struct dae_fx_clearcolor_type_s dae_fx_clearcolor_type;
typedef struct dae_fx_cleardepth_type_s dae_fx_cleardepth_type;
typedef struct dae_fx_clearstencil_type_s dae_fx_clearstencil_type;
typedef char* dae_fx_draw_type;
typedef char* dae_fx_pipeline_stage_enum;
typedef struct dae_fx_annotate_type_s dae_fx_annotate_type;
typedef struct dae_fx_newparam_type_s dae_fx_newparam_type;
typedef struct dae_fx_include_type_s dae_fx_include_type;
typedef struct dae_fx_code_type_s dae_fx_code_type;
typedef struct dae_fx_sources_type_s dae_fx_sources_type;
typedef struct dae_fx_sources_type_import_s dae_fx_sources_type_import;
typedef struct dae_fx_target_type_s dae_fx_target_type;
typedef struct dae_fx_target_type_binary_s dae_fx_target_type_binary;
typedef struct dae_fx_target_type_binary_hex_s dae_fx_target_type_binary_hex;
typedef struct dae_fx_common_float_or_param_type_s dae_fx_common_float_or_param_type;
typedef struct dae_fx_common_float_or_param_type_float_s dae_fx_common_float_or_param_type_float;
typedef struct dae_fx_common_float_or_param_type_param_s dae_fx_common_float_or_param_type_param;
typedef struct dae_fx_common_color_or_texture_type_s dae_fx_common_color_or_texture_type;
typedef struct dae_fx_common_color_or_texture_type_color_s dae_fx_common_color_or_texture_type_color;
typedef struct dae_fx_common_color_or_texture_type_param_s dae_fx_common_color_or_texture_type_param;
typedef struct dae_fx_common_color_or_texture_type_texture_s dae_fx_common_color_or_texture_type_texture;
typedef struct dae_fx_common_transparent_type_s dae_fx_common_transparent_type;
typedef struct dae_fx_common_newparam_type_s dae_fx_common_newparam_type;
typedef struct dae_profile_common_type_s dae_profile_common_type;
typedef struct dae_profile_common_type_technique_s dae_profile_common_type_technique;
typedef struct dae_profile_common_type_technique_constant_s dae_profile_common_type_technique_constant;
typedef struct dae_profile_common_type_technique_lambert_s dae_profile_common_type_technique_lambert;
typedef struct dae_profile_common_type_technique_phong_s dae_profile_common_type_technique_phong;
typedef struct dae_profile_common_type_technique_blinn_s dae_profile_common_type_technique_blinn;
typedef struct dae_profile_bridge_type_s dae_profile_bridge_type;
typedef dae_nonNegativeInteger dae_gl_max_lights_index_type;
typedef dae_nonNegativeInteger dae_gl_max_clip_planes_index_type;
typedef dae_nonNegativeInteger dae_gl_max_texture_image_units_index_type;
typedef char* dae_gl_blend_enum;
typedef char* dae_gl_face_enum;
typedef char* dae_gl_blend_equation_enum;
typedef char* dae_gl_func_enum;
typedef char* dae_gl_stencil_op_enum;
typedef char* dae_gl_material_enum;
typedef char* dae_gl_fog_enum;
typedef char* dae_gl_fog_coord_src_enum;
typedef char* dae_gl_front_face_enum;
typedef char* dae_gl_light_model_color_control_enum;
typedef char* dae_gl_logic_op_enum;
typedef char* dae_gl_polygon_mode_enum;
typedef char* dae_gl_shade_model_enum;
typedef float dae_gl_alpha_value_type;
typedef char* dae_gl_enumeration_type;
typedef struct dae_gl_pipeline_settings_group_alpha_func_s dae_gl_pipeline_settings_group_alpha_func;
typedef struct dae_gl_pipeline_settings_group_alpha_func_func_s dae_gl_pipeline_settings_group_alpha_func_func;
typedef struct dae_gl_pipeline_settings_group_alpha_func_value_s dae_gl_pipeline_settings_group_alpha_func_value;
typedef struct dae_gl_pipeline_settings_group_blend_func_s dae_gl_pipeline_settings_group_blend_func;
typedef struct dae_gl_pipeline_settings_group_blend_func_src_s dae_gl_pipeline_settings_group_blend_func_src;
typedef struct dae_gl_pipeline_settings_group_blend_func_dest_s dae_gl_pipeline_settings_group_blend_func_dest;
typedef struct dae_gl_pipeline_settings_group_blend_func_separate_s dae_gl_pipeline_settings_group_blend_func_separate;
typedef struct dae_gl_pipeline_settings_group_blend_func_separate_src_rgb_s dae_gl_pipeline_settings_group_blend_func_separate_src_rgb;
typedef struct dae_gl_pipeline_settings_group_blend_func_separate_dest_rgb_s dae_gl_pipeline_settings_group_blend_func_separate_dest_rgb;
typedef struct dae_gl_pipeline_settings_group_blend_func_separate_src_alpha_s dae_gl_pipeline_settings_group_blend_func_separate_src_alpha;
typedef struct dae_gl_pipeline_settings_group_blend_func_separate_dest_alpha_s dae_gl_pipeline_settings_group_blend_func_separate_dest_alpha;
typedef struct dae_gl_pipeline_settings_group_blend_equation_s dae_gl_pipeline_settings_group_blend_equation;
typedef struct dae_gl_pipeline_settings_group_blend_equation_separate_s dae_gl_pipeline_settings_group_blend_equation_separate;
typedef struct dae_gl_pipeline_settings_group_blend_equation_separate_rgb_s dae_gl_pipeline_settings_group_blend_equation_separate_rgb;
typedef struct dae_gl_pipeline_settings_group_blend_equation_separate_alpha_s dae_gl_pipeline_settings_group_blend_equation_separate_alpha;
typedef struct dae_gl_pipeline_settings_group_color_material_s dae_gl_pipeline_settings_group_color_material;
typedef struct dae_gl_pipeline_settings_group_color_material_face_s dae_gl_pipeline_settings_group_color_material_face;
typedef struct dae_gl_pipeline_settings_group_color_material_mode_s dae_gl_pipeline_settings_group_color_material_mode;
typedef struct dae_gl_pipeline_settings_group_cull_face_s dae_gl_pipeline_settings_group_cull_face;
typedef struct dae_gl_pipeline_settings_group_depth_func_s dae_gl_pipeline_settings_group_depth_func;
typedef struct dae_gl_pipeline_settings_group_fog_mode_s dae_gl_pipeline_settings_group_fog_mode;
typedef struct dae_gl_pipeline_settings_group_fog_coord_src_s dae_gl_pipeline_settings_group_fog_coord_src;
typedef struct dae_gl_pipeline_settings_group_front_face_s dae_gl_pipeline_settings_group_front_face;
typedef struct dae_gl_pipeline_settings_group_light_model_color_control_s dae_gl_pipeline_settings_group_light_model_color_control;
typedef struct dae_gl_pipeline_settings_group_logic_op_s dae_gl_pipeline_settings_group_logic_op;
typedef struct dae_gl_pipeline_settings_group_polygon_mode_s dae_gl_pipeline_settings_group_polygon_mode;
typedef struct dae_gl_pipeline_settings_group_polygon_mode_face_s dae_gl_pipeline_settings_group_polygon_mode_face;
typedef struct dae_gl_pipeline_settings_group_polygon_mode_mode_s dae_gl_pipeline_settings_group_polygon_mode_mode;
typedef struct dae_gl_pipeline_settings_group_shade_model_s dae_gl_pipeline_settings_group_shade_model;
typedef struct dae_gl_pipeline_settings_group_stencil_func_s dae_gl_pipeline_settings_group_stencil_func;
typedef struct dae_gl_pipeline_settings_group_stencil_func_func_s dae_gl_pipeline_settings_group_stencil_func_func;
typedef struct dae_gl_pipeline_settings_group_stencil_func_ref_s dae_gl_pipeline_settings_group_stencil_func_ref;
typedef struct dae_gl_pipeline_settings_group_stencil_func_mask_s dae_gl_pipeline_settings_group_stencil_func_mask;
typedef struct dae_gl_pipeline_settings_group_stencil_op_s dae_gl_pipeline_settings_group_stencil_op;
typedef struct dae_gl_pipeline_settings_group_stencil_op_fail_s dae_gl_pipeline_settings_group_stencil_op_fail;
typedef struct dae_gl_pipeline_settings_group_stencil_op_zfail_s dae_gl_pipeline_settings_group_stencil_op_zfail;
typedef struct dae_gl_pipeline_settings_group_stencil_op_zpass_s dae_gl_pipeline_settings_group_stencil_op_zpass;
typedef struct dae_gl_pipeline_settings_group_stencil_func_separate_s dae_gl_pipeline_settings_group_stencil_func_separate;
typedef struct dae_gl_pipeline_settings_group_stencil_func_separate_front_s dae_gl_pipeline_settings_group_stencil_func_separate_front;
typedef struct dae_gl_pipeline_settings_group_stencil_func_separate_back_s dae_gl_pipeline_settings_group_stencil_func_separate_back;
typedef struct dae_gl_pipeline_settings_group_stencil_func_separate_ref_s dae_gl_pipeline_settings_group_stencil_func_separate_ref;
typedef struct dae_gl_pipeline_settings_group_stencil_func_separate_mask_s dae_gl_pipeline_settings_group_stencil_func_separate_mask;
typedef struct dae_gl_pipeline_settings_group_stencil_op_separate_s dae_gl_pipeline_settings_group_stencil_op_separate;
typedef struct dae_gl_pipeline_settings_group_stencil_op_separate_face_s dae_gl_pipeline_settings_group_stencil_op_separate_face;
typedef struct dae_gl_pipeline_settings_group_stencil_op_separate_fail_s dae_gl_pipeline_settings_group_stencil_op_separate_fail;
typedef struct dae_gl_pipeline_settings_group_stencil_op_separate_zfail_s dae_gl_pipeline_settings_group_stencil_op_separate_zfail;
typedef struct dae_gl_pipeline_settings_group_stencil_op_separate_zpass_s dae_gl_pipeline_settings_group_stencil_op_separate_zpass;
typedef struct dae_gl_pipeline_settings_group_stencil_mask_separate_s dae_gl_pipeline_settings_group_stencil_mask_separate;
typedef struct dae_gl_pipeline_settings_group_stencil_mask_separate_face_s dae_gl_pipeline_settings_group_stencil_mask_separate_face;
typedef struct dae_gl_pipeline_settings_group_stencil_mask_separate_mask_s dae_gl_pipeline_settings_group_stencil_mask_separate_mask;
typedef struct dae_gl_pipeline_settings_group_light_enable_s dae_gl_pipeline_settings_group_light_enable;
typedef struct dae_gl_pipeline_settings_group_light_ambient_s dae_gl_pipeline_settings_group_light_ambient;
typedef struct dae_gl_pipeline_settings_group_light_diffuse_s dae_gl_pipeline_settings_group_light_diffuse;
typedef struct dae_gl_pipeline_settings_group_light_specular_s dae_gl_pipeline_settings_group_light_specular;
typedef struct dae_gl_pipeline_settings_group_light_position_s dae_gl_pipeline_settings_group_light_position;
typedef struct dae_gl_pipeline_settings_group_light_constant_attenuation_s dae_gl_pipeline_settings_group_light_constant_attenuation;
typedef struct dae_gl_pipeline_settings_group_light_linear_attenuation_s dae_gl_pipeline_settings_group_light_linear_attenuation;
typedef struct dae_gl_pipeline_settings_group_light_quadratic_attenuation_s dae_gl_pipeline_settings_group_light_quadratic_attenuation;
typedef struct dae_gl_pipeline_settings_group_light_spot_cutoff_s dae_gl_pipeline_settings_group_light_spot_cutoff;
typedef struct dae_gl_pipeline_settings_group_light_spot_direction_s dae_gl_pipeline_settings_group_light_spot_direction;
typedef struct dae_gl_pipeline_settings_group_light_spot_exponent_s dae_gl_pipeline_settings_group_light_spot_exponent;
typedef struct dae_gl_pipeline_settings_group_texture1D_s dae_gl_pipeline_settings_group_texture1D;
typedef struct dae_gl_pipeline_settings_group_texture2D_s dae_gl_pipeline_settings_group_texture2D;
typedef struct dae_gl_pipeline_settings_group_texture3D_s dae_gl_pipeline_settings_group_texture3D;
typedef struct dae_gl_pipeline_settings_group_textureCUBE_s dae_gl_pipeline_settings_group_textureCUBE;
typedef struct dae_gl_pipeline_settings_group_textureRECT_s dae_gl_pipeline_settings_group_textureRECT;
typedef struct dae_gl_pipeline_settings_group_textureDEPTH_s dae_gl_pipeline_settings_group_textureDEPTH;
typedef struct dae_gl_pipeline_settings_group_texture1D_enable_s dae_gl_pipeline_settings_group_texture1D_enable;
typedef struct dae_gl_pipeline_settings_group_texture2D_enable_s dae_gl_pipeline_settings_group_texture2D_enable;
typedef struct dae_gl_pipeline_settings_group_texture3D_enable_s dae_gl_pipeline_settings_group_texture3D_enable;
typedef struct dae_gl_pipeline_settings_group_textureCUBE_enable_s dae_gl_pipeline_settings_group_textureCUBE_enable;
typedef struct dae_gl_pipeline_settings_group_textureRECT_enable_s dae_gl_pipeline_settings_group_textureRECT_enable;
typedef struct dae_gl_pipeline_settings_group_textureDEPTH_enable_s dae_gl_pipeline_settings_group_textureDEPTH_enable;
typedef struct dae_gl_pipeline_settings_group_texture_env_color_s dae_gl_pipeline_settings_group_texture_env_color;
typedef struct dae_gl_pipeline_settings_group_texture_env_mode_s dae_gl_pipeline_settings_group_texture_env_mode;
typedef struct dae_gl_pipeline_settings_group_clip_plane_s dae_gl_pipeline_settings_group_clip_plane;
typedef struct dae_gl_pipeline_settings_group_clip_plane_enable_s dae_gl_pipeline_settings_group_clip_plane_enable;
typedef struct dae_gl_pipeline_settings_group_blend_color_s dae_gl_pipeline_settings_group_blend_color;
typedef struct dae_gl_pipeline_settings_group_color_mask_s dae_gl_pipeline_settings_group_color_mask;
typedef struct dae_gl_pipeline_settings_group_depth_bounds_s dae_gl_pipeline_settings_group_depth_bounds;
typedef struct dae_gl_pipeline_settings_group_depth_mask_s dae_gl_pipeline_settings_group_depth_mask;
typedef struct dae_gl_pipeline_settings_group_depth_range_s dae_gl_pipeline_settings_group_depth_range;
typedef struct dae_gl_pipeline_settings_group_fog_density_s dae_gl_pipeline_settings_group_fog_density;
typedef struct dae_gl_pipeline_settings_group_fog_start_s dae_gl_pipeline_settings_group_fog_start;
typedef struct dae_gl_pipeline_settings_group_fog_end_s dae_gl_pipeline_settings_group_fog_end;
typedef struct dae_gl_pipeline_settings_group_fog_color_s dae_gl_pipeline_settings_group_fog_color;
typedef struct dae_gl_pipeline_settings_group_light_model_ambient_s dae_gl_pipeline_settings_group_light_model_ambient;
typedef struct dae_gl_pipeline_settings_group_lighting_enable_s dae_gl_pipeline_settings_group_lighting_enable;
typedef struct dae_gl_pipeline_settings_group_line_stipple_s dae_gl_pipeline_settings_group_line_stipple;
typedef struct dae_gl_pipeline_settings_group_line_width_s dae_gl_pipeline_settings_group_line_width;
typedef struct dae_gl_pipeline_settings_group_material_ambient_s dae_gl_pipeline_settings_group_material_ambient;
typedef struct dae_gl_pipeline_settings_group_material_diffuse_s dae_gl_pipeline_settings_group_material_diffuse;
typedef struct dae_gl_pipeline_settings_group_material_emission_s dae_gl_pipeline_settings_group_material_emission;
typedef struct dae_gl_pipeline_settings_group_material_shininess_s dae_gl_pipeline_settings_group_material_shininess;
typedef struct dae_gl_pipeline_settings_group_material_specular_s dae_gl_pipeline_settings_group_material_specular;
typedef struct dae_gl_pipeline_settings_group_model_view_matrix_s dae_gl_pipeline_settings_group_model_view_matrix;
typedef struct dae_gl_pipeline_settings_group_point_distance_attenuation_s dae_gl_pipeline_settings_group_point_distance_attenuation;
typedef struct dae_gl_pipeline_settings_group_point_fade_threshold_size_s dae_gl_pipeline_settings_group_point_fade_threshold_size;
typedef struct dae_gl_pipeline_settings_group_point_size_s dae_gl_pipeline_settings_group_point_size;
typedef struct dae_gl_pipeline_settings_group_point_size_min_s dae_gl_pipeline_settings_group_point_size_min;
typedef struct dae_gl_pipeline_settings_group_point_size_max_s dae_gl_pipeline_settings_group_point_size_max;
typedef struct dae_gl_pipeline_settings_group_polygon_offset_s dae_gl_pipeline_settings_group_polygon_offset;
typedef struct dae_gl_pipeline_settings_group_projection_matrix_s dae_gl_pipeline_settings_group_projection_matrix;
typedef struct dae_gl_pipeline_settings_group_scissor_s dae_gl_pipeline_settings_group_scissor;
typedef struct dae_gl_pipeline_settings_group_stencil_mask_s dae_gl_pipeline_settings_group_stencil_mask;
typedef struct dae_gl_pipeline_settings_group_alpha_test_enable_s dae_gl_pipeline_settings_group_alpha_test_enable;
typedef struct dae_gl_pipeline_settings_group_blend_enable_s dae_gl_pipeline_settings_group_blend_enable;
typedef struct dae_gl_pipeline_settings_group_color_logic_op_enable_s dae_gl_pipeline_settings_group_color_logic_op_enable;
typedef struct dae_gl_pipeline_settings_group_color_material_enable_s dae_gl_pipeline_settings_group_color_material_enable;
typedef struct dae_gl_pipeline_settings_group_cull_face_enable_s dae_gl_pipeline_settings_group_cull_face_enable;
typedef struct dae_gl_pipeline_settings_group_depth_bounds_enable_s dae_gl_pipeline_settings_group_depth_bounds_enable;
typedef struct dae_gl_pipeline_settings_group_depth_clamp_enable_s dae_gl_pipeline_settings_group_depth_clamp_enable;
typedef struct dae_gl_pipeline_settings_group_depth_test_enable_s dae_gl_pipeline_settings_group_depth_test_enable;
typedef struct dae_gl_pipeline_settings_group_dither_enable_s dae_gl_pipeline_settings_group_dither_enable;
typedef struct dae_gl_pipeline_settings_group_fog_enable_s dae_gl_pipeline_settings_group_fog_enable;
typedef struct dae_gl_pipeline_settings_group_light_model_local_viewer_enable_s dae_gl_pipeline_settings_group_light_model_local_viewer_enable;
typedef struct dae_gl_pipeline_settings_group_light_model_two_side_enable_s dae_gl_pipeline_settings_group_light_model_two_side_enable;
typedef struct dae_gl_pipeline_settings_group_line_smooth_enable_s dae_gl_pipeline_settings_group_line_smooth_enable;
typedef struct dae_gl_pipeline_settings_group_line_stipple_enable_s dae_gl_pipeline_settings_group_line_stipple_enable;
typedef struct dae_gl_pipeline_settings_group_logic_op_enable_s dae_gl_pipeline_settings_group_logic_op_enable;
typedef struct dae_gl_pipeline_settings_group_multisample_enable_s dae_gl_pipeline_settings_group_multisample_enable;
typedef struct dae_gl_pipeline_settings_group_normalize_enable_s dae_gl_pipeline_settings_group_normalize_enable;
typedef struct dae_gl_pipeline_settings_group_point_smooth_enable_s dae_gl_pipeline_settings_group_point_smooth_enable;
typedef struct dae_gl_pipeline_settings_group_polygon_offset_fill_enable_s dae_gl_pipeline_settings_group_polygon_offset_fill_enable;
typedef struct dae_gl_pipeline_settings_group_polygon_offset_line_enable_s dae_gl_pipeline_settings_group_polygon_offset_line_enable;
typedef struct dae_gl_pipeline_settings_group_polygon_offset_point_enable_s dae_gl_pipeline_settings_group_polygon_offset_point_enable;
typedef struct dae_gl_pipeline_settings_group_polygon_smooth_enable_s dae_gl_pipeline_settings_group_polygon_smooth_enable;
typedef struct dae_gl_pipeline_settings_group_polygon_stipple_enable_s dae_gl_pipeline_settings_group_polygon_stipple_enable;
typedef struct dae_gl_pipeline_settings_group_rescale_normal_enable_s dae_gl_pipeline_settings_group_rescale_normal_enable;
typedef struct dae_gl_pipeline_settings_group_sample_alpha_to_coverage_enable_s dae_gl_pipeline_settings_group_sample_alpha_to_coverage_enable;
typedef struct dae_gl_pipeline_settings_group_sample_alpha_to_one_enable_s dae_gl_pipeline_settings_group_sample_alpha_to_one_enable;
typedef struct dae_gl_pipeline_settings_group_sample_coverage_enable_s dae_gl_pipeline_settings_group_sample_coverage_enable;
typedef struct dae_gl_pipeline_settings_group_scissor_test_enable_s dae_gl_pipeline_settings_group_scissor_test_enable;
typedef struct dae_gl_pipeline_settings_group_stencil_test_enable_s dae_gl_pipeline_settings_group_stencil_test_enable;
typedef struct dae_gles2_pipeline_settings_group_blend_color_s dae_gles2_pipeline_settings_group_blend_color;
typedef struct dae_gles2_pipeline_settings_group_blend_equation_s dae_gles2_pipeline_settings_group_blend_equation;
typedef struct dae_gles2_pipeline_settings_group_blend_equation_separate_s dae_gles2_pipeline_settings_group_blend_equation_separate;
typedef struct dae_gles2_pipeline_settings_group_blend_equation_separate_rgb_s dae_gles2_pipeline_settings_group_blend_equation_separate_rgb;
typedef struct dae_gles2_pipeline_settings_group_blend_equation_separate_alpha_s dae_gles2_pipeline_settings_group_blend_equation_separate_alpha;
typedef struct dae_gles2_pipeline_settings_group_blend_func_s dae_gles2_pipeline_settings_group_blend_func;
typedef struct dae_gles2_pipeline_settings_group_blend_func_src_s dae_gles2_pipeline_settings_group_blend_func_src;
typedef struct dae_gles2_pipeline_settings_group_blend_func_dest_s dae_gles2_pipeline_settings_group_blend_func_dest;
typedef struct dae_gles2_pipeline_settings_group_blend_func_separate_s dae_gles2_pipeline_settings_group_blend_func_separate;
typedef struct dae_gles2_pipeline_settings_group_blend_func_separate_src_rgb_s dae_gles2_pipeline_settings_group_blend_func_separate_src_rgb;
typedef struct dae_gles2_pipeline_settings_group_blend_func_separate_dest_rgb_s dae_gles2_pipeline_settings_group_blend_func_separate_dest_rgb;
typedef struct dae_gles2_pipeline_settings_group_blend_func_separate_src_alpha_s dae_gles2_pipeline_settings_group_blend_func_separate_src_alpha;
typedef struct dae_gles2_pipeline_settings_group_blend_func_separate_dest_alpha_s dae_gles2_pipeline_settings_group_blend_func_separate_dest_alpha;
typedef struct dae_gles2_pipeline_settings_group_color_mask_s dae_gles2_pipeline_settings_group_color_mask;
typedef struct dae_gles2_pipeline_settings_group_cull_face_s dae_gles2_pipeline_settings_group_cull_face;
typedef struct dae_gles2_pipeline_settings_group_depth_func_s dae_gles2_pipeline_settings_group_depth_func;
typedef struct dae_gles2_pipeline_settings_group_depth_mask_s dae_gles2_pipeline_settings_group_depth_mask;
typedef struct dae_gles2_pipeline_settings_group_depth_range_s dae_gles2_pipeline_settings_group_depth_range;
typedef struct dae_gles2_pipeline_settings_group_front_face_s dae_gles2_pipeline_settings_group_front_face;
typedef struct dae_gles2_pipeline_settings_group_line_width_s dae_gles2_pipeline_settings_group_line_width;
typedef struct dae_gles2_pipeline_settings_group_polygon_offset_s dae_gles2_pipeline_settings_group_polygon_offset;
typedef struct dae_gles2_pipeline_settings_group_point_size_s dae_gles2_pipeline_settings_group_point_size;
typedef struct dae_gles2_pipeline_settings_group_sample_coverage_s dae_gles2_pipeline_settings_group_sample_coverage;
typedef struct dae_gles2_pipeline_settings_group_sample_coverage_value_s dae_gles2_pipeline_settings_group_sample_coverage_value;
typedef struct dae_gles2_pipeline_settings_group_sample_coverage_invert_s dae_gles2_pipeline_settings_group_sample_coverage_invert;
typedef struct dae_gles2_pipeline_settings_group_scissor_s dae_gles2_pipeline_settings_group_scissor;
typedef struct dae_gles2_pipeline_settings_group_stencil_func_s dae_gles2_pipeline_settings_group_stencil_func;
typedef struct dae_gles2_pipeline_settings_group_stencil_func_func_s dae_gles2_pipeline_settings_group_stencil_func_func;
typedef struct dae_gles2_pipeline_settings_group_stencil_func_ref_s dae_gles2_pipeline_settings_group_stencil_func_ref;
typedef struct dae_gles2_pipeline_settings_group_stencil_func_mask_s dae_gles2_pipeline_settings_group_stencil_func_mask;
typedef struct dae_gles2_pipeline_settings_group_stencil_func_separate_s dae_gles2_pipeline_settings_group_stencil_func_separate;
typedef struct dae_gles2_pipeline_settings_group_stencil_func_separate_front_s dae_gles2_pipeline_settings_group_stencil_func_separate_front;
typedef struct dae_gles2_pipeline_settings_group_stencil_func_separate_back_s dae_gles2_pipeline_settings_group_stencil_func_separate_back;
typedef struct dae_gles2_pipeline_settings_group_stencil_func_separate_ref_s dae_gles2_pipeline_settings_group_stencil_func_separate_ref;
typedef struct dae_gles2_pipeline_settings_group_stencil_func_separate_mask_s dae_gles2_pipeline_settings_group_stencil_func_separate_mask;
typedef struct dae_gles2_pipeline_settings_group_stencil_mask_s dae_gles2_pipeline_settings_group_stencil_mask;
typedef struct dae_gles2_pipeline_settings_group_stencil_mask_separate_s dae_gles2_pipeline_settings_group_stencil_mask_separate;
typedef struct dae_gles2_pipeline_settings_group_stencil_mask_separate_face_s dae_gles2_pipeline_settings_group_stencil_mask_separate_face;
typedef struct dae_gles2_pipeline_settings_group_stencil_mask_separate_mask_s dae_gles2_pipeline_settings_group_stencil_mask_separate_mask;
typedef struct dae_gles2_pipeline_settings_group_stencil_op_s dae_gles2_pipeline_settings_group_stencil_op;
typedef struct dae_gles2_pipeline_settings_group_stencil_op_fail_s dae_gles2_pipeline_settings_group_stencil_op_fail;
typedef struct dae_gles2_pipeline_settings_group_stencil_op_zfail_s dae_gles2_pipeline_settings_group_stencil_op_zfail;
typedef struct dae_gles2_pipeline_settings_group_stencil_op_zpass_s dae_gles2_pipeline_settings_group_stencil_op_zpass;
typedef struct dae_gles2_pipeline_settings_group_stencil_op_separate_s dae_gles2_pipeline_settings_group_stencil_op_separate;
typedef struct dae_gles2_pipeline_settings_group_stencil_op_separate_face_s dae_gles2_pipeline_settings_group_stencil_op_separate_face;
typedef struct dae_gles2_pipeline_settings_group_stencil_op_separate_fail_s dae_gles2_pipeline_settings_group_stencil_op_separate_fail;
typedef struct dae_gles2_pipeline_settings_group_stencil_op_separate_zfail_s dae_gles2_pipeline_settings_group_stencil_op_separate_zfail;
typedef struct dae_gles2_pipeline_settings_group_stencil_op_separate_zpass_s dae_gles2_pipeline_settings_group_stencil_op_separate_zpass;
typedef struct dae_gles2_pipeline_settings_group_blend_enable_s dae_gles2_pipeline_settings_group_blend_enable;
typedef struct dae_gles2_pipeline_settings_group_cull_face_enable_s dae_gles2_pipeline_settings_group_cull_face_enable;
typedef struct dae_gles2_pipeline_settings_group_depth_test_enable_s dae_gles2_pipeline_settings_group_depth_test_enable;
typedef struct dae_gles2_pipeline_settings_group_dither_enable_s dae_gles2_pipeline_settings_group_dither_enable;
typedef struct dae_gles2_pipeline_settings_group_polygon_offset_fill_enable_s dae_gles2_pipeline_settings_group_polygon_offset_fill_enable;
typedef struct dae_gles2_pipeline_settings_group_point_size_enable_s dae_gles2_pipeline_settings_group_point_size_enable;
typedef struct dae_gles2_pipeline_settings_group_sample_alpha_to_coverage_enable_s dae_gles2_pipeline_settings_group_sample_alpha_to_coverage_enable;
typedef struct dae_gles2_pipeline_settings_group_sample_coverage_enable_s dae_gles2_pipeline_settings_group_sample_coverage_enable;
typedef struct dae_gles2_pipeline_settings_group_scissor_test_enable_s dae_gles2_pipeline_settings_group_scissor_test_enable;
typedef struct dae_gles2_pipeline_settings_group_stencil_test_enable_s dae_gles2_pipeline_settings_group_stencil_test_enable;
typedef struct dae_gles2_value_group_usertype_s dae_gles2_value_group_usertype;
typedef struct dae_gles2_value_group_usertype_setparam_s dae_gles2_value_group_usertype_setparam;
typedef struct dae_gles2_value_group_array_s dae_gles2_value_group_array;
typedef struct dae_gles2_newparam_type_s dae_gles2_newparam_type;
typedef struct dae_gles2_shader_type_s dae_gles2_shader_type;
typedef struct dae_gles2_shader_type_sources_s dae_gles2_shader_type_sources;
typedef struct dae_gles2_program_type_s dae_gles2_program_type;
typedef struct dae_gles2_program_type_bind_attribute_s dae_gles2_program_type_bind_attribute;
typedef struct dae_gles2_program_type_bind_uniform_s dae_gles2_program_type_bind_uniform;
typedef struct dae_gles2_program_type_bind_uniform_param_s dae_gles2_program_type_bind_uniform_param;
typedef struct dae_gles2_pass_type_s dae_gles2_pass_type;
typedef struct dae_gles2_pass_type_states_s dae_gles2_pass_type_states;
typedef struct dae_gles2_pass_type_evaluate_s dae_gles2_pass_type_evaluate;
typedef struct dae_profile_gles2_type_s dae_profile_gles2_type;
typedef struct dae_profile_gles2_type_technique_s dae_profile_gles2_type_technique;
typedef struct dae_glsl_array_type_s dae_glsl_array_type;
typedef struct dae_glsl_newparam_type_s dae_glsl_newparam_type;
typedef struct dae_glsl_shader_type_s dae_glsl_shader_type;
typedef struct dae_glsl_program_type_s dae_glsl_program_type;
typedef struct dae_glsl_program_type_bind_attribute_s dae_glsl_program_type_bind_attribute;
typedef struct dae_glsl_program_type_bind_uniform_s dae_glsl_program_type_bind_uniform;
typedef struct dae_glsl_program_type_bind_uniform_param_s dae_glsl_program_type_bind_uniform_param;
typedef struct dae_profile_glsl_type_s dae_profile_glsl_type;
typedef struct dae_profile_glsl_type_technique_s dae_profile_glsl_type_technique;
typedef struct dae_profile_glsl_type_technique_pass_s dae_profile_glsl_type_technique_pass;
typedef struct dae_profile_glsl_type_technique_pass_states_s dae_profile_glsl_type_technique_pass_states;
typedef struct dae_profile_glsl_type_technique_pass_evaluate_s dae_profile_glsl_type_technique_pass_evaluate;
typedef struct dae_cg_array_type_s dae_cg_array_type;
typedef struct dae_cg_setparam_type_s dae_cg_setparam_type;
typedef struct dae_cg_user_type_s dae_cg_user_type;
typedef struct dae_cg_newparam_type_s dae_cg_newparam_type;
typedef struct dae_cg_pass_type_s dae_cg_pass_type;
typedef struct dae_cg_pass_type_states_s dae_cg_pass_type_states;
typedef struct dae_cg_pass_type_program_s dae_cg_pass_type_program;
typedef struct dae_cg_pass_type_program_shader_s dae_cg_pass_type_program_shader;
typedef struct dae_cg_pass_type_program_shader_sources_s dae_cg_pass_type_program_shader_sources;
typedef struct dae_cg_pass_type_program_shader_bind_uniform_s dae_cg_pass_type_program_shader_bind_uniform;
typedef struct dae_cg_pass_type_program_shader_bind_uniform_param_s dae_cg_pass_type_program_shader_bind_uniform_param;
typedef struct dae_cg_pass_type_evaluate_s dae_cg_pass_type_evaluate;
typedef struct dae_profile_cg_type_s dae_profile_cg_type;
typedef struct dae_profile_cg_type_technique_s dae_profile_cg_type_technique;
typedef dae_nonNegativeInteger dae_gles_max_lights_index_type;
typedef dae_nonNegativeInteger dae_gles_max_clip_planes_index_type;
typedef dae_token dae_gles_texenv_mode_enum;
typedef struct dae_gles_texture_constant_type_s dae_gles_texture_constant_type;
typedef struct dae_gles_texenv_command_type_s dae_gles_texenv_command_type;
typedef dae_token dae_gles_texcombiner_operator_rgb_enum;
typedef dae_token dae_gles_texcombiner_operator_alpha_enum;
typedef dae_token dae_gles_texcombiner_source_enum;
typedef dae_gl_blend_enum dae_gles_texcombiner_operand_rgb_enum;
typedef dae_gl_blend_enum dae_gles_texcombiner_operand_alpha_enum;
typedef struct dae_gles_texcombiner_argument_rgb_type_s dae_gles_texcombiner_argument_rgb_type;
typedef struct dae_gles_texcombiner_argument_alpha_type_s dae_gles_texcombiner_argument_alpha_type;
typedef struct dae_gles_texcombiner_command_rgb_type_s dae_gles_texcombiner_command_rgb_type;
typedef struct dae_gles_texcombiner_command_alpha_type_s dae_gles_texcombiner_command_alpha_type;
typedef struct dae_gles_texcombiner_command_type_s dae_gles_texcombiner_command_type;
typedef struct dae_gles_texture_pipeline_type_s dae_gles_texture_pipeline_type;
typedef dae_NMTOKEN dae_gles_sampler_wrap_enum;
typedef struct dae_gles_sampler_type_s dae_gles_sampler_type;
typedef struct dae_gles_sampler_type_texcoord_s dae_gles_sampler_type_texcoord;
typedef char* dae_gles_stencil_op_enum;
typedef char* dae_gles_enumeration_type;
typedef struct dae_gles_pipeline_settings_group_alpha_func_s dae_gles_pipeline_settings_group_alpha_func;
typedef struct dae_gles_pipeline_settings_group_alpha_func_func_s dae_gles_pipeline_settings_group_alpha_func_func;
typedef struct dae_gles_pipeline_settings_group_alpha_func_value_s dae_gles_pipeline_settings_group_alpha_func_value;
typedef struct dae_gles_pipeline_settings_group_blend_func_s dae_gles_pipeline_settings_group_blend_func;
typedef struct dae_gles_pipeline_settings_group_blend_func_src_s dae_gles_pipeline_settings_group_blend_func_src;
typedef struct dae_gles_pipeline_settings_group_blend_func_dest_s dae_gles_pipeline_settings_group_blend_func_dest;
typedef struct dae_gles_pipeline_settings_group_clip_plane_s dae_gles_pipeline_settings_group_clip_plane;
typedef struct dae_gles_pipeline_settings_group_color_mask_s dae_gles_pipeline_settings_group_color_mask;
typedef struct dae_gles_pipeline_settings_group_cull_face_s dae_gles_pipeline_settings_group_cull_face;
typedef struct dae_gles_pipeline_settings_group_depth_func_s dae_gles_pipeline_settings_group_depth_func;
typedef struct dae_gles_pipeline_settings_group_depth_mask_s dae_gles_pipeline_settings_group_depth_mask;
typedef struct dae_gles_pipeline_settings_group_depth_range_s dae_gles_pipeline_settings_group_depth_range;
typedef struct dae_gles_pipeline_settings_group_fog_color_s dae_gles_pipeline_settings_group_fog_color;
typedef struct dae_gles_pipeline_settings_group_fog_density_s dae_gles_pipeline_settings_group_fog_density;
typedef struct dae_gles_pipeline_settings_group_fog_mode_s dae_gles_pipeline_settings_group_fog_mode;
typedef struct dae_gles_pipeline_settings_group_fog_start_s dae_gles_pipeline_settings_group_fog_start;
typedef struct dae_gles_pipeline_settings_group_fog_end_s dae_gles_pipeline_settings_group_fog_end;
typedef struct dae_gles_pipeline_settings_group_front_face_s dae_gles_pipeline_settings_group_front_face;
typedef struct dae_gles_pipeline_settings_group_logic_op_s dae_gles_pipeline_settings_group_logic_op;
typedef struct dae_gles_pipeline_settings_group_light_ambient_s dae_gles_pipeline_settings_group_light_ambient;
typedef struct dae_gles_pipeline_settings_group_light_diffuse_s dae_gles_pipeline_settings_group_light_diffuse;
typedef struct dae_gles_pipeline_settings_group_light_specular_s dae_gles_pipeline_settings_group_light_specular;
typedef struct dae_gles_pipeline_settings_group_light_position_s dae_gles_pipeline_settings_group_light_position;
typedef struct dae_gles_pipeline_settings_group_light_constant_attenuation_s dae_gles_pipeline_settings_group_light_constant_attenuation;
typedef struct dae_gles_pipeline_settings_group_light_linear_attenuation_s dae_gles_pipeline_settings_group_light_linear_attenuation;
typedef struct dae_gles_pipeline_settings_group_light_quadratic_attenuation_s dae_gles_pipeline_settings_group_light_quadratic_attenuation;
typedef struct dae_gles_pipeline_settings_group_light_spot_cutoff_s dae_gles_pipeline_settings_group_light_spot_cutoff;
typedef struct dae_gles_pipeline_settings_group_light_spot_direction_s dae_gles_pipeline_settings_group_light_spot_direction;
typedef struct dae_gles_pipeline_settings_group_light_spot_exponent_s dae_gles_pipeline_settings_group_light_spot_exponent;
typedef struct dae_gles_pipeline_settings_group_light_model_ambient_s dae_gles_pipeline_settings_group_light_model_ambient;
typedef struct dae_gles_pipeline_settings_group_line_width_s dae_gles_pipeline_settings_group_line_width;
typedef struct dae_gles_pipeline_settings_group_material_ambient_s dae_gles_pipeline_settings_group_material_ambient;
typedef struct dae_gles_pipeline_settings_group_material_diffuse_s dae_gles_pipeline_settings_group_material_diffuse;
typedef struct dae_gles_pipeline_settings_group_material_emission_s dae_gles_pipeline_settings_group_material_emission;
typedef struct dae_gles_pipeline_settings_group_material_shininess_s dae_gles_pipeline_settings_group_material_shininess;
typedef struct dae_gles_pipeline_settings_group_material_specular_s dae_gles_pipeline_settings_group_material_specular;
typedef struct dae_gles_pipeline_settings_group_model_view_matrix_s dae_gles_pipeline_settings_group_model_view_matrix;
typedef struct dae_gles_pipeline_settings_group_point_distance_attenuation_s dae_gles_pipeline_settings_group_point_distance_attenuation;
typedef struct dae_gles_pipeline_settings_group_point_fade_threshold_size_s dae_gles_pipeline_settings_group_point_fade_threshold_size;
typedef struct dae_gles_pipeline_settings_group_point_size_s dae_gles_pipeline_settings_group_point_size;
typedef struct dae_gles_pipeline_settings_group_point_size_min_s dae_gles_pipeline_settings_group_point_size_min;
typedef struct dae_gles_pipeline_settings_group_point_size_max_s dae_gles_pipeline_settings_group_point_size_max;
typedef struct dae_gles_pipeline_settings_group_polygon_offset_s dae_gles_pipeline_settings_group_polygon_offset;
typedef struct dae_gles_pipeline_settings_group_projection_matrix_s dae_gles_pipeline_settings_group_projection_matrix;
typedef struct dae_gles_pipeline_settings_group_scissor_s dae_gles_pipeline_settings_group_scissor;
typedef struct dae_gles_pipeline_settings_group_shade_model_s dae_gles_pipeline_settings_group_shade_model;
typedef struct dae_gles_pipeline_settings_group_stencil_func_s dae_gles_pipeline_settings_group_stencil_func;
typedef struct dae_gles_pipeline_settings_group_stencil_func_func_s dae_gles_pipeline_settings_group_stencil_func_func;
typedef struct dae_gles_pipeline_settings_group_stencil_func_ref_s dae_gles_pipeline_settings_group_stencil_func_ref;
typedef struct dae_gles_pipeline_settings_group_stencil_func_mask_s dae_gles_pipeline_settings_group_stencil_func_mask;
typedef struct dae_gles_pipeline_settings_group_stencil_mask_s dae_gles_pipeline_settings_group_stencil_mask;
typedef struct dae_gles_pipeline_settings_group_stencil_op_s dae_gles_pipeline_settings_group_stencil_op;
typedef struct dae_gles_pipeline_settings_group_stencil_op_fail_s dae_gles_pipeline_settings_group_stencil_op_fail;
typedef struct dae_gles_pipeline_settings_group_stencil_op_zfail_s dae_gles_pipeline_settings_group_stencil_op_zfail;
typedef struct dae_gles_pipeline_settings_group_stencil_op_zpass_s dae_gles_pipeline_settings_group_stencil_op_zpass;
typedef struct dae_gles_pipeline_settings_group_texture_pipeline_s dae_gles_pipeline_settings_group_texture_pipeline;
typedef struct dae_gles_pipeline_settings_group_alpha_test_enable_s dae_gles_pipeline_settings_group_alpha_test_enable;
typedef struct dae_gles_pipeline_settings_group_blend_enable_s dae_gles_pipeline_settings_group_blend_enable;
typedef struct dae_gles_pipeline_settings_group_clip_plane_enable_s dae_gles_pipeline_settings_group_clip_plane_enable;
typedef struct dae_gles_pipeline_settings_group_color_logic_op_enable_s dae_gles_pipeline_settings_group_color_logic_op_enable;
typedef struct dae_gles_pipeline_settings_group_color_material_enable_s dae_gles_pipeline_settings_group_color_material_enable;
typedef struct dae_gles_pipeline_settings_group_cull_face_enable_s dae_gles_pipeline_settings_group_cull_face_enable;
typedef struct dae_gles_pipeline_settings_group_depth_test_enable_s dae_gles_pipeline_settings_group_depth_test_enable;
typedef struct dae_gles_pipeline_settings_group_dither_enable_s dae_gles_pipeline_settings_group_dither_enable;
typedef struct dae_gles_pipeline_settings_group_fog_enable_s dae_gles_pipeline_settings_group_fog_enable;
typedef struct dae_gles_pipeline_settings_group_light_enable_s dae_gles_pipeline_settings_group_light_enable;
typedef struct dae_gles_pipeline_settings_group_lighting_enable_s dae_gles_pipeline_settings_group_lighting_enable;
typedef struct dae_gles_pipeline_settings_group_light_model_two_side_enable_s dae_gles_pipeline_settings_group_light_model_two_side_enable;
typedef struct dae_gles_pipeline_settings_group_line_smooth_enable_s dae_gles_pipeline_settings_group_line_smooth_enable;
typedef struct dae_gles_pipeline_settings_group_multisample_enable_s dae_gles_pipeline_settings_group_multisample_enable;
typedef struct dae_gles_pipeline_settings_group_normalize_enable_s dae_gles_pipeline_settings_group_normalize_enable;
typedef struct dae_gles_pipeline_settings_group_point_smooth_enable_s dae_gles_pipeline_settings_group_point_smooth_enable;
typedef struct dae_gles_pipeline_settings_group_polygon_offset_fill_enable_s dae_gles_pipeline_settings_group_polygon_offset_fill_enable;
typedef struct dae_gles_pipeline_settings_group_rescale_normal_enable_s dae_gles_pipeline_settings_group_rescale_normal_enable;
typedef struct dae_gles_pipeline_settings_group_sample_alpha_to_coverage_enable_s dae_gles_pipeline_settings_group_sample_alpha_to_coverage_enable;
typedef struct dae_gles_pipeline_settings_group_sample_alpha_to_one_enable_s dae_gles_pipeline_settings_group_sample_alpha_to_one_enable;
typedef struct dae_gles_pipeline_settings_group_sample_coverage_enable_s dae_gles_pipeline_settings_group_sample_coverage_enable;
typedef struct dae_gles_pipeline_settings_group_scissor_test_enable_s dae_gles_pipeline_settings_group_scissor_test_enable;
typedef struct dae_gles_pipeline_settings_group_stencil_test_enable_s dae_gles_pipeline_settings_group_stencil_test_enable;
typedef struct dae_gles_newparam_type_s dae_gles_newparam_type;
typedef struct dae_profile_gles_type_s dae_profile_gles_type;
typedef struct dae_profile_gles_type_technique_s dae_profile_gles_type_technique;
typedef struct dae_profile_gles_type_technique_pass_s dae_profile_gles_type_technique_pass;
typedef struct dae_profile_gles_type_technique_pass_states_s dae_profile_gles_type_technique_pass_states;
typedef struct dae_profile_gles_type_technique_pass_evaluate_s dae_profile_gles_type_technique_pass_evaluate;
typedef struct dae_effect_type_s dae_effect_type;
typedef struct dae_library_effects_type_s dae_library_effects_type;
typedef struct dae_box_type_s dae_box_type;
typedef struct dae_plane_type_s dae_plane_type;
typedef struct dae_sphere_type_s dae_sphere_type;
typedef struct dae_cylinder_type_s dae_cylinder_type;
typedef struct dae_capsule_type_s dae_capsule_type;
typedef struct dae_force_field_type_s dae_force_field_type;
typedef struct dae_library_force_fields_type_s dae_library_force_fields_type;
typedef struct dae_physics_material_type_s dae_physics_material_type;
typedef struct dae_physics_material_type_technique_common_s dae_physics_material_type_technique_common;
typedef struct dae_library_physics_materials_type_s dae_library_physics_materials_type;
typedef struct dae_edges_type_s dae_edges_type;
typedef struct dae_wires_type_s dae_wires_type;
typedef struct dae_faces_type_s dae_faces_type;
typedef struct dae_shells_type_s dae_shells_type;
typedef struct dae_solids_type_s dae_solids_type;
typedef struct dae_line_type_s dae_line_type;
typedef struct dae_circle_type_s dae_circle_type;
typedef struct dae_ellipse_type_s dae_ellipse_type;
typedef struct dae_parabola_type_s dae_parabola_type;
typedef struct dae_hyperbola_type_s dae_hyperbola_type;
typedef struct dae_torus_type_s dae_torus_type;
typedef struct dae_pcurves_type_s dae_pcurves_type;
typedef struct dae_sidref_array_type_s dae_sidref_array_type;
typedef struct dae_source_type_s dae_source_type;
typedef struct dae_source_type_technique_common_s dae_source_type_technique_common;
typedef struct dae_animation_type_s dae_animation_type;
typedef struct dae_library_animations_type_s dae_library_animations_type;
typedef struct dae_skin_type_s dae_skin_type;
typedef struct dae_skin_type_joints_s dae_skin_type_joints;
typedef struct dae_skin_type_vertex_weights_s dae_skin_type_vertex_weights;
typedef struct dae_convex_mesh_type_s dae_convex_mesh_type;
typedef struct dae_mesh_type_s dae_mesh_type;
typedef struct dae_spline_type_s dae_spline_type;
typedef struct dae_spline_type_control_vertices_s dae_spline_type_control_vertices;
typedef struct dae_nurbs_surface_type_s dae_nurbs_surface_type;
typedef struct dae_nurbs_surface_type_control_vertices_s dae_nurbs_surface_type_control_vertices;
typedef struct dae_nurbs_type_s dae_nurbs_type;
typedef struct dae_nurbs_type_control_vertices_s dae_nurbs_type_control_vertices;
typedef struct dae_morph_type_s dae_morph_type;
typedef struct dae_morph_type_targets_s dae_morph_type_targets;
typedef struct dae_controller_type_s dae_controller_type;
typedef struct dae_library_controllers_type_s dae_library_controllers_type;
typedef dae_float3_type dae_origin_type;
typedef dae_float4_type dae_orient_type;
typedef struct dae_curve_type_s dae_curve_type;
typedef struct dae_surface_curves_type_s dae_surface_curves_type;
typedef struct dae_curves_type_s dae_curves_type;
typedef struct dae_swept_surface_type_s dae_swept_surface_type;
typedef struct dae_cone_type_s dae_cone_type;
typedef struct dae_surface_type_s dae_surface_type;
typedef struct dae_surface_type_cylinder_s dae_surface_type_cylinder;
typedef struct dae_surfaces_type_s dae_surfaces_type;
typedef struct dae_brep_type_s dae_brep_type;
typedef struct dae_geometry_type_s dae_geometry_type;
typedef struct dae_library_geometries_type_s dae_library_geometries_type;
typedef dae_instance_with_extra_type dae_instance_joint_type;
typedef struct dae_targetable_float4_type_s dae_targetable_float4_type;
typedef dae_targetable_float4_type dae_rotate_type;
typedef struct dae_link_type_s dae_link_type;
typedef struct dae_link_type_attachment_full_s dae_link_type_attachment_full;
typedef struct dae_link_type_attachment_start_s dae_link_type_attachment_start;
typedef struct dae_link_type_attachment_end_s dae_link_type_attachment_end;
typedef struct dae_rigid_constraint_type_s dae_rigid_constraint_type;
typedef struct dae_rigid_constraint_type_ref_attachment_s dae_rigid_constraint_type_ref_attachment;
typedef struct dae_rigid_constraint_type_attachment_s dae_rigid_constraint_type_attachment;
typedef struct dae_rigid_constraint_type_technique_common_s dae_rigid_constraint_type_technique_common;
typedef struct dae_rigid_constraint_type_technique_common_enabled_s dae_rigid_constraint_type_technique_common_enabled;
typedef struct dae_rigid_constraint_type_technique_common_interpenetrate_s dae_rigid_constraint_type_technique_common_interpenetrate;
typedef struct dae_rigid_constraint_type_technique_common_limits_s dae_rigid_constraint_type_technique_common_limits;
typedef struct dae_rigid_constraint_type_technique_common_limits_swing_cone_and_twist_s dae_rigid_constraint_type_technique_common_limits_swing_cone_and_twist;
typedef struct dae_rigid_constraint_type_technique_common_limits_linear_s dae_rigid_constraint_type_technique_common_limits_linear;
typedef struct dae_rigid_constraint_type_technique_common_spring_s dae_rigid_constraint_type_technique_common_spring;
typedef struct dae_rigid_constraint_type_technique_common_spring_angular_s dae_rigid_constraint_type_technique_common_spring_angular;
typedef struct dae_rigid_constraint_type_technique_common_spring_linear_s dae_rigid_constraint_type_technique_common_spring_linear;
typedef struct dae_node_type_s dae_node_type;
typedef struct dae_library_nodes_type_s dae_library_nodes_type;
typedef struct dae_visual_scene_type_s dae_visual_scene_type;
typedef struct dae_visual_scene_type_evaluate_scene_s dae_visual_scene_type_evaluate_scene;
typedef struct dae_visual_scene_type_evaluate_scene_render_s dae_visual_scene_type_evaluate_scene_render;
typedef struct dae_visual_scene_type_evaluate_scene_render_instance_material_s dae_visual_scene_type_evaluate_scene_render_instance_material;
typedef struct dae_visual_scene_type_evaluate_scene_render_instance_material_technique_override_s dae_visual_scene_type_evaluate_scene_render_instance_material_technique_override;
typedef struct dae_visual_scene_type_evaluate_scene_render_instance_material_bind_s dae_visual_scene_type_evaluate_scene_render_instance_material_bind;
typedef struct dae_library_visual_scenes_type_s dae_library_visual_scenes_type;
typedef struct dae_rigid_body_type_s dae_rigid_body_type;
typedef struct dae_rigid_body_type_technique_common_s dae_rigid_body_type_technique_common;
typedef struct dae_rigid_body_type_technique_common_dynamic_s dae_rigid_body_type_technique_common_dynamic;
typedef struct dae_rigid_body_type_technique_common_mass_frame_s dae_rigid_body_type_technique_common_mass_frame;
typedef struct dae_rigid_body_type_technique_common_shape_s dae_rigid_body_type_technique_common_shape;
typedef struct dae_rigid_body_type_technique_common_shape_hollow_s dae_rigid_body_type_technique_common_shape_hollow;
typedef struct dae_instance_rigid_body_type_s dae_instance_rigid_body_type;
typedef struct dae_instance_rigid_body_type_technique_common_s dae_instance_rigid_body_type_technique_common;
typedef struct dae_instance_rigid_body_type_technique_common_dynamic_s dae_instance_rigid_body_type_technique_common_dynamic;
typedef struct dae_instance_rigid_body_type_technique_common_mass_frame_s dae_instance_rigid_body_type_technique_common_mass_frame;
typedef struct dae_instance_rigid_body_type_technique_common_shape_s dae_instance_rigid_body_type_technique_common_shape;
typedef struct dae_instance_rigid_body_type_technique_common_shape_hollow_s dae_instance_rigid_body_type_technique_common_shape_hollow;
typedef struct dae_instance_physics_model_type_s dae_instance_physics_model_type;
typedef struct dae_physics_model_type_s dae_physics_model_type;
typedef struct dae_library_physics_models_type_s dae_library_physics_models_type;
typedef struct dae_physics_scene_type_s dae_physics_scene_type;
typedef struct dae_physics_scene_type_technique_common_s dae_physics_scene_type_technique_common;
typedef struct dae_library_physics_scenes_type_s dae_library_physics_scenes_type;
typedef struct dae_kinematics_newparam_type_s dae_kinematics_newparam_type;
typedef struct dae_kinematics_frame_type_s dae_kinematics_frame_type;
typedef dae_token dae_common_param_type;
typedef struct dae_common_bool_or_param_type_s dae_common_bool_or_param_type;
typedef struct dae_common_float_or_param_type_s dae_common_float_or_param_type;
typedef struct dae_kinematics_limits_type_s dae_kinematics_limits_type;
typedef struct dae_common_sidref_or_param_type_s dae_common_sidref_or_param_type;
typedef struct dae_bind_joint_axis_type_s dae_bind_joint_axis_type;
typedef struct dae_bind_kinematics_model_type_s dae_bind_kinematics_model_type;
typedef struct dae_kinematics_connect_param_type_s dae_kinematics_connect_param_type;
typedef struct dae_kinematics_setparam_type_s dae_kinematics_setparam_type;
typedef struct dae_instance_kinematics_scene_type_s dae_instance_kinematics_scene_type;
typedef struct dae_kinematics_index_type_s dae_kinematics_index_type;
typedef struct dae_kinematics_param_type_s dae_kinematics_param_type;
typedef struct dae_kinematics_bind_type_s dae_kinematics_bind_type;
typedef struct dae_motion_axis_info_type_s dae_motion_axis_info_type;
typedef struct dae_instance_kinematics_model_type_s dae_instance_kinematics_model_type;
typedef struct dae_instance_articulated_system_type_s dae_instance_articulated_system_type;
typedef struct dae_kinematics_scene_type_s dae_kinematics_scene_type;
typedef struct dae_library_kinematics_scenes_type_s dae_library_kinematics_scenes_type;
typedef struct dae_common_float2_or_param_type_s dae_common_float2_or_param_type;
typedef struct dae_motion_effector_info_type_s dae_motion_effector_info_type;
typedef struct dae_motion_technique_type_s dae_motion_technique_type;
typedef struct dae_motion_type_s dae_motion_type;
typedef struct dae_minmax_type_s dae_minmax_type;
typedef struct dae_joint_limits_type_s dae_joint_limits_type;
typedef struct dae_axis_type_s dae_axis_type;
typedef struct dae_axis_constraint_type_s dae_axis_constraint_type;
typedef struct dae_joint_type_s dae_joint_type;
typedef struct dae_library_joints_type_s dae_library_joints_type;
typedef struct dae_formula_technique_type_s dae_formula_technique_type;
typedef struct dae_formula_newparam_type_s dae_formula_newparam_type;
typedef struct dae_formula_setparam_type_s dae_formula_setparam_type;
typedef struct dae_instance_formula_type_s dae_instance_formula_type;
typedef struct dae_animation_clip_type_s dae_animation_clip_type;
typedef struct dae_library_animation_clips_type_s dae_library_animation_clips_type;
typedef struct dae_formula_type_s dae_formula_type;
typedef struct dae_kinematics_model_technique_type_s dae_kinematics_model_technique_type;
typedef struct dae_kinematics_model_type_s dae_kinematics_model_type;
typedef struct dae_library_kinematics_models_type_s dae_library_kinematics_models_type;
typedef struct dae_kinematics_axis_info_type_s dae_kinematics_axis_info_type;
typedef struct dae_kinematics_technique_type_s dae_kinematics_technique_type;
typedef struct dae_kinematics_type_s dae_kinematics_type;
typedef struct dae_articulated_system_type_s dae_articulated_system_type;
typedef struct dae_library_articulated_systems_type_s dae_library_articulated_systems_type;
typedef struct dae_library_formulas_type_s dae_library_formulas_type;
typedef struct dae_COLLADA_s dae_COLLADA;
typedef struct dae_COLLADA_scene_s dae_COLLADA_scene;
typedef struct dae_fx_surface_common_type_s dae_fx_surface_common_type;


//****************************************************************************
// structs

struct dae_list_of_ints_type_s
{
    struct
    {
        dae_int_type* values;
        size_t size;
    } data;
};

struct dae_list_of_names_type_s
{
    struct
    {
        dae_Name* values;
        size_t size;
    } data;
};

struct dae_list_of_uints_type_s
{
    struct
    {
        dae_uint_type* values;
        size_t size;
    } data;
};

struct dae_input_local_type_s
{
    dae_NMTOKEN* at_semantic;
    dae_urifragment_type* at_source;
};

struct dae_input_local_offset_type_s
{
    dae_uint_type* at_offset;
    dae_NMTOKEN* at_semantic;
    dae_urifragment_type* at_source;
    dae_uint_type* at_set;
};

struct dae_targetable_float_type_s
{
    dae_sid_type* at_sid;
    float data;
};

struct dae_targetable_float3_type_s
{
    dae_sid_type* at_sid;
    dae_float_type data[3];
};

struct dae_token_array_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    struct
    {
        dae_token* values;
        size_t size;
    } data;
};

struct dae_idref_array_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    struct
    {
        dae_ID* values;
        size_t size;
    } data;
};

struct dae_name_array_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    struct
    {
        dae_Name* values;
        size_t size;
    } data;
};

struct dae_bool_array_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    struct
    {
        int* values;
        size_t size;
    } data;
};

struct dae_float_array_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    dae_digits_type* at_digits;
    dae_magnitude_type* at_magnitude;
    struct
    {
        dae_float_type* values;
        size_t size;
    } data;
};

struct dae_int_array_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    dae_integer* at_minInclusive;
    dae_integer* at_maxInclusive;
    struct
    {
        dae_int_type* values;
        size_t size;
    } data;
};

struct dae_param_type_s
{
    dae_token* at_name;
    dae_sid_type* at_sid;
    dae_NMTOKEN* at_semantic;
    dae_NMTOKEN* at_type;
    char* data;
};

struct dae_accessor_type_s
{
    dae_uint_type* at_count;
    dae_uint_type* at_offset;
    dae_anyURI* at_source;
    dae_uint_type* at_stride;
    struct
    {
        dae_param_type** values;
        size_t size;
    } el_param;
};

struct dae_lookat_type_s
{
    dae_sid_type* at_sid;
    dae_float_type data[9];
};

struct dae_matrix_type_s
{
    dae_sid_type* at_sid;
    dae_float_type data[16];
};

struct dae_skew_type_s
{
    dae_sid_type* at_sid;
    dae_float_type data[7];
};

struct dae_image_source_type_hex_s
{
    dae_token* at_format;
    struct
    {
        unsigned char* values;
        size_t size;
    } data;
};

struct dae_image_mips_type_s
{
    unsigned int* at_levels;
    int* at_auto_generate;
};

struct dae_channel_type_s
{
    dae_urifragment_type* at_source;
    dae_token* at_target;
};

struct dae_sampler_type_s
{
    dae_ID* at_id;
    dae_sampler_behavior_enum* at_pre_behavior;
    dae_sampler_behavior_enum* at_post_behavior;
    struct
    {
        dae_input_local_type** values;
        size_t size;
    } el_input;
};

struct dae_technique_type_s
{
    dae_NMTOKEN* at_profile;
};

struct dae_extra_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_NMTOKEN* at_type;
    dae_asset_type* el_asset;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
};

struct dae_polylist_type_s
{
    dae_token* at_name;
    dae_uint_type* at_count;
    dae_NCName* at_material;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    dae_list_of_uints_type* el_vcount;
    dae_p_type* el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_polygons_type_s
{
    dae_token* at_name;
    dae_uint_type* at_count;
    dae_NCName* at_material;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    struct
    {
        dae_p_type** values;
        size_t size;
    } el_p;
    struct
    {
        dae_polygons_type_ph** values;
        size_t size;
    } el_ph;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_polygons_type_ph_s
{
    dae_p_type* el_p;
    struct
    {
        dae_list_of_uints_type** values;
        size_t size;
    } el_h;
};

struct dae_linestrips_type_s
{
    dae_token* at_name;
    dae_uint_type* at_count;
    dae_NCName* at_material;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    struct
    {
        dae_p_type** values;
        size_t size;
    } el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_tristrips_type_s
{
    dae_token* at_name;
    dae_uint_type* at_count;
    dae_NCName* at_material;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    struct
    {
        dae_p_type** values;
        size_t size;
    } el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_lines_type_s
{
    dae_token* at_name;
    dae_uint_type* at_count;
    dae_NCName* at_material;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    dae_p_type* el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_triangles_type_s
{
    dae_token* at_name;
    dae_uint_type* at_count;
    dae_NCName* at_material;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    dae_p_type* el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_trifans_type_s
{
    dae_token* at_name;
    dae_uint_type* at_count;
    dae_NCName* at_material;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    struct
    {
        dae_p_type** values;
        size_t size;
    } el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_vertices_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    struct
    {
        dae_input_local_type** values;
        size_t size;
    } el_input;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_asset_type_s
{
    struct
    {
        dae_asset_type_contributor** values;
        size_t size;
    } el_contributor;
    dae_asset_type_coverage* el_coverage;
    dae_dateTime* el_created;
    dae_token* el_keywords;
    dae_dateTime* el_modified;
    char** el_revision;
    char** el_subject;
    char** el_title;
    dae_asset_type_unit* el_unit;
    dae_up_axis_enum* el_up_axis;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_asset_type_contributor_s
{
    char** el_author;
    char** el_author_email;
    dae_anyURI* el_author_website;
    char** el_authoring_tool;
    char** el_comments;
    char** el_copyright;
    dae_anyURI* el_source_data;
};

struct dae_asset_type_coverage_s
{
    dae_asset_type_coverage_geographic_location* el_geographic_location;
};

struct dae_asset_type_coverage_geographic_location_s
{
    float* el_longitude;
    float* el_latitude;
    dae_asset_type_coverage_geographic_location_altitude* el_altitude;
};

struct dae_asset_type_coverage_geographic_location_altitude_s
{
    dae_altitude_mode_enum* at_mode;
    float data;
};

struct dae_asset_type_unit_s
{
    dae_float_type* at_meter;
    dae_NMTOKEN* at_name;
};

struct dae_image_type_s
{
    dae_ID* at_id;
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_asset_type* el_asset;
    dae_image_type_renderable* el_renderable;
    dae_image_type_init_from* el_init_from;
    dae_image_type_create_2d* el_create_2d;
    dae_image_type_create_3d* el_create_3d;
    dae_image_type_create_cube* el_create_cube;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_image_type_renderable_s
{
    int* at_share;
};

struct dae_image_type_init_from_s
{
    int* at_mips_generate;
    dae_anyURI* el_ref;
    dae_image_source_type_hex* el_hex;
};

struct dae_image_type_create_2d_s
{
    dae_image_type_create_2d_size_exact* el_size_exact;
    dae_image_type_create_2d_size_ratio* el_size_ratio;
    dae_image_mips_type* el_mips;
    dae_image_type_create_2d_unnormalized* el_unnormalized;
    dae_image_type_create_2d_array* el_array;
    dae_image_type_create_2d_format* el_format;
    struct
    {
        dae_image_type_create_2d_init_from** values;
        size_t size;
    } el_init_from;
};

struct dae_image_type_create_2d_size_exact_s
{
    unsigned int* at_width;
    unsigned int* at_height;
};

struct dae_image_type_create_2d_size_ratio_s
{
    float* at_width;
    float* at_height;
};

struct dae_image_type_create_2d_array_s
{
    dae_positiveInteger* at_length;
};

struct dae_image_type_create_2d_format_s
{
    dae_image_type_create_2d_format_hint* el_hint;
    dae_token* el_exact;
};

struct dae_image_type_create_2d_format_hint_s
{
    dae_image_format_hint_channels_enum* at_channels;
    dae_image_format_hint_range_enum* at_range;
    dae_image_format_hint_precision_enum* at_precision;
    dae_token* at_space;
};

struct dae_image_type_create_2d_init_from_s
{
    unsigned int* at_mip_index;
    unsigned int* at_array_index;
    dae_anyURI* el_ref;
    dae_image_source_type_hex* el_hex;
};

struct dae_image_type_create_3d_s
{
    dae_image_type_create_3d_size* el_size;
    dae_image_mips_type* el_mips;
    dae_image_type_create_3d_array* el_array;
    dae_image_type_create_3d_format* el_format;
    struct
    {
        dae_image_type_create_3d_init_from** values;
        size_t size;
    } el_init_from;
};

struct dae_image_type_create_3d_size_s
{
    unsigned int* at_width;
    unsigned int* at_height;
    unsigned int* at_depth;
};

struct dae_image_type_create_3d_array_s
{
    unsigned int* at_length;
};

struct dae_image_type_create_3d_format_s
{
    dae_image_type_create_3d_format_hint* el_hint;
    dae_token* el_exact;
};

struct dae_image_type_create_3d_format_hint_s
{
    dae_image_format_hint_channels_enum* at_channels;
    dae_image_format_hint_range_enum* at_range;
    dae_image_format_hint_precision_enum* at_precision;
    dae_token* at_space;
};

struct dae_image_type_create_3d_init_from_s
{
    unsigned int* at_depth;
    unsigned int* at_mip_index;
    unsigned int* at_array_index;
    dae_anyURI* el_ref;
    dae_image_source_type_hex* el_hex;
};

struct dae_image_type_create_cube_s
{
    dae_image_type_create_cube_size* el_size;
    dae_image_mips_type* el_mips;
    dae_image_type_create_cube_array* el_array;
    dae_image_type_create_cube_format* el_format;
    struct
    {
        dae_image_type_create_cube_init_from** values;
        size_t size;
    } el_init_from;
};

struct dae_image_type_create_cube_size_s
{
    unsigned int* at_width;
};

struct dae_image_type_create_cube_array_s
{
    unsigned int* at_length;
};

struct dae_image_type_create_cube_format_s
{
    dae_image_type_create_cube_format_hint* el_hint;
    dae_token* el_exact;
};

struct dae_image_type_create_cube_format_hint_s
{
    dae_image_format_hint_channels_enum* at_channels;
    dae_image_format_hint_range_enum* at_range;
    dae_image_format_hint_precision_enum* at_precision;
    dae_token* at_space;
};

struct dae_image_type_create_cube_init_from_s
{
    dae_image_face_enum* at_face;
    unsigned int* at_mip_index;
    unsigned int* at_array_index;
    dae_anyURI* el_ref;
    dae_image_source_type_hex* el_hex;
};

struct dae_camera_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    dae_camera_type_optics* el_optics;
    dae_camera_type_imager* el_imager;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_camera_type_optics_s
{
    dae_camera_type_optics_technique_common* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_camera_type_optics_technique_common_s
{
    dae_camera_type_optics_technique_common_orthographic* el_orthographic;
    dae_camera_type_optics_technique_common_perspective* el_perspective;
};

struct dae_camera_type_optics_technique_common_orthographic_s
{
    dae_targetable_float_type* el_xmag;
    dae_targetable_float_type* el_ymag;
    dae_targetable_float_type* el_aspect_ratio;
    dae_targetable_float_type* el_znear;
    dae_targetable_float_type* el_zfar;
};

struct dae_camera_type_optics_technique_common_perspective_s
{
    dae_targetable_float_type* el_xfov;
    dae_targetable_float_type* el_yfov;
    dae_targetable_float_type* el_aspect_ratio;
    dae_targetable_float_type* el_znear;
    dae_targetable_float_type* el_zfar;
};

struct dae_camera_type_imager_s
{
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_light_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    dae_light_type_technique_common* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_light_type_technique_common_s
{
    dae_light_type_technique_common_ambient* el_ambient;
    dae_light_type_technique_common_directional* el_directional;
    dae_light_type_technique_common_point* el_point;
    dae_light_type_technique_common_spot* el_spot;
};

struct dae_light_type_technique_common_ambient_s
{
    dae_targetable_float3_type* el_color;
};

struct dae_light_type_technique_common_directional_s
{
    dae_targetable_float3_type* el_color;
};

struct dae_light_type_technique_common_point_s
{
    dae_targetable_float3_type* el_color;
    dae_targetable_float_type* el_constant_attenuation;
    dae_targetable_float_type* el_linear_attenuation;
    dae_targetable_float_type* el_quadratic_attenuation;
};

struct dae_light_type_technique_common_spot_s
{
    dae_targetable_float3_type* el_color;
    dae_targetable_float_type* el_constant_attenuation;
    dae_targetable_float_type* el_linear_attenuation;
    dae_targetable_float_type* el_quadratic_attenuation;
    dae_targetable_float_type* el_falloff_angle;
    dae_targetable_float_type* el_falloff_exponent;
};

struct dae_instance_with_extra_type_s
{
    dae_anyURI* at_url;
    dae_sid_type* at_sid;
    dae_token* at_name;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_instance_material_type_s
{
    dae_NCName* at_symbol;
    dae_anyURI* at_target;
    dae_sid_type* at_sid;
    dae_token* at_name;
    struct
    {
        dae_instance_material_type_bind** values;
        size_t size;
    } el_bind;
    struct
    {
        dae_instance_material_type_bind_vertex_input** values;
        size_t size;
    } el_bind_vertex_input;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_instance_material_type_bind_s
{
    dae_NCName* at_semantic;
    dae_token* at_target;
};

struct dae_instance_material_type_bind_vertex_input_s
{
    dae_NCName* at_semantic;
    dae_NCName* at_input_semantic;
    dae_uint_type* at_input_set;
};

struct dae_bind_material_type_s
{
    struct
    {
        dae_param_type** values;
        size_t size;
    } el_param;
    dae_bind_material_type_technique_common* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_bind_material_type_technique_common_s
{
    struct
    {
        dae_instance_material_type** values;
        size_t size;
    } el_instance_material;
};

struct dae_instance_controller_type_s
{
    dae_anyURI* at_url;
    dae_sid_type* at_sid;
    dae_token* at_name;
    struct
    {
        dae_anyURI** values;
        size_t size;
    } el_skeleton;
    dae_bind_material_type* el_bind_material;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_instance_geometry_type_s
{
    dae_anyURI* at_url;
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_bind_material_type* el_bind_material;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_instance_node_type_s
{
    dae_anyURI* at_proxy;
    dae_anyURI* at_url;
    dae_sid_type* at_sid;
    dae_token* at_name;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_instance_rigid_constraint_type_s
{
    dae_NCName* at_constraint;
    dae_sid_type* at_sid;
    dae_token* at_name;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_cameras_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_camera_type** values;
        size_t size;
    } el_camera;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_images_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_image_type** values;
        size_t size;
    } el_image;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_lights_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_light_type** values;
        size_t size;
    } el_light;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_fx_setparam_group_sampler_states_s
{
    dae_fx_sampler_wrap_enum* el_wrap_s;
    dae_fx_sampler_wrap_enum* el_wrap_t;
    dae_fx_sampler_wrap_enum* el_wrap_p;
    dae_fx_sampler_min_filter_enum* el_minfilter;
    dae_fx_sampler_mag_filter_enum* el_magfilter;
    dae_fx_sampler_mip_filter_enum* el_mipfilter;
    dae_fx_color_type* el_border_color;
    unsigned char* el_mip_max_level;
    unsigned char* el_mip_min_level;
    float* el_mip_bias;
    unsigned int* el_max_anisotropy;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_instance_effect_type_s
{
    dae_anyURI* at_url;
    dae_sid_type* at_sid;
    dae_token* at_name;
    struct
    {
        dae_instance_effect_type_technique_hint** values;
        size_t size;
    } el_technique_hint;
    struct
    {
        dae_instance_effect_type_setparam** values;
        size_t size;
    } el_setparam;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_instance_effect_type_technique_hint_s
{
    dae_NCName* at_platform;
    dae_NCName* at_profile;
    dae_NCName* at_ref;
};

struct dae_instance_effect_type_setparam_s
{
    dae_token* at_ref;
    int* el_bool;
    dae_bool2_type* el_bool2;
    dae_bool3_type* el_bool3;
    dae_bool4_type* el_bool4;
    dae_int_type* el_int;
    dae_int2_type* el_int2;
    dae_int3_type* el_int3;
    dae_int4_type* el_int4;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_float2_type* el_float2x1;
    dae_float2x2_type* el_float2x2;
    dae_float2x3_type* el_float2x3;
    dae_float2x4_type* el_float2x4;
    dae_float3_type* el_float3x1;
    dae_float3x2_type* el_float3x2;
    dae_float3x3_type* el_float3x3;
    dae_float3x4_type* el_float3x4;
    dae_float4_type* el_float4x1;
    dae_float4x2_type* el_float4x2;
    dae_float4x3_type* el_float4x3;
    dae_float4x4_type* el_float4x4;
    char** el_enum;
    dae_instance_image_type* el_sampler_image;
    dae_fx_setparam_group_sampler_states* el_sampler_states;
};

struct dae_material_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    dae_instance_effect_type* el_instance_effect;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_materials_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_material_type** values;
        size_t size;
    } el_material;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_fx_sampler_type_s
{
    dae_instance_image_type* el_instance_image;
    dae_fx_sampler_wrap_enum* el_wrap_s;
    dae_fx_sampler_wrap_enum* el_wrap_t;
    dae_fx_sampler_wrap_enum* el_wrap_p;
    dae_fx_sampler_min_filter_enum* el_minfilter;
    dae_fx_sampler_mag_filter_enum* el_magfilter;
    dae_fx_sampler_mip_filter_enum* el_mipfilter;
    dae_fx_color_type* el_border_color;
    unsigned char* el_mip_max_level;
    unsigned char* el_mip_min_level;
    float* el_mip_bias;
    unsigned int* el_max_anisotropy;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_fx_sampler2D_type_s
{
    dae_instance_image_type* el_instance_image;
    dae_fx_sampler_wrap_enum* el_wrap_s;
    dae_fx_sampler_wrap_enum* el_wrap_t;
    dae_fx_sampler_wrap_enum* el_wrap_p;
    dae_fx_sampler_min_filter_enum* el_minfilter;
    dae_fx_sampler_mag_filter_enum* el_magfilter;
    dae_fx_sampler_mip_filter_enum* el_mipfilter;
    dae_fx_color_type* el_border_color;
    unsigned char* el_mip_max_level;
    unsigned char* el_mip_min_level;
    float* el_mip_bias;
    unsigned int* el_max_anisotropy;
    dae_NCName* el_source;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_fx_rendertarget_type_s
{
    dae_nonNegativeInteger* at_index;
    dae_nonNegativeInteger* at_mip;
    dae_image_face_enum* at_face;
    dae_nonNegativeInteger* at_slice;
    dae_fx_rendertarget_type_param* el_param;
    dae_instance_image_type* el_instance_image;
};

struct dae_fx_rendertarget_type_param_s
{
    dae_token* at_ref;
};

struct dae_fx_clearcolor_type_s
{
    dae_nonNegativeInteger* at_index;
    dae_float_type data[4];
};

struct dae_fx_cleardepth_type_s
{
    dae_nonNegativeInteger* at_index;
    float data;
};

struct dae_fx_clearstencil_type_s
{
    dae_nonNegativeInteger* at_index;
    char data;
};

struct dae_fx_annotate_type_s
{
    dae_token* at_name;
    int* el_bool;
    dae_bool2_type* el_bool2;
    dae_bool3_type* el_bool3;
    dae_bool4_type* el_bool4;
    dae_int_type* el_int;
    dae_int2_type* el_int2;
    dae_int3_type* el_int3;
    dae_int4_type* el_int4;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_float2x2_type* el_float2x2;
    dae_float3x3_type* el_float3x3;
    dae_float4x4_type* el_float4x4;
    char** el_string;
};

struct dae_fx_newparam_type_s
{
    dae_sid_type* at_sid;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    dae_NCName* el_semantic;
    dae_fx_modifier_enum* el_modifier;
    int* el_bool;
    dae_bool2_type* el_bool2;
    dae_bool3_type* el_bool3;
    dae_bool4_type* el_bool4;
    dae_int_type* el_int;
    dae_int2_type* el_int2;
    dae_int3_type* el_int3;
    dae_int4_type* el_int4;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_float2_type* el_float2x1;
    dae_float2x2_type* el_float2x2;
    dae_float2x3_type* el_float2x3;
    dae_float2x4_type* el_float2x4;
    dae_float3_type* el_float3x1;
    dae_float3x2_type* el_float3x2;
    dae_float3x3_type* el_float3x3;
    dae_float3x4_type* el_float3x4;
    dae_float4_type* el_float4x1;
    dae_float4x2_type* el_float4x2;
    dae_float4x3_type* el_float4x3;
    dae_float4x4_type* el_float4x4;
    dae_fx_sampler1D_type* el_sampler1D;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerRECT_type* el_samplerRECT;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    char** el_enum;
};

struct dae_fx_include_type_s
{
    dae_sid_type* at_sid;
    dae_anyURI* at_url;
};

struct dae_fx_code_type_s
{
    dae_sid_type* at_sid;
    char* data;
};

struct dae_fx_sources_type_s
{
    struct
    {
        char*** values;
        size_t size;
    } el_inline;
    struct
    {
        dae_fx_sources_type_import** values;
        size_t size;
    } el_import;
};

struct dae_fx_sources_type_import_s
{
    dae_token* at_ref;
};

struct dae_fx_target_type_s
{
    char** at_platform;
    char** at_target;
    char** at_options;
    dae_fx_target_type_binary* el_binary;
};

struct dae_fx_target_type_binary_s
{
    dae_anyURI* el_ref;
    dae_fx_target_type_binary_hex* el_hex;
};

struct dae_fx_target_type_binary_hex_s
{
    dae_token* at_format;
    struct
    {
        unsigned char* values;
        size_t size;
    } data;
};

struct dae_fx_common_float_or_param_type_s
{
    dae_fx_common_float_or_param_type_float* el_float;
    dae_fx_common_float_or_param_type_param* el_param;
};

struct dae_fx_common_float_or_param_type_float_s
{
    dae_sid_type* at_sid;
    float data;
};

struct dae_fx_common_float_or_param_type_param_s
{
    dae_NCName* at_ref;
};

struct dae_fx_common_color_or_texture_type_s
{
    dae_fx_common_color_or_texture_type_color* el_color;
    dae_fx_common_color_or_texture_type_param* el_param;
    dae_fx_common_color_or_texture_type_texture* el_texture;
};

struct dae_fx_common_color_or_texture_type_color_s
{
    dae_sid_type* at_sid;
    dae_float_type data[4];
};

struct dae_fx_common_color_or_texture_type_param_s
{
    dae_NCName* at_ref;
};

struct dae_fx_common_color_or_texture_type_texture_s
{
    dae_NCName* at_texture;
    dae_NCName* at_texcoord;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_fx_common_transparent_type_s
{
    dae_fx_opaque_enum* at_opaque;
    dae_fx_common_color_or_texture_type_color* el_color;
    dae_fx_common_color_or_texture_type_param* el_param;
    dae_fx_common_color_or_texture_type_texture* el_texture;
};

struct dae_fx_common_newparam_type_s
{
    dae_sid_type* at_sid;
    dae_NCName* el_semantic;
    dae_fx_surface_common_type* el_surface;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_fx_sampler2D_type* el_sampler2D;
};

struct dae_profile_common_type_s
{
    dae_ID* at_id;
    dae_asset_type* el_asset;
    struct
    {
        dae_fx_common_newparam_type** values;
        size_t size;
    } el_newparam;
    dae_profile_common_type_technique* el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_profile_common_type_technique_s
{
    dae_ID* at_id;
    dae_sid_type* at_sid;
    dae_asset_type* el_asset;
    dae_profile_common_type_technique_constant* el_constant;
    dae_profile_common_type_technique_lambert* el_lambert;
    dae_profile_common_type_technique_phong* el_phong;
    dae_profile_common_type_technique_blinn* el_blinn;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_profile_common_type_technique_constant_s
{
    dae_fx_common_color_or_texture_type* el_emission;
    dae_fx_common_color_or_texture_type* el_reflective;
    dae_fx_common_float_or_param_type* el_reflectivity;
    dae_fx_common_transparent_type* el_transparent;
    dae_fx_common_float_or_param_type* el_transparency;
    dae_fx_common_float_or_param_type* el_index_of_refraction;
};

struct dae_profile_common_type_technique_lambert_s
{
    dae_fx_common_color_or_texture_type* el_emission;
    dae_fx_common_color_or_texture_type* el_ambient;
    dae_fx_common_color_or_texture_type* el_diffuse;
    dae_fx_common_color_or_texture_type* el_reflective;
    dae_fx_common_float_or_param_type* el_reflectivity;
    dae_fx_common_transparent_type* el_transparent;
    dae_fx_common_float_or_param_type* el_transparency;
    dae_fx_common_float_or_param_type* el_index_of_refraction;
};

struct dae_profile_common_type_technique_phong_s
{
    dae_fx_common_color_or_texture_type* el_emission;
    dae_fx_common_color_or_texture_type* el_ambient;
    dae_fx_common_color_or_texture_type* el_diffuse;
    dae_fx_common_color_or_texture_type* el_specular;
    dae_fx_common_float_or_param_type* el_shininess;
    dae_fx_common_color_or_texture_type* el_reflective;
    dae_fx_common_float_or_param_type* el_reflectivity;
    dae_fx_common_transparent_type* el_transparent;
    dae_fx_common_float_or_param_type* el_transparency;
    dae_fx_common_float_or_param_type* el_index_of_refraction;
};

struct dae_profile_common_type_technique_blinn_s
{
    dae_fx_common_color_or_texture_type* el_emission;
    dae_fx_common_color_or_texture_type* el_ambient;
    dae_fx_common_color_or_texture_type* el_diffuse;
    dae_fx_common_color_or_texture_type* el_specular;
    dae_fx_common_float_or_param_type* el_shininess;
    dae_fx_common_color_or_texture_type* el_reflective;
    dae_fx_common_float_or_param_type* el_reflectivity;
    dae_fx_common_transparent_type* el_transparent;
    dae_fx_common_float_or_param_type* el_transparency;
    dae_fx_common_float_or_param_type* el_index_of_refraction;
};

struct dae_profile_bridge_type_s
{
    dae_ID* at_id;
    dae_NCName* at_platform;
    dae_anyURI* at_url;
    dae_asset_type* el_asset;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_gl_pipeline_settings_group_alpha_func_s
{
    dae_gl_pipeline_settings_group_alpha_func_func* el_func;
    dae_gl_pipeline_settings_group_alpha_func_value* el_value;
};

struct dae_gl_pipeline_settings_group_alpha_func_func_s
{
    dae_gl_func_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_alpha_func_value_s
{
    dae_gl_alpha_value_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_blend_func_s
{
    dae_gl_pipeline_settings_group_blend_func_src* el_src;
    dae_gl_pipeline_settings_group_blend_func_dest* el_dest;
};

struct dae_gl_pipeline_settings_group_blend_func_src_s
{
    dae_gl_blend_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_blend_func_dest_s
{
    dae_gl_blend_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_blend_func_separate_s
{
    dae_gl_pipeline_settings_group_blend_func_separate_src_rgb* el_src_rgb;
    dae_gl_pipeline_settings_group_blend_func_separate_dest_rgb* el_dest_rgb;
    dae_gl_pipeline_settings_group_blend_func_separate_src_alpha* el_src_alpha;
    dae_gl_pipeline_settings_group_blend_func_separate_dest_alpha* el_dest_alpha;
};

struct dae_gl_pipeline_settings_group_blend_func_separate_src_rgb_s
{
    dae_gl_blend_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_blend_func_separate_dest_rgb_s
{
    dae_gl_blend_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_blend_func_separate_src_alpha_s
{
    dae_gl_blend_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_blend_func_separate_dest_alpha_s
{
    dae_gl_blend_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_blend_equation_s
{
    dae_gl_blend_equation_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_blend_equation_separate_s
{
    dae_gl_pipeline_settings_group_blend_equation_separate_rgb* el_rgb;
    dae_gl_pipeline_settings_group_blend_equation_separate_alpha* el_alpha;
};

struct dae_gl_pipeline_settings_group_blend_equation_separate_rgb_s
{
    dae_gl_blend_equation_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_blend_equation_separate_alpha_s
{
    dae_gl_blend_equation_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_color_material_s
{
    dae_gl_pipeline_settings_group_color_material_face* el_face;
    dae_gl_pipeline_settings_group_color_material_mode* el_mode;
};

struct dae_gl_pipeline_settings_group_color_material_face_s
{
    dae_gl_face_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_color_material_mode_s
{
    dae_gl_material_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_cull_face_s
{
    dae_gl_face_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_depth_func_s
{
    dae_gl_func_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_fog_mode_s
{
    dae_gl_fog_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_fog_coord_src_s
{
    dae_gl_fog_coord_src_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_front_face_s
{
    dae_gl_front_face_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_light_model_color_control_s
{
    dae_gl_light_model_color_control_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_logic_op_s
{
    dae_gl_logic_op_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_polygon_mode_s
{
    dae_gl_pipeline_settings_group_polygon_mode_face* el_face;
    dae_gl_pipeline_settings_group_polygon_mode_mode* el_mode;
};

struct dae_gl_pipeline_settings_group_polygon_mode_face_s
{
    dae_gl_face_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_polygon_mode_mode_s
{
    dae_gl_polygon_mode_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_shade_model_s
{
    dae_gl_shade_model_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_func_s
{
    dae_gl_pipeline_settings_group_stencil_func_func* el_func;
    dae_gl_pipeline_settings_group_stencil_func_ref* el_ref;
    dae_gl_pipeline_settings_group_stencil_func_mask* el_mask;
};

struct dae_gl_pipeline_settings_group_stencil_func_func_s
{
    dae_gl_func_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_func_ref_s
{
    unsigned char* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_func_mask_s
{
    unsigned char* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_op_s
{
    dae_gl_pipeline_settings_group_stencil_op_fail* el_fail;
    dae_gl_pipeline_settings_group_stencil_op_zfail* el_zfail;
    dae_gl_pipeline_settings_group_stencil_op_zpass* el_zpass;
};

struct dae_gl_pipeline_settings_group_stencil_op_fail_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_op_zfail_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_op_zpass_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_func_separate_s
{
    dae_gl_pipeline_settings_group_stencil_func_separate_front* el_front;
    dae_gl_pipeline_settings_group_stencil_func_separate_back* el_back;
    dae_gl_pipeline_settings_group_stencil_func_separate_ref* el_ref;
    dae_gl_pipeline_settings_group_stencil_func_separate_mask* el_mask;
};

struct dae_gl_pipeline_settings_group_stencil_func_separate_front_s
{
    dae_gl_func_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_func_separate_back_s
{
    dae_gl_func_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_func_separate_ref_s
{
    unsigned char* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_func_separate_mask_s
{
    unsigned char* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_op_separate_s
{
    dae_gl_pipeline_settings_group_stencil_op_separate_face* el_face;
    dae_gl_pipeline_settings_group_stencil_op_separate_fail* el_fail;
    dae_gl_pipeline_settings_group_stencil_op_separate_zfail* el_zfail;
    dae_gl_pipeline_settings_group_stencil_op_separate_zpass* el_zpass;
};

struct dae_gl_pipeline_settings_group_stencil_op_separate_face_s
{
    dae_gl_face_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_op_separate_fail_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_op_separate_zfail_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_op_separate_zpass_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_mask_separate_s
{
    dae_gl_pipeline_settings_group_stencil_mask_separate_face* el_face;
    dae_gl_pipeline_settings_group_stencil_mask_separate_mask* el_mask;
};

struct dae_gl_pipeline_settings_group_stencil_mask_separate_face_s
{
    dae_gl_face_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_mask_separate_mask_s
{
    unsigned char* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_light_enable_s
{
    int* at_value;
    dae_NCName* at_param;
    dae_gl_max_lights_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_light_ambient_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_lights_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_light_diffuse_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_lights_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_light_specular_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_lights_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_light_position_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_lights_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_light_constant_attenuation_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_lights_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_light_linear_attenuation_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_lights_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_light_quadratic_attenuation_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_lights_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_light_spot_cutoff_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_lights_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_light_spot_direction_s
{
    dae_float3_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_lights_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_light_spot_exponent_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_lights_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_texture1D_s
{
    dae_gl_max_texture_image_units_index_type* at_index;
    dae_fx_sampler1D_type* el_value;
    dae_NCName* el_param;
};

struct dae_gl_pipeline_settings_group_texture2D_s
{
    dae_gl_max_texture_image_units_index_type* at_index;
    dae_fx_sampler2D_type* el_value;
    dae_NCName* el_param;
};

struct dae_gl_pipeline_settings_group_texture3D_s
{
    dae_gl_max_texture_image_units_index_type* at_index;
    dae_fx_sampler3D_type* el_value;
    dae_NCName* el_param;
};

struct dae_gl_pipeline_settings_group_textureCUBE_s
{
    dae_gl_max_texture_image_units_index_type* at_index;
    dae_fx_samplerCUBE_type* el_value;
    dae_NCName* el_param;
};

struct dae_gl_pipeline_settings_group_textureRECT_s
{
    dae_gl_max_texture_image_units_index_type* at_index;
    dae_fx_samplerRECT_type* el_value;
    dae_NCName* el_param;
};

struct dae_gl_pipeline_settings_group_textureDEPTH_s
{
    dae_gl_max_texture_image_units_index_type* at_index;
    dae_fx_samplerDEPTH_type* el_value;
    dae_NCName* el_param;
};

struct dae_gl_pipeline_settings_group_texture1D_enable_s
{
    int* at_value;
    dae_NCName* at_param;
    dae_gl_max_texture_image_units_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_texture2D_enable_s
{
    int* at_value;
    dae_NCName* at_param;
    dae_gl_max_texture_image_units_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_texture3D_enable_s
{
    int* at_value;
    dae_NCName* at_param;
    dae_gl_max_texture_image_units_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_textureCUBE_enable_s
{
    int* at_value;
    dae_NCName* at_param;
    dae_gl_max_texture_image_units_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_textureRECT_enable_s
{
    int* at_value;
    dae_NCName* at_param;
    dae_gl_max_texture_image_units_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_textureDEPTH_enable_s
{
    int* at_value;
    dae_NCName* at_param;
    dae_gl_max_texture_image_units_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_texture_env_color_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_texture_image_units_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_texture_env_mode_s
{
    char** at_value;
    dae_NCName* at_param;
    dae_gl_max_texture_image_units_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_clip_plane_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
    dae_gl_max_clip_planes_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_clip_plane_enable_s
{
    int* at_value;
    dae_NCName* at_param;
    dae_gl_max_clip_planes_index_type* at_index;
};

struct dae_gl_pipeline_settings_group_blend_color_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_color_mask_s
{
    dae_bool4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_depth_bounds_s
{
    dae_float2_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_depth_mask_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_depth_range_s
{
    dae_float2_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_fog_density_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_fog_start_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_fog_end_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_fog_color_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_light_model_ambient_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_lighting_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_line_stipple_s
{
    dae_int2_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_line_width_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_material_ambient_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_material_diffuse_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_material_emission_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_material_shininess_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_material_specular_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_model_view_matrix_s
{
    dae_float4x4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_point_distance_attenuation_s
{
    dae_float3_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_point_fade_threshold_size_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_point_size_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_point_size_min_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_point_size_max_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_polygon_offset_s
{
    dae_float2_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_projection_matrix_s
{
    dae_float4x4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_scissor_s
{
    dae_int4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_mask_s
{
    dae_int_type* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_alpha_test_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_blend_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_color_logic_op_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_color_material_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_cull_face_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_depth_bounds_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_depth_clamp_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_depth_test_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_dither_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_fog_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_light_model_local_viewer_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_light_model_two_side_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_line_smooth_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_line_stipple_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_logic_op_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_multisample_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_normalize_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_point_smooth_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_polygon_offset_fill_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_polygon_offset_line_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_polygon_offset_point_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_polygon_smooth_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_polygon_stipple_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_rescale_normal_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_sample_alpha_to_coverage_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_sample_alpha_to_one_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_sample_coverage_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_scissor_test_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gl_pipeline_settings_group_stencil_test_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles2_pipeline_settings_group_blend_color_s
{
    dae_float4_type* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_blend_equation_s
{
    dae_gl_blend_equation_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_blend_equation_separate_s
{
    dae_gles2_pipeline_settings_group_blend_equation_separate_rgb* el_rgb;
    dae_gles2_pipeline_settings_group_blend_equation_separate_alpha* el_alpha;
};

struct dae_gles2_pipeline_settings_group_blend_equation_separate_rgb_s
{
    dae_gl_blend_equation_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_blend_equation_separate_alpha_s
{
    dae_gl_blend_equation_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_blend_func_s
{
    dae_gles2_pipeline_settings_group_blend_func_src* el_src;
    dae_gles2_pipeline_settings_group_blend_func_dest* el_dest;
};

struct dae_gles2_pipeline_settings_group_blend_func_src_s
{
    dae_gl_blend_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_blend_func_dest_s
{
    dae_gl_blend_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_blend_func_separate_s
{
    dae_gles2_pipeline_settings_group_blend_func_separate_src_rgb* el_src_rgb;
    dae_gles2_pipeline_settings_group_blend_func_separate_dest_rgb* el_dest_rgb;
    dae_gles2_pipeline_settings_group_blend_func_separate_src_alpha* el_src_alpha;
    dae_gles2_pipeline_settings_group_blend_func_separate_dest_alpha* el_dest_alpha;
};

struct dae_gles2_pipeline_settings_group_blend_func_separate_src_rgb_s
{
    dae_gl_blend_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_blend_func_separate_dest_rgb_s
{
    dae_gl_blend_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_blend_func_separate_src_alpha_s
{
    dae_gl_blend_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_blend_func_separate_dest_alpha_s
{
    dae_gl_blend_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_color_mask_s
{
    dae_bool4_type* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_cull_face_s
{
    dae_gl_face_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_depth_func_s
{
    dae_gl_func_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_depth_mask_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_depth_range_s
{
    dae_float2_type* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_front_face_s
{
    dae_gl_front_face_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_line_width_s
{
    dae_float_type* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_polygon_offset_s
{
    dae_float2_type* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_point_size_s
{
    dae_float_type* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_sample_coverage_s
{
    dae_gles2_pipeline_settings_group_sample_coverage_value* el_value;
    dae_gles2_pipeline_settings_group_sample_coverage_invert* el_invert;
};

struct dae_gles2_pipeline_settings_group_sample_coverage_value_s
{
    float* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_sample_coverage_invert_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_scissor_s
{
    dae_int4_type* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_func_s
{
    dae_gles2_pipeline_settings_group_stencil_func_func* el_func;
    dae_gles2_pipeline_settings_group_stencil_func_ref* el_ref;
    dae_gles2_pipeline_settings_group_stencil_func_mask* el_mask;
};

struct dae_gles2_pipeline_settings_group_stencil_func_func_s
{
    dae_gl_func_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_func_ref_s
{
    unsigned char* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_func_mask_s
{
    unsigned char* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_func_separate_s
{
    dae_gles2_pipeline_settings_group_stencil_func_separate_front* el_front;
    dae_gles2_pipeline_settings_group_stencil_func_separate_back* el_back;
    dae_gles2_pipeline_settings_group_stencil_func_separate_ref* el_ref;
    dae_gles2_pipeline_settings_group_stencil_func_separate_mask* el_mask;
};

struct dae_gles2_pipeline_settings_group_stencil_func_separate_front_s
{
    dae_gl_func_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_func_separate_back_s
{
    dae_gl_func_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_func_separate_ref_s
{
    unsigned char* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_func_separate_mask_s
{
    unsigned char* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_mask_s
{
    dae_int_type* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_mask_separate_s
{
    dae_gles2_pipeline_settings_group_stencil_mask_separate_face* el_face;
    dae_gles2_pipeline_settings_group_stencil_mask_separate_mask* el_mask;
};

struct dae_gles2_pipeline_settings_group_stencil_mask_separate_face_s
{
    dae_gl_face_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_mask_separate_mask_s
{
    unsigned char* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_op_s
{
    dae_gles2_pipeline_settings_group_stencil_op_fail* el_fail;
    dae_gles2_pipeline_settings_group_stencil_op_zfail* el_zfail;
    dae_gles2_pipeline_settings_group_stencil_op_zpass* el_zpass;
};

struct dae_gles2_pipeline_settings_group_stencil_op_fail_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_op_zfail_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_op_zpass_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_op_separate_s
{
    dae_gles2_pipeline_settings_group_stencil_op_separate_face* el_face;
    dae_gles2_pipeline_settings_group_stencil_op_separate_fail* el_fail;
    dae_gles2_pipeline_settings_group_stencil_op_separate_zfail* el_zfail;
    dae_gles2_pipeline_settings_group_stencil_op_separate_zpass* el_zpass;
};

struct dae_gles2_pipeline_settings_group_stencil_op_separate_face_s
{
    dae_gl_face_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_op_separate_fail_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_op_separate_zfail_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_op_separate_zpass_s
{
    dae_gl_stencil_op_enum* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_blend_enable_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_cull_face_enable_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_depth_test_enable_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_dither_enable_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_polygon_offset_fill_enable_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_point_size_enable_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_sample_alpha_to_coverage_enable_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_sample_coverage_enable_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_scissor_test_enable_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_pipeline_settings_group_stencil_test_enable_s
{
    int* at_value;
    dae_token* at_param;
};

struct dae_gles2_value_group_usertype_s
{
    dae_token* at_typename;
    struct
    {
        dae_gles2_value_group_usertype_setparam** values;
        size_t size;
    } el_setparam;
};

struct dae_gles2_value_group_usertype_setparam_s
{
    dae_token* at_ref;
    int* el_bool;
    dae_bool2_type* el_bvec2;
    dae_bool3_type* el_bvec3;
    dae_bool4_type* el_bvec4;
    dae_float_type* el_float;
    dae_float2_type* el_vec2;
    dae_float3_type* el_vec3;
    dae_float4_type* el_vec4;
    dae_float2x2_type* el_mat2;
    dae_float3x3_type* el_mat3;
    dae_float4x4_type* el_mat4;
    dae_int_type* el_int;
    dae_int2_type* el_ivec2;
    dae_int3_type* el_ivec3;
    dae_int4_type* el_ivec4;
    dae_gl_enumeration_type* el_enum;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    dae_gles2_value_group_usertype* el_usertype;
    dae_gles2_value_group_array* el_array;
};

struct dae_gles2_value_group_array_s
{
    dae_positiveInteger* at_length;
    int* el_bool;
    dae_bool2_type* el_bvec2;
    dae_bool3_type* el_bvec3;
    dae_bool4_type* el_bvec4;
    dae_float_type* el_float;
    dae_float2_type* el_vec2;
    dae_float3_type* el_vec3;
    dae_float4_type* el_vec4;
    dae_float2x2_type* el_mat2;
    dae_float3x3_type* el_mat3;
    dae_float4x4_type* el_mat4;
    dae_int_type* el_int;
    dae_int2_type* el_ivec2;
    dae_int3_type* el_ivec3;
    dae_int4_type* el_ivec4;
    dae_gl_enumeration_type* el_enum;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    dae_gles2_value_group_usertype* el_usertype;
    dae_gles2_value_group_array* el_array;
};

struct dae_gles2_newparam_type_s
{
    dae_sid_type* at_sid;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    dae_NCName* el_semantic;
    dae_fx_modifier_enum* el_modifier;
    int* el_bool;
    dae_bool2_type* el_bvec2;
    dae_bool3_type* el_bvec3;
    dae_bool4_type* el_bvec4;
    dae_float_type* el_float;
    dae_float2_type* el_vec2;
    dae_float3_type* el_vec3;
    dae_float4_type* el_vec4;
    dae_float2x2_type* el_mat2;
    dae_float3x3_type* el_mat3;
    dae_float4x4_type* el_mat4;
    dae_int_type* el_int;
    dae_int2_type* el_ivec2;
    dae_int3_type* el_ivec3;
    dae_int4_type* el_ivec4;
    dae_gl_enumeration_type* el_enum;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    dae_gles2_value_group_usertype* el_usertype;
    dae_gles2_value_group_array* el_array;
};

struct dae_gles2_shader_type_s
{
    dae_fx_pipeline_stage_enum* at_stage;
    dae_gles2_shader_type_sources* el_sources;
    struct
    {
        dae_fx_target_type** values;
        size_t size;
    } el_compiler;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_gles2_shader_type_sources_s
{
    dae_token* at_entry;
    struct
    {
        char*** values;
        size_t size;
    } el_inline;
    struct
    {
        dae_fx_sources_type_import** values;
        size_t size;
    } el_import;
};

struct dae_gles2_program_type_s
{
    struct
    {
        dae_gles2_shader_type** values;
        size_t size;
    } el_shader;
    struct
    {
        dae_fx_target_type** values;
        size_t size;
    } el_linker;
    struct
    {
        dae_gles2_program_type_bind_attribute** values;
        size_t size;
    } el_bind_attribute;
    struct
    {
        dae_gles2_program_type_bind_uniform** values;
        size_t size;
    } el_bind_uniform;
};

struct dae_gles2_program_type_bind_attribute_s
{
    dae_token* at_symbol;
    dae_token* el_semantic;
};

struct dae_gles2_program_type_bind_uniform_s
{
    dae_token* at_symbol;
    dae_gles2_program_type_bind_uniform_param* el_param;
    int* el_bool;
    dae_bool2_type* el_bvec2;
    dae_bool3_type* el_bvec3;
    dae_bool4_type* el_bvec4;
    dae_float_type* el_float;
    dae_float2_type* el_vec2;
    dae_float3_type* el_vec3;
    dae_float4_type* el_vec4;
    dae_float2x2_type* el_mat2;
    dae_float3x3_type* el_mat3;
    dae_float4x4_type* el_mat4;
    dae_int_type* el_int;
    dae_int2_type* el_ivec2;
    dae_int3_type* el_ivec3;
    dae_int4_type* el_ivec4;
    dae_gl_enumeration_type* el_enum;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    dae_gles2_value_group_usertype* el_usertype;
    dae_gles2_value_group_array* el_array;
};

struct dae_gles2_program_type_bind_uniform_param_s
{
    dae_NCName* at_ref;
};

struct dae_gles2_pass_type_s
{
    dae_sid_type* at_sid;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    dae_gles2_pass_type_states* el_states;
    dae_gles2_program_type* el_program;
    dae_gles2_pass_type_evaluate* el_evaluate;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_gles2_pass_type_states_s
{
    dae_gles2_pipeline_settings_group_blend_color* el_blend_color;
    dae_gles2_pipeline_settings_group_blend_equation* el_blend_equation;
    dae_gles2_pipeline_settings_group_blend_equation_separate* el_blend_equation_separate;
    dae_gles2_pipeline_settings_group_blend_func* el_blend_func;
    dae_gles2_pipeline_settings_group_blend_func_separate* el_blend_func_separate;
    dae_gles2_pipeline_settings_group_color_mask* el_color_mask;
    dae_gles2_pipeline_settings_group_cull_face* el_cull_face;
    dae_gles2_pipeline_settings_group_depth_func* el_depth_func;
    dae_gles2_pipeline_settings_group_depth_mask* el_depth_mask;
    dae_gles2_pipeline_settings_group_depth_range* el_depth_range;
    dae_gles2_pipeline_settings_group_front_face* el_front_face;
    dae_gles2_pipeline_settings_group_line_width* el_line_width;
    dae_gles2_pipeline_settings_group_polygon_offset* el_polygon_offset;
    dae_gles2_pipeline_settings_group_point_size* el_point_size;
    dae_gles2_pipeline_settings_group_sample_coverage* el_sample_coverage;
    dae_gles2_pipeline_settings_group_scissor* el_scissor;
    dae_gles2_pipeline_settings_group_stencil_func* el_stencil_func;
    dae_gles2_pipeline_settings_group_stencil_func_separate* el_stencil_func_separate;
    dae_gles2_pipeline_settings_group_stencil_mask* el_stencil_mask;
    dae_gles2_pipeline_settings_group_stencil_mask_separate* el_stencil_mask_separate;
    dae_gles2_pipeline_settings_group_stencil_op* el_stencil_op;
    dae_gles2_pipeline_settings_group_stencil_op_separate* el_stencil_op_separate;
    dae_gles2_pipeline_settings_group_blend_enable* el_blend_enable;
    dae_gles2_pipeline_settings_group_cull_face_enable* el_cull_face_enable;
    dae_gles2_pipeline_settings_group_depth_test_enable* el_depth_test_enable;
    dae_gles2_pipeline_settings_group_dither_enable* el_dither_enable;
    dae_gles2_pipeline_settings_group_polygon_offset_fill_enable* el_polygon_offset_fill_enable;
    dae_gles2_pipeline_settings_group_point_size_enable* el_point_size_enable;
    dae_gles2_pipeline_settings_group_sample_alpha_to_coverage_enable* el_sample_alpha_to_coverage_enable;
    dae_gles2_pipeline_settings_group_sample_coverage_enable* el_sample_coverage_enable;
    dae_gles2_pipeline_settings_group_scissor_test_enable* el_scissor_test_enable;
    dae_gles2_pipeline_settings_group_stencil_test_enable* el_stencil_test_enable;
};

struct dae_gles2_pass_type_evaluate_s
{
    struct
    {
        dae_fx_colortarget_type** values;
        size_t size;
    } el_color_target;
    struct
    {
        dae_fx_depthtarget_type** values;
        size_t size;
    } el_depth_target;
    struct
    {
        dae_fx_stenciltarget_type** values;
        size_t size;
    } el_stencil_target;
    struct
    {
        dae_fx_clearcolor_type** values;
        size_t size;
    } el_color_clear;
    struct
    {
        dae_fx_clearstencil_type** values;
        size_t size;
    } el_stencil_clear;
    struct
    {
        dae_fx_cleardepth_type** values;
        size_t size;
    } el_depth_clear;
    dae_fx_draw_type* el_draw;
};

struct dae_profile_gles2_type_s
{
    dae_ID* at_id;
    dae_NCName* at_language;
    dae_list_of_names_type* at_platforms;
    dae_asset_type* el_asset;
    struct
    {
        dae_fx_include_type** values;
        size_t size;
    } el_include;
    struct
    {
        dae_fx_code_type** values;
        size_t size;
    } el_code;
    struct
    {
        dae_gles2_newparam_type** values;
        size_t size;
    } el_newparam;
    struct
    {
        dae_profile_gles2_type_technique** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_profile_gles2_type_technique_s
{
    dae_ID* at_id;
    dae_sid_type* at_sid;
    dae_asset_type* el_asset;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    struct
    {
        dae_gles2_pass_type** values;
        size_t size;
    } el_pass;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_glsl_array_type_s
{
    dae_positiveInteger* at_length;
    int* el_bool;
    dae_bool2_type* el_bool2;
    dae_bool3_type* el_bool3;
    dae_bool4_type* el_bool4;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_float2x2_type* el_float2x2;
    dae_float3x3_type* el_float3x3;
    dae_float4x4_type* el_float4x4;
    dae_int_type* el_int;
    dae_int2_type* el_int2;
    dae_int3_type* el_int3;
    dae_int4_type* el_int4;
    dae_fx_sampler1D_type* el_sampler1D;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerRECT_type* el_samplerRECT;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    dae_gl_enumeration_type* el_enum;
    dae_glsl_array_type* el_array;
};

struct dae_glsl_newparam_type_s
{
    dae_sid_type* at_sid;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    dae_NCName* el_semantic;
    dae_fx_modifier_enum* el_modifier;
    int* el_bool;
    dae_bool2_type* el_bool2;
    dae_bool3_type* el_bool3;
    dae_bool4_type* el_bool4;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_float2x2_type* el_float2x2;
    dae_float3x3_type* el_float3x3;
    dae_float4x4_type* el_float4x4;
    dae_int_type* el_int;
    dae_int2_type* el_int2;
    dae_int3_type* el_int3;
    dae_int4_type* el_int4;
    dae_fx_sampler1D_type* el_sampler1D;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerRECT_type* el_samplerRECT;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    dae_gl_enumeration_type* el_enum;
    dae_glsl_array_type* el_array;
};

struct dae_glsl_shader_type_s
{
    dae_fx_pipeline_stage_enum* at_stage;
    dae_fx_sources_type* el_sources;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_glsl_program_type_s
{
    struct
    {
        dae_glsl_shader_type** values;
        size_t size;
    } el_shader;
    struct
    {
        dae_glsl_program_type_bind_attribute** values;
        size_t size;
    } el_bind_attribute;
    struct
    {
        dae_glsl_program_type_bind_uniform** values;
        size_t size;
    } el_bind_uniform;
};

struct dae_glsl_program_type_bind_attribute_s
{
    dae_token* at_symbol;
    dae_token* el_semantic;
};

struct dae_glsl_program_type_bind_uniform_s
{
    dae_token* at_symbol;
    dae_glsl_program_type_bind_uniform_param* el_param;
    int* el_bool;
    dae_bool2_type* el_bool2;
    dae_bool3_type* el_bool3;
    dae_bool4_type* el_bool4;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_float2x2_type* el_float2x2;
    dae_float3x3_type* el_float3x3;
    dae_float4x4_type* el_float4x4;
    dae_int_type* el_int;
    dae_int2_type* el_int2;
    dae_int3_type* el_int3;
    dae_int4_type* el_int4;
    dae_fx_sampler1D_type* el_sampler1D;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerRECT_type* el_samplerRECT;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    dae_gl_enumeration_type* el_enum;
    dae_glsl_array_type* el_array;
};

struct dae_glsl_program_type_bind_uniform_param_s
{
    dae_NCName* at_ref;
};

struct dae_profile_glsl_type_s
{
    dae_ID* at_id;
    dae_NCName* at_platform;
    dae_asset_type* el_asset;
    struct
    {
        dae_fx_code_type** values;
        size_t size;
    } el_code;
    struct
    {
        dae_fx_include_type** values;
        size_t size;
    } el_include;
    struct
    {
        dae_glsl_newparam_type** values;
        size_t size;
    } el_newparam;
    struct
    {
        dae_profile_glsl_type_technique** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_profile_glsl_type_technique_s
{
    dae_ID* at_id;
    dae_sid_type* at_sid;
    dae_asset_type* el_asset;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    struct
    {
        dae_profile_glsl_type_technique_pass** values;
        size_t size;
    } el_pass;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_profile_glsl_type_technique_pass_s
{
    dae_sid_type* at_sid;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    dae_profile_glsl_type_technique_pass_states* el_states;
    dae_glsl_program_type* el_program;
    dae_profile_glsl_type_technique_pass_evaluate* el_evaluate;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_profile_glsl_type_technique_pass_states_s
{
    dae_gl_pipeline_settings_group_alpha_func* el_alpha_func;
    dae_gl_pipeline_settings_group_blend_func* el_blend_func;
    dae_gl_pipeline_settings_group_blend_func_separate* el_blend_func_separate;
    dae_gl_pipeline_settings_group_blend_equation* el_blend_equation;
    dae_gl_pipeline_settings_group_blend_equation_separate* el_blend_equation_separate;
    dae_gl_pipeline_settings_group_color_material* el_color_material;
    dae_gl_pipeline_settings_group_cull_face* el_cull_face;
    dae_gl_pipeline_settings_group_depth_func* el_depth_func;
    dae_gl_pipeline_settings_group_fog_mode* el_fog_mode;
    dae_gl_pipeline_settings_group_fog_coord_src* el_fog_coord_src;
    dae_gl_pipeline_settings_group_front_face* el_front_face;
    dae_gl_pipeline_settings_group_light_model_color_control* el_light_model_color_control;
    dae_gl_pipeline_settings_group_logic_op* el_logic_op;
    dae_gl_pipeline_settings_group_polygon_mode* el_polygon_mode;
    dae_gl_pipeline_settings_group_shade_model* el_shade_model;
    dae_gl_pipeline_settings_group_stencil_func* el_stencil_func;
    dae_gl_pipeline_settings_group_stencil_op* el_stencil_op;
    dae_gl_pipeline_settings_group_stencil_func_separate* el_stencil_func_separate;
    dae_gl_pipeline_settings_group_stencil_op_separate* el_stencil_op_separate;
    dae_gl_pipeline_settings_group_stencil_mask_separate* el_stencil_mask_separate;
    dae_gl_pipeline_settings_group_light_enable* el_light_enable;
    dae_gl_pipeline_settings_group_light_ambient* el_light_ambient;
    dae_gl_pipeline_settings_group_light_diffuse* el_light_diffuse;
    dae_gl_pipeline_settings_group_light_specular* el_light_specular;
    dae_gl_pipeline_settings_group_light_position* el_light_position;
    dae_gl_pipeline_settings_group_light_constant_attenuation* el_light_constant_attenuation;
    dae_gl_pipeline_settings_group_light_linear_attenuation* el_light_linear_attenuation;
    dae_gl_pipeline_settings_group_light_quadratic_attenuation* el_light_quadratic_attenuation;
    dae_gl_pipeline_settings_group_light_spot_cutoff* el_light_spot_cutoff;
    dae_gl_pipeline_settings_group_light_spot_direction* el_light_spot_direction;
    dae_gl_pipeline_settings_group_light_spot_exponent* el_light_spot_exponent;
    dae_gl_pipeline_settings_group_texture1D* el_texture1D;
    dae_gl_pipeline_settings_group_texture2D* el_texture2D;
    dae_gl_pipeline_settings_group_texture3D* el_texture3D;
    dae_gl_pipeline_settings_group_textureCUBE* el_textureCUBE;
    dae_gl_pipeline_settings_group_textureRECT* el_textureRECT;
    dae_gl_pipeline_settings_group_textureDEPTH* el_textureDEPTH;
    dae_gl_pipeline_settings_group_texture1D_enable* el_texture1D_enable;
    dae_gl_pipeline_settings_group_texture2D_enable* el_texture2D_enable;
    dae_gl_pipeline_settings_group_texture3D_enable* el_texture3D_enable;
    dae_gl_pipeline_settings_group_textureCUBE_enable* el_textureCUBE_enable;
    dae_gl_pipeline_settings_group_textureRECT_enable* el_textureRECT_enable;
    dae_gl_pipeline_settings_group_textureDEPTH_enable* el_textureDEPTH_enable;
    dae_gl_pipeline_settings_group_texture_env_color* el_texture_env_color;
    dae_gl_pipeline_settings_group_texture_env_mode* el_texture_env_mode;
    dae_gl_pipeline_settings_group_clip_plane* el_clip_plane;
    dae_gl_pipeline_settings_group_clip_plane_enable* el_clip_plane_enable;
    dae_gl_pipeline_settings_group_blend_color* el_blend_color;
    dae_gl_pipeline_settings_group_color_mask* el_color_mask;
    dae_gl_pipeline_settings_group_depth_bounds* el_depth_bounds;
    dae_gl_pipeline_settings_group_depth_mask* el_depth_mask;
    dae_gl_pipeline_settings_group_depth_range* el_depth_range;
    dae_gl_pipeline_settings_group_fog_density* el_fog_density;
    dae_gl_pipeline_settings_group_fog_start* el_fog_start;
    dae_gl_pipeline_settings_group_fog_end* el_fog_end;
    dae_gl_pipeline_settings_group_fog_color* el_fog_color;
    dae_gl_pipeline_settings_group_light_model_ambient* el_light_model_ambient;
    dae_gl_pipeline_settings_group_lighting_enable* el_lighting_enable;
    dae_gl_pipeline_settings_group_line_stipple* el_line_stipple;
    dae_gl_pipeline_settings_group_line_width* el_line_width;
    dae_gl_pipeline_settings_group_material_ambient* el_material_ambient;
    dae_gl_pipeline_settings_group_material_diffuse* el_material_diffuse;
    dae_gl_pipeline_settings_group_material_emission* el_material_emission;
    dae_gl_pipeline_settings_group_material_shininess* el_material_shininess;
    dae_gl_pipeline_settings_group_material_specular* el_material_specular;
    dae_gl_pipeline_settings_group_model_view_matrix* el_model_view_matrix;
    dae_gl_pipeline_settings_group_point_distance_attenuation* el_point_distance_attenuation;
    dae_gl_pipeline_settings_group_point_fade_threshold_size* el_point_fade_threshold_size;
    dae_gl_pipeline_settings_group_point_size* el_point_size;
    dae_gl_pipeline_settings_group_point_size_min* el_point_size_min;
    dae_gl_pipeline_settings_group_point_size_max* el_point_size_max;
    dae_gl_pipeline_settings_group_polygon_offset* el_polygon_offset;
    dae_gl_pipeline_settings_group_projection_matrix* el_projection_matrix;
    dae_gl_pipeline_settings_group_scissor* el_scissor;
    dae_gl_pipeline_settings_group_stencil_mask* el_stencil_mask;
    dae_gl_pipeline_settings_group_alpha_test_enable* el_alpha_test_enable;
    dae_gl_pipeline_settings_group_blend_enable* el_blend_enable;
    dae_gl_pipeline_settings_group_color_logic_op_enable* el_color_logic_op_enable;
    dae_gl_pipeline_settings_group_color_material_enable* el_color_material_enable;
    dae_gl_pipeline_settings_group_cull_face_enable* el_cull_face_enable;
    dae_gl_pipeline_settings_group_depth_bounds_enable* el_depth_bounds_enable;
    dae_gl_pipeline_settings_group_depth_clamp_enable* el_depth_clamp_enable;
    dae_gl_pipeline_settings_group_depth_test_enable* el_depth_test_enable;
    dae_gl_pipeline_settings_group_dither_enable* el_dither_enable;
    dae_gl_pipeline_settings_group_fog_enable* el_fog_enable;
    dae_gl_pipeline_settings_group_light_model_local_viewer_enable* el_light_model_local_viewer_enable;
    dae_gl_pipeline_settings_group_light_model_two_side_enable* el_light_model_two_side_enable;
    dae_gl_pipeline_settings_group_line_smooth_enable* el_line_smooth_enable;
    dae_gl_pipeline_settings_group_line_stipple_enable* el_line_stipple_enable;
    dae_gl_pipeline_settings_group_logic_op_enable* el_logic_op_enable;
    dae_gl_pipeline_settings_group_multisample_enable* el_multisample_enable;
    dae_gl_pipeline_settings_group_normalize_enable* el_normalize_enable;
    dae_gl_pipeline_settings_group_point_smooth_enable* el_point_smooth_enable;
    dae_gl_pipeline_settings_group_polygon_offset_fill_enable* el_polygon_offset_fill_enable;
    dae_gl_pipeline_settings_group_polygon_offset_line_enable* el_polygon_offset_line_enable;
    dae_gl_pipeline_settings_group_polygon_offset_point_enable* el_polygon_offset_point_enable;
    dae_gl_pipeline_settings_group_polygon_smooth_enable* el_polygon_smooth_enable;
    dae_gl_pipeline_settings_group_polygon_stipple_enable* el_polygon_stipple_enable;
    dae_gl_pipeline_settings_group_rescale_normal_enable* el_rescale_normal_enable;
    dae_gl_pipeline_settings_group_sample_alpha_to_coverage_enable* el_sample_alpha_to_coverage_enable;
    dae_gl_pipeline_settings_group_sample_alpha_to_one_enable* el_sample_alpha_to_one_enable;
    dae_gl_pipeline_settings_group_sample_coverage_enable* el_sample_coverage_enable;
    dae_gl_pipeline_settings_group_scissor_test_enable* el_scissor_test_enable;
    dae_gl_pipeline_settings_group_stencil_test_enable* el_stencil_test_enable;
};

struct dae_profile_glsl_type_technique_pass_evaluate_s
{
    struct
    {
        dae_fx_colortarget_type** values;
        size_t size;
    } el_color_target;
    struct
    {
        dae_fx_depthtarget_type** values;
        size_t size;
    } el_depth_target;
    struct
    {
        dae_fx_stenciltarget_type** values;
        size_t size;
    } el_stencil_target;
    struct
    {
        dae_fx_clearcolor_type** values;
        size_t size;
    } el_color_clear;
    struct
    {
        dae_fx_cleardepth_type** values;
        size_t size;
    } el_depth_clear;
    struct
    {
        dae_fx_clearstencil_type** values;
        size_t size;
    } el_stencil_clear;
    dae_fx_draw_type* el_draw;
};

struct dae_cg_array_type_s
{
    dae_positiveInteger* at_length;
    int* at_resizable;
    int* el_bool;
    dae_bool2_type* el_bool2;
    dae_bool3_type* el_bool3;
    dae_bool4_type* el_bool4;
    dae_bool2_type* el_bool2x1;
    dae_bool2x2_type* el_bool2x2;
    dae_bool2x3_type* el_bool2x3;
    dae_bool2x4_type* el_bool2x4;
    dae_bool3_type* el_bool3x1;
    dae_bool3x2_type* el_bool3x2;
    dae_bool3x3_type* el_bool3x3;
    dae_bool3x4_type* el_bool3x4;
    dae_bool4_type* el_bool4x1;
    dae_bool4x2_type* el_bool4x2;
    dae_bool4x3_type* el_bool4x3;
    dae_bool4x4_type* el_bool4x4;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_float2_type* el_float2x1;
    dae_float2x2_type* el_float2x2;
    dae_float2x3_type* el_float2x3;
    dae_float2x4_type* el_float2x4;
    dae_float3_type* el_float3x1;
    dae_float3x2_type* el_float3x2;
    dae_float3x3_type* el_float3x3;
    dae_float3x4_type* el_float3x4;
    dae_float4_type* el_float4x1;
    dae_float4x2_type* el_float4x2;
    dae_float4x3_type* el_float4x3;
    dae_float4x4_type* el_float4x4;
    dae_int_type* el_int;
    dae_int2_type* el_int2;
    dae_int3_type* el_int3;
    dae_int4_type* el_int4;
    dae_int2_type* el_int2x1;
    dae_int2x2_type* el_int2x2;
    dae_int2x3_type* el_int2x3;
    dae_int2x4_type* el_int2x4;
    dae_int3_type* el_int3x1;
    dae_int3x2_type* el_int3x2;
    dae_int3x3_type* el_int3x3;
    dae_int3x4_type* el_int3x4;
    dae_int4_type* el_int4x1;
    dae_int4x2_type* el_int4x2;
    dae_int4x3_type* el_int4x3;
    dae_int4x4_type* el_int4x4;
    dae_float_type* el_half;
    dae_float2_type* el_half2;
    dae_float3_type* el_half3;
    dae_float4_type* el_half4;
    dae_float2_type* el_half2x1;
    dae_float2x2_type* el_half2x2;
    dae_float2x3_type* el_half2x3;
    dae_float2x4_type* el_half2x4;
    dae_float3_type* el_half3x1;
    dae_float3x2_type* el_half3x2;
    dae_float3x3_type* el_half3x3;
    dae_float3x4_type* el_half3x4;
    dae_float4_type* el_half4x1;
    dae_float4x2_type* el_half4x2;
    dae_float4x3_type* el_half4x3;
    dae_float4x4_type* el_half4x4;
    dae_float_type* el_fixed;
    dae_float2_type* el_fixed2;
    dae_float3_type* el_fixed3;
    dae_float4_type* el_fixed4;
    dae_float2_type* el_fixed2x1;
    dae_float2x2_type* el_fixed2x2;
    dae_float2x3_type* el_fixed2x3;
    dae_float2x4_type* el_fixed2x4;
    dae_float3_type* el_fixed3x1;
    dae_float3x2_type* el_fixed3x2;
    dae_float3x3_type* el_fixed3x3;
    dae_float3x4_type* el_fixed3x4;
    dae_float4_type* el_fixed4x1;
    dae_float4x2_type* el_fixed4x2;
    dae_float4x3_type* el_fixed4x3;
    dae_float4x4_type* el_fixed4x4;
    dae_fx_sampler1D_type* el_sampler1D;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerRECT_type* el_samplerRECT;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    char** el_string;
    dae_gl_enumeration_type* el_enum;
    dae_cg_array_type* el_array;
    dae_cg_user_type* el_usertype;
};

struct dae_cg_setparam_type_s
{
    dae_token* at_ref;
    int* el_bool;
    dae_bool2_type* el_bool2;
    dae_bool3_type* el_bool3;
    dae_bool4_type* el_bool4;
    dae_bool2_type* el_bool2x1;
    dae_bool2x2_type* el_bool2x2;
    dae_bool2x3_type* el_bool2x3;
    dae_bool2x4_type* el_bool2x4;
    dae_bool3_type* el_bool3x1;
    dae_bool3x2_type* el_bool3x2;
    dae_bool3x3_type* el_bool3x3;
    dae_bool3x4_type* el_bool3x4;
    dae_bool4_type* el_bool4x1;
    dae_bool4x2_type* el_bool4x2;
    dae_bool4x3_type* el_bool4x3;
    dae_bool4x4_type* el_bool4x4;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_float2_type* el_float2x1;
    dae_float2x2_type* el_float2x2;
    dae_float2x3_type* el_float2x3;
    dae_float2x4_type* el_float2x4;
    dae_float3_type* el_float3x1;
    dae_float3x2_type* el_float3x2;
    dae_float3x3_type* el_float3x3;
    dae_float3x4_type* el_float3x4;
    dae_float4_type* el_float4x1;
    dae_float4x2_type* el_float4x2;
    dae_float4x3_type* el_float4x3;
    dae_float4x4_type* el_float4x4;
    dae_int_type* el_int;
    dae_int2_type* el_int2;
    dae_int3_type* el_int3;
    dae_int4_type* el_int4;
    dae_int2_type* el_int2x1;
    dae_int2x2_type* el_int2x2;
    dae_int2x3_type* el_int2x3;
    dae_int2x4_type* el_int2x4;
    dae_int3_type* el_int3x1;
    dae_int3x2_type* el_int3x2;
    dae_int3x3_type* el_int3x3;
    dae_int3x4_type* el_int3x4;
    dae_int4_type* el_int4x1;
    dae_int4x2_type* el_int4x2;
    dae_int4x3_type* el_int4x3;
    dae_int4x4_type* el_int4x4;
    dae_float_type* el_half;
    dae_float2_type* el_half2;
    dae_float3_type* el_half3;
    dae_float4_type* el_half4;
    dae_float2_type* el_half2x1;
    dae_float2x2_type* el_half2x2;
    dae_float2x3_type* el_half2x3;
    dae_float2x4_type* el_half2x4;
    dae_float3_type* el_half3x1;
    dae_float3x2_type* el_half3x2;
    dae_float3x3_type* el_half3x3;
    dae_float3x4_type* el_half3x4;
    dae_float4_type* el_half4x1;
    dae_float4x2_type* el_half4x2;
    dae_float4x3_type* el_half4x3;
    dae_float4x4_type* el_half4x4;
    dae_float_type* el_fixed;
    dae_float2_type* el_fixed2;
    dae_float3_type* el_fixed3;
    dae_float4_type* el_fixed4;
    dae_float2_type* el_fixed2x1;
    dae_float2x2_type* el_fixed2x2;
    dae_float2x3_type* el_fixed2x3;
    dae_float2x4_type* el_fixed2x4;
    dae_float3_type* el_fixed3x1;
    dae_float3x2_type* el_fixed3x2;
    dae_float3x3_type* el_fixed3x3;
    dae_float3x4_type* el_fixed3x4;
    dae_float4_type* el_fixed4x1;
    dae_float4x2_type* el_fixed4x2;
    dae_float4x3_type* el_fixed4x3;
    dae_float4x4_type* el_fixed4x4;
    dae_fx_sampler1D_type* el_sampler1D;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerRECT_type* el_samplerRECT;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    char** el_string;
    dae_gl_enumeration_type* el_enum;
    dae_cg_array_type* el_array;
    dae_cg_user_type* el_usertype;
};

struct dae_cg_user_type_s
{
    dae_token* at_typename;
    dae_NCName* at_source;
    struct
    {
        dae_cg_setparam_type** values;
        size_t size;
    } el_setparam;
};

struct dae_cg_newparam_type_s
{
    dae_sid_type* at_sid;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    dae_NCName* el_semantic;
    dae_fx_modifier_enum* el_modifier;
    int* el_bool;
    dae_bool2_type* el_bool2;
    dae_bool3_type* el_bool3;
    dae_bool4_type* el_bool4;
    dae_bool2_type* el_bool2x1;
    dae_bool2x2_type* el_bool2x2;
    dae_bool2x3_type* el_bool2x3;
    dae_bool2x4_type* el_bool2x4;
    dae_bool3_type* el_bool3x1;
    dae_bool3x2_type* el_bool3x2;
    dae_bool3x3_type* el_bool3x3;
    dae_bool3x4_type* el_bool3x4;
    dae_bool4_type* el_bool4x1;
    dae_bool4x2_type* el_bool4x2;
    dae_bool4x3_type* el_bool4x3;
    dae_bool4x4_type* el_bool4x4;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_float2_type* el_float2x1;
    dae_float2x2_type* el_float2x2;
    dae_float2x3_type* el_float2x3;
    dae_float2x4_type* el_float2x4;
    dae_float3_type* el_float3x1;
    dae_float3x2_type* el_float3x2;
    dae_float3x3_type* el_float3x3;
    dae_float3x4_type* el_float3x4;
    dae_float4_type* el_float4x1;
    dae_float4x2_type* el_float4x2;
    dae_float4x3_type* el_float4x3;
    dae_float4x4_type* el_float4x4;
    dae_int_type* el_int;
    dae_int2_type* el_int2;
    dae_int3_type* el_int3;
    dae_int4_type* el_int4;
    dae_int2_type* el_int2x1;
    dae_int2x2_type* el_int2x2;
    dae_int2x3_type* el_int2x3;
    dae_int2x4_type* el_int2x4;
    dae_int3_type* el_int3x1;
    dae_int3x2_type* el_int3x2;
    dae_int3x3_type* el_int3x3;
    dae_int3x4_type* el_int3x4;
    dae_int4_type* el_int4x1;
    dae_int4x2_type* el_int4x2;
    dae_int4x3_type* el_int4x3;
    dae_int4x4_type* el_int4x4;
    dae_float_type* el_half;
    dae_float2_type* el_half2;
    dae_float3_type* el_half3;
    dae_float4_type* el_half4;
    dae_float2_type* el_half2x1;
    dae_float2x2_type* el_half2x2;
    dae_float2x3_type* el_half2x3;
    dae_float2x4_type* el_half2x4;
    dae_float3_type* el_half3x1;
    dae_float3x2_type* el_half3x2;
    dae_float3x3_type* el_half3x3;
    dae_float3x4_type* el_half3x4;
    dae_float4_type* el_half4x1;
    dae_float4x2_type* el_half4x2;
    dae_float4x3_type* el_half4x3;
    dae_float4x4_type* el_half4x4;
    dae_float_type* el_fixed;
    dae_float2_type* el_fixed2;
    dae_float3_type* el_fixed3;
    dae_float4_type* el_fixed4;
    dae_float2_type* el_fixed2x1;
    dae_float2x2_type* el_fixed2x2;
    dae_float2x3_type* el_fixed2x3;
    dae_float2x4_type* el_fixed2x4;
    dae_float3_type* el_fixed3x1;
    dae_float3x2_type* el_fixed3x2;
    dae_float3x3_type* el_fixed3x3;
    dae_float3x4_type* el_fixed3x4;
    dae_float4_type* el_fixed4x1;
    dae_float4x2_type* el_fixed4x2;
    dae_float4x3_type* el_fixed4x3;
    dae_float4x4_type* el_fixed4x4;
    dae_fx_sampler1D_type* el_sampler1D;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerRECT_type* el_samplerRECT;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    char** el_string;
    dae_gl_enumeration_type* el_enum;
    dae_cg_array_type* el_array;
    dae_cg_user_type* el_usertype;
};

struct dae_cg_pass_type_s
{
    dae_sid_type* at_sid;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    dae_cg_pass_type_states* el_states;
    dae_cg_pass_type_program* el_program;
    dae_cg_pass_type_evaluate* el_evaluate;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_cg_pass_type_states_s
{
    dae_gl_pipeline_settings_group_alpha_func* el_alpha_func;
    dae_gl_pipeline_settings_group_blend_func* el_blend_func;
    dae_gl_pipeline_settings_group_blend_func_separate* el_blend_func_separate;
    dae_gl_pipeline_settings_group_blend_equation* el_blend_equation;
    dae_gl_pipeline_settings_group_blend_equation_separate* el_blend_equation_separate;
    dae_gl_pipeline_settings_group_color_material* el_color_material;
    dae_gl_pipeline_settings_group_cull_face* el_cull_face;
    dae_gl_pipeline_settings_group_depth_func* el_depth_func;
    dae_gl_pipeline_settings_group_fog_mode* el_fog_mode;
    dae_gl_pipeline_settings_group_fog_coord_src* el_fog_coord_src;
    dae_gl_pipeline_settings_group_front_face* el_front_face;
    dae_gl_pipeline_settings_group_light_model_color_control* el_light_model_color_control;
    dae_gl_pipeline_settings_group_logic_op* el_logic_op;
    dae_gl_pipeline_settings_group_polygon_mode* el_polygon_mode;
    dae_gl_pipeline_settings_group_shade_model* el_shade_model;
    dae_gl_pipeline_settings_group_stencil_func* el_stencil_func;
    dae_gl_pipeline_settings_group_stencil_op* el_stencil_op;
    dae_gl_pipeline_settings_group_stencil_func_separate* el_stencil_func_separate;
    dae_gl_pipeline_settings_group_stencil_op_separate* el_stencil_op_separate;
    dae_gl_pipeline_settings_group_stencil_mask_separate* el_stencil_mask_separate;
    dae_gl_pipeline_settings_group_light_enable* el_light_enable;
    dae_gl_pipeline_settings_group_light_ambient* el_light_ambient;
    dae_gl_pipeline_settings_group_light_diffuse* el_light_diffuse;
    dae_gl_pipeline_settings_group_light_specular* el_light_specular;
    dae_gl_pipeline_settings_group_light_position* el_light_position;
    dae_gl_pipeline_settings_group_light_constant_attenuation* el_light_constant_attenuation;
    dae_gl_pipeline_settings_group_light_linear_attenuation* el_light_linear_attenuation;
    dae_gl_pipeline_settings_group_light_quadratic_attenuation* el_light_quadratic_attenuation;
    dae_gl_pipeline_settings_group_light_spot_cutoff* el_light_spot_cutoff;
    dae_gl_pipeline_settings_group_light_spot_direction* el_light_spot_direction;
    dae_gl_pipeline_settings_group_light_spot_exponent* el_light_spot_exponent;
    dae_gl_pipeline_settings_group_texture1D* el_texture1D;
    dae_gl_pipeline_settings_group_texture2D* el_texture2D;
    dae_gl_pipeline_settings_group_texture3D* el_texture3D;
    dae_gl_pipeline_settings_group_textureCUBE* el_textureCUBE;
    dae_gl_pipeline_settings_group_textureRECT* el_textureRECT;
    dae_gl_pipeline_settings_group_textureDEPTH* el_textureDEPTH;
    dae_gl_pipeline_settings_group_texture1D_enable* el_texture1D_enable;
    dae_gl_pipeline_settings_group_texture2D_enable* el_texture2D_enable;
    dae_gl_pipeline_settings_group_texture3D_enable* el_texture3D_enable;
    dae_gl_pipeline_settings_group_textureCUBE_enable* el_textureCUBE_enable;
    dae_gl_pipeline_settings_group_textureRECT_enable* el_textureRECT_enable;
    dae_gl_pipeline_settings_group_textureDEPTH_enable* el_textureDEPTH_enable;
    dae_gl_pipeline_settings_group_texture_env_color* el_texture_env_color;
    dae_gl_pipeline_settings_group_texture_env_mode* el_texture_env_mode;
    dae_gl_pipeline_settings_group_clip_plane* el_clip_plane;
    dae_gl_pipeline_settings_group_clip_plane_enable* el_clip_plane_enable;
    dae_gl_pipeline_settings_group_blend_color* el_blend_color;
    dae_gl_pipeline_settings_group_color_mask* el_color_mask;
    dae_gl_pipeline_settings_group_depth_bounds* el_depth_bounds;
    dae_gl_pipeline_settings_group_depth_mask* el_depth_mask;
    dae_gl_pipeline_settings_group_depth_range* el_depth_range;
    dae_gl_pipeline_settings_group_fog_density* el_fog_density;
    dae_gl_pipeline_settings_group_fog_start* el_fog_start;
    dae_gl_pipeline_settings_group_fog_end* el_fog_end;
    dae_gl_pipeline_settings_group_fog_color* el_fog_color;
    dae_gl_pipeline_settings_group_light_model_ambient* el_light_model_ambient;
    dae_gl_pipeline_settings_group_lighting_enable* el_lighting_enable;
    dae_gl_pipeline_settings_group_line_stipple* el_line_stipple;
    dae_gl_pipeline_settings_group_line_width* el_line_width;
    dae_gl_pipeline_settings_group_material_ambient* el_material_ambient;
    dae_gl_pipeline_settings_group_material_diffuse* el_material_diffuse;
    dae_gl_pipeline_settings_group_material_emission* el_material_emission;
    dae_gl_pipeline_settings_group_material_shininess* el_material_shininess;
    dae_gl_pipeline_settings_group_material_specular* el_material_specular;
    dae_gl_pipeline_settings_group_model_view_matrix* el_model_view_matrix;
    dae_gl_pipeline_settings_group_point_distance_attenuation* el_point_distance_attenuation;
    dae_gl_pipeline_settings_group_point_fade_threshold_size* el_point_fade_threshold_size;
    dae_gl_pipeline_settings_group_point_size* el_point_size;
    dae_gl_pipeline_settings_group_point_size_min* el_point_size_min;
    dae_gl_pipeline_settings_group_point_size_max* el_point_size_max;
    dae_gl_pipeline_settings_group_polygon_offset* el_polygon_offset;
    dae_gl_pipeline_settings_group_projection_matrix* el_projection_matrix;
    dae_gl_pipeline_settings_group_scissor* el_scissor;
    dae_gl_pipeline_settings_group_stencil_mask* el_stencil_mask;
    dae_gl_pipeline_settings_group_alpha_test_enable* el_alpha_test_enable;
    dae_gl_pipeline_settings_group_blend_enable* el_blend_enable;
    dae_gl_pipeline_settings_group_color_logic_op_enable* el_color_logic_op_enable;
    dae_gl_pipeline_settings_group_color_material_enable* el_color_material_enable;
    dae_gl_pipeline_settings_group_cull_face_enable* el_cull_face_enable;
    dae_gl_pipeline_settings_group_depth_bounds_enable* el_depth_bounds_enable;
    dae_gl_pipeline_settings_group_depth_clamp_enable* el_depth_clamp_enable;
    dae_gl_pipeline_settings_group_depth_test_enable* el_depth_test_enable;
    dae_gl_pipeline_settings_group_dither_enable* el_dither_enable;
    dae_gl_pipeline_settings_group_fog_enable* el_fog_enable;
    dae_gl_pipeline_settings_group_light_model_local_viewer_enable* el_light_model_local_viewer_enable;
    dae_gl_pipeline_settings_group_light_model_two_side_enable* el_light_model_two_side_enable;
    dae_gl_pipeline_settings_group_line_smooth_enable* el_line_smooth_enable;
    dae_gl_pipeline_settings_group_line_stipple_enable* el_line_stipple_enable;
    dae_gl_pipeline_settings_group_logic_op_enable* el_logic_op_enable;
    dae_gl_pipeline_settings_group_multisample_enable* el_multisample_enable;
    dae_gl_pipeline_settings_group_normalize_enable* el_normalize_enable;
    dae_gl_pipeline_settings_group_point_smooth_enable* el_point_smooth_enable;
    dae_gl_pipeline_settings_group_polygon_offset_fill_enable* el_polygon_offset_fill_enable;
    dae_gl_pipeline_settings_group_polygon_offset_line_enable* el_polygon_offset_line_enable;
    dae_gl_pipeline_settings_group_polygon_offset_point_enable* el_polygon_offset_point_enable;
    dae_gl_pipeline_settings_group_polygon_smooth_enable* el_polygon_smooth_enable;
    dae_gl_pipeline_settings_group_polygon_stipple_enable* el_polygon_stipple_enable;
    dae_gl_pipeline_settings_group_rescale_normal_enable* el_rescale_normal_enable;
    dae_gl_pipeline_settings_group_sample_alpha_to_coverage_enable* el_sample_alpha_to_coverage_enable;
    dae_gl_pipeline_settings_group_sample_alpha_to_one_enable* el_sample_alpha_to_one_enable;
    dae_gl_pipeline_settings_group_sample_coverage_enable* el_sample_coverage_enable;
    dae_gl_pipeline_settings_group_scissor_test_enable* el_scissor_test_enable;
    dae_gl_pipeline_settings_group_stencil_test_enable* el_stencil_test_enable;
};

struct dae_cg_pass_type_program_s
{
    struct
    {
        dae_cg_pass_type_program_shader** values;
        size_t size;
    } el_shader;
};

struct dae_cg_pass_type_program_shader_s
{
    dae_fx_pipeline_stage_enum* at_stage;
    dae_cg_pass_type_program_shader_sources* el_sources;
    struct
    {
        dae_fx_target_type** values;
        size_t size;
    } el_compiler;
    struct
    {
        dae_cg_pass_type_program_shader_bind_uniform** values;
        size_t size;
    } el_bind_uniform;
};

struct dae_cg_pass_type_program_shader_sources_s
{
    dae_token* at_entry;
    struct
    {
        char*** values;
        size_t size;
    } el_inline;
    struct
    {
        dae_fx_sources_type_import** values;
        size_t size;
    } el_import;
};

struct dae_cg_pass_type_program_shader_bind_uniform_s
{
    dae_NCName* at_symbol;
    dae_cg_pass_type_program_shader_bind_uniform_param* el_param;
    int* el_bool;
    dae_bool2_type* el_bool2;
    dae_bool3_type* el_bool3;
    dae_bool4_type* el_bool4;
    dae_bool2_type* el_bool2x1;
    dae_bool2x2_type* el_bool2x2;
    dae_bool2x3_type* el_bool2x3;
    dae_bool2x4_type* el_bool2x4;
    dae_bool3_type* el_bool3x1;
    dae_bool3x2_type* el_bool3x2;
    dae_bool3x3_type* el_bool3x3;
    dae_bool3x4_type* el_bool3x4;
    dae_bool4_type* el_bool4x1;
    dae_bool4x2_type* el_bool4x2;
    dae_bool4x3_type* el_bool4x3;
    dae_bool4x4_type* el_bool4x4;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_float2_type* el_float2x1;
    dae_float2x2_type* el_float2x2;
    dae_float2x3_type* el_float2x3;
    dae_float2x4_type* el_float2x4;
    dae_float3_type* el_float3x1;
    dae_float3x2_type* el_float3x2;
    dae_float3x3_type* el_float3x3;
    dae_float3x4_type* el_float3x4;
    dae_float4_type* el_float4x1;
    dae_float4x2_type* el_float4x2;
    dae_float4x3_type* el_float4x3;
    dae_float4x4_type* el_float4x4;
    dae_int_type* el_int;
    dae_int2_type* el_int2;
    dae_int3_type* el_int3;
    dae_int4_type* el_int4;
    dae_int2_type* el_int2x1;
    dae_int2x2_type* el_int2x2;
    dae_int2x3_type* el_int2x3;
    dae_int2x4_type* el_int2x4;
    dae_int3_type* el_int3x1;
    dae_int3x2_type* el_int3x2;
    dae_int3x3_type* el_int3x3;
    dae_int3x4_type* el_int3x4;
    dae_int4_type* el_int4x1;
    dae_int4x2_type* el_int4x2;
    dae_int4x3_type* el_int4x3;
    dae_int4x4_type* el_int4x4;
    dae_float_type* el_half;
    dae_float2_type* el_half2;
    dae_float3_type* el_half3;
    dae_float4_type* el_half4;
    dae_float2_type* el_half2x1;
    dae_float2x2_type* el_half2x2;
    dae_float2x3_type* el_half2x3;
    dae_float2x4_type* el_half2x4;
    dae_float3_type* el_half3x1;
    dae_float3x2_type* el_half3x2;
    dae_float3x3_type* el_half3x3;
    dae_float3x4_type* el_half3x4;
    dae_float4_type* el_half4x1;
    dae_float4x2_type* el_half4x2;
    dae_float4x3_type* el_half4x3;
    dae_float4x4_type* el_half4x4;
    dae_float_type* el_fixed;
    dae_float2_type* el_fixed2;
    dae_float3_type* el_fixed3;
    dae_float4_type* el_fixed4;
    dae_float2_type* el_fixed2x1;
    dae_float2x2_type* el_fixed2x2;
    dae_float2x3_type* el_fixed2x3;
    dae_float2x4_type* el_fixed2x4;
    dae_float3_type* el_fixed3x1;
    dae_float3x2_type* el_fixed3x2;
    dae_float3x3_type* el_fixed3x3;
    dae_float3x4_type* el_fixed3x4;
    dae_float4_type* el_fixed4x1;
    dae_float4x2_type* el_fixed4x2;
    dae_float4x3_type* el_fixed4x3;
    dae_float4x4_type* el_fixed4x4;
    dae_fx_sampler1D_type* el_sampler1D;
    dae_fx_sampler2D_type* el_sampler2D;
    dae_fx_sampler3D_type* el_sampler3D;
    dae_fx_samplerRECT_type* el_samplerRECT;
    dae_fx_samplerCUBE_type* el_samplerCUBE;
    dae_fx_samplerDEPTH_type* el_samplerDEPTH;
    char** el_string;
    dae_gl_enumeration_type* el_enum;
    dae_cg_array_type* el_array;
    dae_cg_user_type* el_usertype;
};

struct dae_cg_pass_type_program_shader_bind_uniform_param_s
{
    dae_NCName* at_ref;
};

struct dae_cg_pass_type_evaluate_s
{
    struct
    {
        dae_fx_colortarget_type** values;
        size_t size;
    } el_color_target;
    struct
    {
        dae_fx_depthtarget_type** values;
        size_t size;
    } el_depth_target;
    struct
    {
        dae_fx_stenciltarget_type** values;
        size_t size;
    } el_stencil_target;
    struct
    {
        dae_fx_clearcolor_type** values;
        size_t size;
    } el_color_clear;
    struct
    {
        dae_fx_cleardepth_type** values;
        size_t size;
    } el_depth_clear;
    struct
    {
        dae_fx_clearstencil_type** values;
        size_t size;
    } el_stencil_clear;
    dae_fx_draw_type* el_draw;
};

struct dae_profile_cg_type_s
{
    dae_ID* at_id;
    dae_NCName* at_platform;
    dae_asset_type* el_asset;
    struct
    {
        dae_fx_code_type** values;
        size_t size;
    } el_code;
    struct
    {
        dae_fx_include_type** values;
        size_t size;
    } el_include;
    struct
    {
        dae_cg_newparam_type** values;
        size_t size;
    } el_newparam;
    struct
    {
        dae_profile_cg_type_technique** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_profile_cg_type_technique_s
{
    dae_ID* at_id;
    dae_sid_type* at_sid;
    dae_asset_type* el_asset;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    struct
    {
        dae_cg_pass_type** values;
        size_t size;
    } el_pass;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_gles_texture_constant_type_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_texenv_command_type_s
{
    dae_gles_texenv_mode_enum* at_operator;
    dae_NCName* at_sampler;
    dae_gles_texture_constant_type* el_constant;
};

struct dae_gles_texcombiner_argument_rgb_type_s
{
    dae_gles_texcombiner_source_enum* at_source;
    dae_gles_texcombiner_operand_rgb_enum* at_operand;
    dae_NCName* at_sampler;
};

struct dae_gles_texcombiner_argument_alpha_type_s
{
    dae_gles_texcombiner_source_enum* at_source;
    dae_gles_texcombiner_operand_alpha_enum* at_operand;
    dae_NCName* at_sampler;
};

struct dae_gles_texcombiner_command_rgb_type_s
{
    dae_gles_texcombiner_operator_rgb_enum* at_operator;
    float* at_scale;
    dae_gles_texcombiner_argument_rgb_type* el_argument[3];
};

struct dae_gles_texcombiner_command_alpha_type_s
{
    dae_gles_texcombiner_operator_alpha_enum* at_operator;
    float* at_scale;
    dae_gles_texcombiner_argument_alpha_type* el_argument[3];
};

struct dae_gles_texcombiner_command_type_s
{
    dae_gles_texture_constant_type* el_constant;
    dae_gles_texcombiner_command_rgb_type* el_RGB;
    dae_gles_texcombiner_command_alpha_type* el_alpha;
};

struct dae_gles_texture_pipeline_type_s
{
    dae_sid_type* at_sid;
    struct
    {
        dae_gles_texcombiner_command_type** values;
        size_t size;
    } el_texcombiner;
    struct
    {
        dae_gles_texenv_command_type** values;
        size_t size;
    } el_texenv;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_gles_sampler_type_s
{
    dae_instance_image_type* el_instance_image;
    dae_gles_sampler_type_texcoord* el_texcoord;
    dae_gles_sampler_wrap_enum* el_wrap_s;
    dae_gles_sampler_wrap_enum* el_wrap_t;
    dae_fx_sampler_min_filter_enum* el_minfilter;
    dae_fx_sampler_mag_filter_enum* el_magfilter;
    dae_fx_sampler_mip_filter_enum* el_mipfilter;
    unsigned char* el_mip_max_level;
    float* el_mip_bias;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_gles_sampler_type_texcoord_s
{
    dae_NCName* at_semantic;
};

struct dae_gles_pipeline_settings_group_alpha_func_s
{
    dae_gles_pipeline_settings_group_alpha_func_func* el_func;
    dae_gles_pipeline_settings_group_alpha_func_value* el_value;
};

struct dae_gles_pipeline_settings_group_alpha_func_func_s
{
    dae_gl_func_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_alpha_func_value_s
{
    dae_gl_alpha_value_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_blend_func_s
{
    dae_gles_pipeline_settings_group_blend_func_src* el_src;
    dae_gles_pipeline_settings_group_blend_func_dest* el_dest;
};

struct dae_gles_pipeline_settings_group_blend_func_src_s
{
    dae_gl_blend_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_blend_func_dest_s
{
    dae_gl_blend_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_clip_plane_s
{
    dae_bool4_type* at_value;
    dae_NCName* at_param;
    dae_gles_max_clip_planes_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_color_mask_s
{
    dae_bool4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_cull_face_s
{
    dae_gl_face_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_depth_func_s
{
    dae_gl_func_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_depth_mask_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_depth_range_s
{
    dae_float2_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_fog_color_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_fog_density_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_fog_mode_s
{
    dae_gl_fog_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_fog_start_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_fog_end_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_front_face_s
{
    dae_gl_front_face_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_logic_op_s
{
    dae_gl_logic_op_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_light_ambient_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
    dae_gles_max_lights_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_light_diffuse_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
    dae_gles_max_lights_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_light_specular_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
    dae_gles_max_lights_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_light_position_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
    dae_gles_max_lights_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_light_constant_attenuation_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
    dae_gles_max_lights_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_light_linear_attenuation_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
    dae_gles_max_lights_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_light_quadratic_attenuation_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
    dae_gles_max_lights_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_light_spot_cutoff_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
    dae_gles_max_lights_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_light_spot_direction_s
{
    dae_float3_type* at_value;
    dae_NCName* at_param;
    dae_gles_max_lights_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_light_spot_exponent_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
    dae_gles_max_lights_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_light_model_ambient_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_line_width_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_material_ambient_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_material_diffuse_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_material_emission_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_material_shininess_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_material_specular_s
{
    dae_float4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_model_view_matrix_s
{
    dae_float4x4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_point_distance_attenuation_s
{
    dae_float3_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_point_fade_threshold_size_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_point_size_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_point_size_min_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_point_size_max_s
{
    dae_float_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_polygon_offset_s
{
    dae_float2_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_projection_matrix_s
{
    dae_float4x4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_scissor_s
{
    dae_int4_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_shade_model_s
{
    dae_gl_shade_model_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_stencil_func_s
{
    dae_gles_pipeline_settings_group_stencil_func_func* el_func;
    dae_gles_pipeline_settings_group_stencil_func_ref* el_ref;
    dae_gles_pipeline_settings_group_stencil_func_mask* el_mask;
};

struct dae_gles_pipeline_settings_group_stencil_func_func_s
{
    dae_gl_func_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_stencil_func_ref_s
{
    unsigned char* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_stencil_func_mask_s
{
    unsigned char* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_stencil_mask_s
{
    dae_int_type* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_stencil_op_s
{
    dae_gles_pipeline_settings_group_stencil_op_fail* el_fail;
    dae_gles_pipeline_settings_group_stencil_op_zfail* el_zfail;
    dae_gles_pipeline_settings_group_stencil_op_zpass* el_zpass;
};

struct dae_gles_pipeline_settings_group_stencil_op_fail_s
{
    dae_gles_stencil_op_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_stencil_op_zfail_s
{
    dae_gles_stencil_op_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_stencil_op_zpass_s
{
    dae_gles_stencil_op_enum* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_texture_pipeline_s
{
    dae_gles_texture_pipeline_type* el_value;
};

struct dae_gles_pipeline_settings_group_alpha_test_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_blend_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_clip_plane_enable_s
{
    int* at_value;
    dae_NCName* at_param;
    dae_gles_max_clip_planes_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_color_logic_op_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_color_material_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_cull_face_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_depth_test_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_dither_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_fog_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_light_enable_s
{
    int* at_value;
    dae_NCName* at_param;
    dae_gles_max_lights_index_type* at_index;
};

struct dae_gles_pipeline_settings_group_lighting_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_light_model_two_side_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_line_smooth_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_multisample_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_normalize_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_point_smooth_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_polygon_offset_fill_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_rescale_normal_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_sample_alpha_to_coverage_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_sample_alpha_to_one_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_sample_coverage_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_scissor_test_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_pipeline_settings_group_stencil_test_enable_s
{
    int* at_value;
    dae_NCName* at_param;
};

struct dae_gles_newparam_type_s
{
    dae_sid_type* at_sid;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    dae_NCName* el_semantic;
    dae_fx_modifier_enum* el_modifier;
    int* el_bool;
    dae_bool2_type* el_bool2;
    dae_bool3_type* el_bool3;
    dae_bool4_type* el_bool4;
    dae_int_type* el_int;
    dae_int2_type* el_int2;
    dae_int3_type* el_int3;
    dae_int4_type* el_int4;
    dae_float_type* el_float;
    dae_float2_type* el_float2;
    dae_float3_type* el_float3;
    dae_float4_type* el_float4;
    dae_float_type* el_float1x1;
    dae_float2_type* el_float1x2;
    dae_float3_type* el_float1x3;
    dae_float4_type* el_float1x4;
    dae_float2_type* el_float2x1;
    dae_float2x2_type* el_float2x2;
    dae_float2x3_type* el_float2x3;
    dae_float2x4_type* el_float2x4;
    dae_float3_type* el_float3x1;
    dae_float3x2_type* el_float3x2;
    dae_float3x3_type* el_float3x3;
    dae_float3x4_type* el_float3x4;
    dae_float4_type* el_float4x1;
    dae_float4x2_type* el_float4x2;
    dae_float4x3_type* el_float4x3;
    dae_float4x4_type* el_float4x4;
    dae_gles_sampler_type* el_sampler2D;
    dae_gles_enumeration_type* el_enum;
};

struct dae_profile_gles_type_s
{
    dae_ID* at_id;
    dae_NCName* at_platform;
    dae_asset_type* el_asset;
    struct
    {
        dae_gles_newparam_type** values;
        size_t size;
    } el_newparam;
    struct
    {
        dae_profile_gles_type_technique** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_profile_gles_type_technique_s
{
    dae_ID* at_id;
    dae_sid_type* at_sid;
    dae_asset_type* el_asset;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    struct
    {
        dae_profile_gles_type_technique_pass** values;
        size_t size;
    } el_pass;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_profile_gles_type_technique_pass_s
{
    dae_sid_type* at_sid;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    dae_profile_gles_type_technique_pass_states* el_states;
    dae_profile_gles_type_technique_pass_evaluate* el_evaluate;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_profile_gles_type_technique_pass_states_s
{
    dae_gles_pipeline_settings_group_alpha_func* el_alpha_func;
    dae_gles_pipeline_settings_group_blend_func* el_blend_func;
    dae_gles_pipeline_settings_group_clip_plane* el_clip_plane;
    dae_gles_pipeline_settings_group_color_mask* el_color_mask;
    dae_gles_pipeline_settings_group_cull_face* el_cull_face;
    dae_gles_pipeline_settings_group_depth_func* el_depth_func;
    dae_gles_pipeline_settings_group_depth_mask* el_depth_mask;
    dae_gles_pipeline_settings_group_depth_range* el_depth_range;
    dae_gles_pipeline_settings_group_fog_color* el_fog_color;
    dae_gles_pipeline_settings_group_fog_density* el_fog_density;
    dae_gles_pipeline_settings_group_fog_mode* el_fog_mode;
    dae_gles_pipeline_settings_group_fog_start* el_fog_start;
    dae_gles_pipeline_settings_group_fog_end* el_fog_end;
    dae_gles_pipeline_settings_group_front_face* el_front_face;
    dae_gles_pipeline_settings_group_logic_op* el_logic_op;
    dae_gles_pipeline_settings_group_light_ambient* el_light_ambient;
    dae_gles_pipeline_settings_group_light_diffuse* el_light_diffuse;
    dae_gles_pipeline_settings_group_light_specular* el_light_specular;
    dae_gles_pipeline_settings_group_light_position* el_light_position;
    dae_gles_pipeline_settings_group_light_constant_attenuation* el_light_constant_attenuation;
    dae_gles_pipeline_settings_group_light_linear_attenuation* el_light_linear_attenuation;
    dae_gles_pipeline_settings_group_light_quadratic_attenuation* el_light_quadratic_attenuation;
    dae_gles_pipeline_settings_group_light_spot_cutoff* el_light_spot_cutoff;
    dae_gles_pipeline_settings_group_light_spot_direction* el_light_spot_direction;
    dae_gles_pipeline_settings_group_light_spot_exponent* el_light_spot_exponent;
    dae_gles_pipeline_settings_group_light_model_ambient* el_light_model_ambient;
    dae_gles_pipeline_settings_group_line_width* el_line_width;
    dae_gles_pipeline_settings_group_material_ambient* el_material_ambient;
    dae_gles_pipeline_settings_group_material_diffuse* el_material_diffuse;
    dae_gles_pipeline_settings_group_material_emission* el_material_emission;
    dae_gles_pipeline_settings_group_material_shininess* el_material_shininess;
    dae_gles_pipeline_settings_group_material_specular* el_material_specular;
    dae_gles_pipeline_settings_group_model_view_matrix* el_model_view_matrix;
    dae_gles_pipeline_settings_group_point_distance_attenuation* el_point_distance_attenuation;
    dae_gles_pipeline_settings_group_point_fade_threshold_size* el_point_fade_threshold_size;
    dae_gles_pipeline_settings_group_point_size* el_point_size;
    dae_gles_pipeline_settings_group_point_size_min* el_point_size_min;
    dae_gles_pipeline_settings_group_point_size_max* el_point_size_max;
    dae_gles_pipeline_settings_group_polygon_offset* el_polygon_offset;
    dae_gles_pipeline_settings_group_projection_matrix* el_projection_matrix;
    dae_gles_pipeline_settings_group_scissor* el_scissor;
    dae_gles_pipeline_settings_group_shade_model* el_shade_model;
    dae_gles_pipeline_settings_group_stencil_func* el_stencil_func;
    dae_gles_pipeline_settings_group_stencil_mask* el_stencil_mask;
    dae_gles_pipeline_settings_group_stencil_op* el_stencil_op;
    dae_gles_pipeline_settings_group_texture_pipeline* el_texture_pipeline;
    dae_gles_pipeline_settings_group_alpha_test_enable* el_alpha_test_enable;
    dae_gles_pipeline_settings_group_blend_enable* el_blend_enable;
    dae_gles_pipeline_settings_group_clip_plane_enable* el_clip_plane_enable;
    dae_gles_pipeline_settings_group_color_logic_op_enable* el_color_logic_op_enable;
    dae_gles_pipeline_settings_group_color_material_enable* el_color_material_enable;
    dae_gles_pipeline_settings_group_cull_face_enable* el_cull_face_enable;
    dae_gles_pipeline_settings_group_depth_test_enable* el_depth_test_enable;
    dae_gles_pipeline_settings_group_dither_enable* el_dither_enable;
    dae_gles_pipeline_settings_group_fog_enable* el_fog_enable;
    dae_gles_pipeline_settings_group_light_enable* el_light_enable;
    dae_gles_pipeline_settings_group_lighting_enable* el_lighting_enable;
    dae_gles_pipeline_settings_group_light_model_two_side_enable* el_light_model_two_side_enable;
    dae_gles_pipeline_settings_group_line_smooth_enable* el_line_smooth_enable;
    dae_gles_pipeline_settings_group_multisample_enable* el_multisample_enable;
    dae_gles_pipeline_settings_group_normalize_enable* el_normalize_enable;
    dae_gles_pipeline_settings_group_point_smooth_enable* el_point_smooth_enable;
    dae_gles_pipeline_settings_group_polygon_offset_fill_enable* el_polygon_offset_fill_enable;
    dae_gles_pipeline_settings_group_rescale_normal_enable* el_rescale_normal_enable;
    dae_gles_pipeline_settings_group_sample_alpha_to_coverage_enable* el_sample_alpha_to_coverage_enable;
    dae_gles_pipeline_settings_group_sample_alpha_to_one_enable* el_sample_alpha_to_one_enable;
    dae_gles_pipeline_settings_group_sample_coverage_enable* el_sample_coverage_enable;
    dae_gles_pipeline_settings_group_scissor_test_enable* el_scissor_test_enable;
    dae_gles_pipeline_settings_group_stencil_test_enable* el_stencil_test_enable;
};

struct dae_profile_gles_type_technique_pass_evaluate_s
{
    struct
    {
        dae_fx_colortarget_type** values;
        size_t size;
    } el_color_target;
    struct
    {
        dae_fx_depthtarget_type** values;
        size_t size;
    } el_depth_target;
    struct
    {
        dae_fx_stenciltarget_type** values;
        size_t size;
    } el_stencil_target;
    struct
    {
        dae_fx_clearcolor_type** values;
        size_t size;
    } el_color_clear;
    struct
    {
        dae_fx_cleardepth_type** values;
        size_t size;
    } el_depth_clear;
    struct
    {
        dae_fx_clearstencil_type** values;
        size_t size;
    } el_stencil_clear;
    dae_fx_draw_type* el_draw;
};

struct dae_effect_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_fx_annotate_type** values;
        size_t size;
    } el_annotate;
    struct
    {
        dae_fx_newparam_type** values;
        size_t size;
    } el_newparam;
    dae_profile_common_type* el_profile_COMMON;
    dae_profile_bridge_type* el_profile_BRIDGE;
    dae_profile_gles2_type* el_profile_GLES2;
    dae_profile_glsl_type* el_profile_GLSL;
    dae_profile_cg_type* el_profile_CG;
    dae_profile_gles_type* el_profile_GLES;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_effects_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_effect_type** values;
        size_t size;
    } el_effect;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_box_type_s
{
    dae_float3_type* el_half_extents;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_plane_type_s
{
    dae_float4_type* el_equation;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_sphere_type_s
{
    dae_float_type* el_radius;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_cylinder_type_s
{
    dae_float_type* el_height;
    dae_float2_type* el_radius;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_capsule_type_s
{
    dae_float_type* el_height;
    dae_float3_type* el_radius;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_force_field_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_force_fields_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_force_field_type** values;
        size_t size;
    } el_force_field;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_physics_material_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    dae_physics_material_type_technique_common* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_physics_material_type_technique_common_s
{
    dae_targetable_float_type* el_dynamic_friction;
    dae_targetable_float_type* el_restitution;
    dae_targetable_float_type* el_static_friction;
};

struct dae_library_physics_materials_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_physics_material_type** values;
        size_t size;
    } el_physics_material;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_edges_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    int* at_count;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    dae_p_type* el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_wires_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    dae_list_of_uints_type* el_vcount;
    dae_p_type* el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_faces_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    dae_list_of_uints_type* el_vcount;
    dae_p_type* el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_shells_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    dae_list_of_uints_type* el_vcount;
    dae_p_type* el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_solids_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    dae_list_of_uints_type* el_vcount;
    dae_p_type* el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_line_type_s
{
    dae_float3_type* el_origin;
    dae_float3_type* el_direction;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_circle_type_s
{
    dae_float_type* el_radius;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_ellipse_type_s
{
    dae_float2_type* el_radius;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_parabola_type_s
{
    dae_float_type* el_focal;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_hyperbola_type_s
{
    dae_float2_type* el_radius;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_torus_type_s
{
    dae_float2_type* el_radius;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_pcurves_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    dae_list_of_uints_type* el_vcount;
    dae_p_type* el_p;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_sidref_array_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_uint_type* at_count;
    struct
    {
        dae_sidref_type* values;
        size_t size;
    } data;
};

struct dae_source_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    dae_token_array_type* el_token_array;
    dae_idref_array_type* el_IDREF_array;
    dae_name_array_type* el_Name_array;
    dae_bool_array_type* el_bool_array;
    dae_float_array_type* el_float_array;
    dae_int_array_type* el_int_array;
    dae_sidref_array_type* el_SIDREF_array;
    dae_source_type_technique_common* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
};

struct dae_source_type_technique_common_s
{
    dae_accessor_type* el_accessor;
};

struct dae_animation_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_source_type** values;
        size_t size;
    } el_source;
    struct
    {
        dae_sampler_type** values;
        size_t size;
    } el_sampler;
    struct
    {
        dae_animation_type** values;
        size_t size;
    } el_animation;
    struct
    {
        dae_channel_type** values;
        size_t size;
    } el_channel;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_animations_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_animation_type** values;
        size_t size;
    } el_animation;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_skin_type_s
{
    dae_anyURI* at_source;
    dae_float4x4_type* el_bind_shape_matrix;
    struct
    {
        dae_source_type** values;
        size_t size;
    } el_source;
    dae_skin_type_joints* el_joints;
    dae_skin_type_vertex_weights* el_vertex_weights;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_skin_type_joints_s
{
    struct
    {
        dae_input_local_type** values;
        size_t size;
    } el_input;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_skin_type_vertex_weights_s
{
    dae_uint_type* at_count;
    struct
    {
        dae_input_local_offset_type** values;
        size_t size;
    } el_input;
    dae_list_of_uints_type* el_vcount;
    dae_list_of_ints_type* el_v;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_convex_mesh_type_s
{
    dae_anyURI* at_convex_hull_of;
    struct
    {
        dae_source_type** values;
        size_t size;
    } el_source;
    dae_vertices_type* el_vertices;
    struct
    {
        dae_lines_type** values;
        size_t size;
    } el_lines;
    struct
    {
        dae_linestrips_type** values;
        size_t size;
    } el_linestrips;
    struct
    {
        dae_polygons_type** values;
        size_t size;
    } el_polygons;
    struct
    {
        dae_polylist_type** values;
        size_t size;
    } el_polylist;
    struct
    {
        dae_triangles_type** values;
        size_t size;
    } el_triangles;
    struct
    {
        dae_trifans_type** values;
        size_t size;
    } el_trifans;
    struct
    {
        dae_tristrips_type** values;
        size_t size;
    } el_tristrips;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_mesh_type_s
{
    struct
    {
        dae_source_type** values;
        size_t size;
    } el_source;
    dae_vertices_type* el_vertices;
    struct
    {
        dae_lines_type** values;
        size_t size;
    } el_lines;
    struct
    {
        dae_linestrips_type** values;
        size_t size;
    } el_linestrips;
    struct
    {
        dae_polygons_type** values;
        size_t size;
    } el_polygons;
    struct
    {
        dae_polylist_type** values;
        size_t size;
    } el_polylist;
    struct
    {
        dae_triangles_type** values;
        size_t size;
    } el_triangles;
    struct
    {
        dae_trifans_type** values;
        size_t size;
    } el_trifans;
    struct
    {
        dae_tristrips_type** values;
        size_t size;
    } el_tristrips;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_spline_type_s
{
    int* at_closed;
    struct
    {
        dae_source_type** values;
        size_t size;
    } el_source;
    dae_spline_type_control_vertices* el_control_vertices;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_spline_type_control_vertices_s
{
    struct
    {
        dae_input_local_type** values;
        size_t size;
    } el_input;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_nurbs_surface_type_s
{
    dae_uint_type* at_degree_u;
    int* at_closed_u;
    dae_uint_type* at_degree_v;
    int* at_closed_v;
    struct
    {
        dae_source_type** values;
        size_t size;
    } el_source;
    dae_nurbs_surface_type_control_vertices* el_control_vertices;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_nurbs_surface_type_control_vertices_s
{
    struct
    {
        dae_input_local_type** values;
        size_t size;
    } el_input;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_nurbs_type_s
{
    dae_uint_type* at_degree;
    int* at_closed;
    struct
    {
        dae_source_type** values;
        size_t size;
    } el_source;
    dae_nurbs_type_control_vertices* el_control_vertices;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_nurbs_type_control_vertices_s
{
    struct
    {
        dae_input_local_type** values;
        size_t size;
    } el_input;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_morph_type_s
{
    dae_morph_method_enum* at_method;
    dae_anyURI* at_source;
    struct
    {
        dae_source_type** values;
        size_t size;
    } el_source;
    dae_morph_type_targets* el_targets;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_morph_type_targets_s
{
    struct
    {
        dae_input_local_type** values;
        size_t size;
    } el_input;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_controller_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    dae_skin_type* el_skin;
    dae_morph_type* el_morph;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_controllers_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_controller_type** values;
        size_t size;
    } el_controller;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_curve_type_s
{
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_line_type* el_line;
    dae_circle_type* el_circle;
    dae_ellipse_type* el_ellipse;
    dae_parabola_type* el_parabola;
    dae_hyperbola_type* el_hyperbola;
    dae_nurbs_type* el_nurbs;
    struct
    {
        dae_orient_type** values;
        size_t size;
    } el_orient;
    dae_origin_type* el_origin;
};

struct dae_surface_curves_type_s
{
    struct
    {
        dae_curve_type** values;
        size_t size;
    } el_curve;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_curves_type_s
{
    struct
    {
        dae_curve_type** values;
        size_t size;
    } el_curve;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_swept_surface_type_s
{
    dae_curve_type* el_curve;
    dae_float3_type* el_direction;
    dae_float3_type* el_origin;
    dae_float3_type* el_axis;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_cone_type_s
{
    dae_float_type* el_radius;
    float* el_angle;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_surface_type_s
{
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_plane_type* el_plane;
    dae_sphere_type* el_sphere;
    dae_torus_type* el_torus;
    dae_swept_surface_type* el_swept_surface;
    dae_nurbs_surface_type* el_nurbs_surface;
    dae_cone_type* el_cone;
    dae_surface_type_cylinder* el_cylinder;
    struct
    {
        dae_orient_type** values;
        size_t size;
    } el_orient;
    dae_origin_type* el_origin;
};

struct dae_surface_type_cylinder_s
{
    dae_float_type* el_radius;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_surfaces_type_s
{
    struct
    {
        dae_surface_type** values;
        size_t size;
    } el_surface;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_brep_type_s
{
    dae_curves_type* el_curves;
    dae_surface_curves_type* el_surface_curves;
    dae_surfaces_type* el_surfaces;
    struct
    {
        dae_source_type** values;
        size_t size;
    } el_source;
    dae_vertices_type* el_vertices;
    dae_edges_type* el_edges;
    dae_wires_type* el_wires;
    dae_faces_type* el_faces;
    dae_pcurves_type* el_pcurves;
    dae_shells_type* el_shells;
    dae_solids_type* el_solids;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_geometry_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    dae_convex_mesh_type* el_convex_mesh;
    dae_mesh_type* el_mesh;
    dae_spline_type* el_spline;
    dae_brep_type* el_brep;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_geometries_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_geometry_type** values;
        size_t size;
    } el_geometry;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_targetable_float4_type_s
{
    dae_sid_type* at_sid;
    dae_float_type data[4];
};

struct dae_link_type_s
{
    dae_sid_type* at_sid;
    dae_token* at_name;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
    struct
    {
        dae_link_type_attachment_full** values;
        size_t size;
    } el_attachment_full;
    struct
    {
        dae_link_type_attachment_start** values;
        size_t size;
    } el_attachment_start;
    struct
    {
        dae_link_type_attachment_end** values;
        size_t size;
    } el_attachment_end;
};

struct dae_link_type_attachment_full_s
{
    dae_token* at_joint;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
    dae_link_type* el_link;
};

struct dae_link_type_attachment_start_s
{
    dae_token* at_joint;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
};

struct dae_link_type_attachment_end_s
{
    dae_token* at_joint;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
};

struct dae_rigid_constraint_type_s
{
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_rigid_constraint_type_ref_attachment* el_ref_attachment;
    dae_rigid_constraint_type_attachment* el_attachment;
    dae_rigid_constraint_type_technique_common* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_rigid_constraint_type_ref_attachment_s
{
    dae_anyURI* at_rigid_body;
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_rigid_constraint_type_attachment_s
{
    dae_anyURI* at_rigid_body;
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_rigid_constraint_type_technique_common_s
{
    dae_rigid_constraint_type_technique_common_enabled* el_enabled;
    dae_rigid_constraint_type_technique_common_interpenetrate* el_interpenetrate;
    dae_rigid_constraint_type_technique_common_limits* el_limits;
    dae_rigid_constraint_type_technique_common_spring* el_spring;
};

struct dae_rigid_constraint_type_technique_common_enabled_s
{
    dae_sid_type* at_sid;
    int data;
};

struct dae_rigid_constraint_type_technique_common_interpenetrate_s
{
    dae_sid_type* at_sid;
    int data;
};

struct dae_rigid_constraint_type_technique_common_limits_s
{
    dae_rigid_constraint_type_technique_common_limits_swing_cone_and_twist* el_swing_cone_and_twist;
    dae_rigid_constraint_type_technique_common_limits_linear* el_linear;
};

struct dae_rigid_constraint_type_technique_common_limits_swing_cone_and_twist_s
{
    dae_targetable_float3_type* el_min;
    dae_targetable_float3_type* el_max;
};

struct dae_rigid_constraint_type_technique_common_limits_linear_s
{
    dae_targetable_float3_type* el_min;
    dae_targetable_float3_type* el_max;
};

struct dae_rigid_constraint_type_technique_common_spring_s
{
    dae_rigid_constraint_type_technique_common_spring_angular* el_angular;
    dae_rigid_constraint_type_technique_common_spring_linear* el_linear;
};

struct dae_rigid_constraint_type_technique_common_spring_angular_s
{
    dae_targetable_float_type* el_stiffness;
    dae_targetable_float_type* el_damping;
    dae_targetable_float_type* el_target_value;
};

struct dae_rigid_constraint_type_technique_common_spring_linear_s
{
    dae_targetable_float_type* el_stiffness;
    dae_targetable_float_type* el_damping;
    dae_targetable_float_type* el_target_value;
};

struct dae_node_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_sid_type* at_sid;
    dae_node_enum* at_type;
    dae_list_of_names_type* at_layer;
    dae_asset_type* el_asset;
    struct
    {
        dae_lookat_type** values;
        size_t size;
    } el_lookat;
    struct
    {
        dae_matrix_type** values;
        size_t size;
    } el_matrix;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
    struct
    {
        dae_scale_type** values;
        size_t size;
    } el_scale;
    struct
    {
        dae_skew_type** values;
        size_t size;
    } el_skew;
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
    struct
    {
        dae_instance_camera_type** values;
        size_t size;
    } el_instance_camera;
    struct
    {
        dae_instance_controller_type** values;
        size_t size;
    } el_instance_controller;
    struct
    {
        dae_instance_geometry_type** values;
        size_t size;
    } el_instance_geometry;
    struct
    {
        dae_instance_light_type** values;
        size_t size;
    } el_instance_light;
    struct
    {
        dae_instance_node_type** values;
        size_t size;
    } el_instance_node;
    struct
    {
        dae_node_type** values;
        size_t size;
    } el_node;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_nodes_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_node_type** values;
        size_t size;
    } el_node;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_visual_scene_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_node_type** values;
        size_t size;
    } el_node;
    struct
    {
        dae_visual_scene_type_evaluate_scene** values;
        size_t size;
    } el_evaluate_scene;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_visual_scene_type_evaluate_scene_s
{
    dae_ID* at_id;
    dae_sid_type* at_sid;
    dae_token* at_name;
    int* at_enable;
    dae_asset_type* el_asset;
    struct
    {
        dae_visual_scene_type_evaluate_scene_render** values;
        size_t size;
    } el_render;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_visual_scene_type_evaluate_scene_render_s
{
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_anyURI* at_camera_node;
    struct
    {
        dae_NCName** values;
        size_t size;
    } el_layer;
    dae_visual_scene_type_evaluate_scene_render_instance_material* el_instance_material;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_visual_scene_type_evaluate_scene_render_instance_material_s
{
    dae_anyURI* at_url;
    dae_visual_scene_type_evaluate_scene_render_instance_material_technique_override* el_technique_override;
    struct
    {
        dae_visual_scene_type_evaluate_scene_render_instance_material_bind** values;
        size_t size;
    } el_bind;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_visual_scene_type_evaluate_scene_render_instance_material_technique_override_s
{
    dae_NCName* at_ref;
    dae_NCName* at_pass;
};

struct dae_visual_scene_type_evaluate_scene_render_instance_material_bind_s
{
    dae_NCName* at_semantic;
    dae_token* at_target;
};

struct dae_library_visual_scenes_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_visual_scene_type** values;
        size_t size;
    } el_visual_scene;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_rigid_body_type_s
{
    dae_ID* at_id;
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_rigid_body_type_technique_common* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_rigid_body_type_technique_common_s
{
    dae_rigid_body_type_technique_common_dynamic* el_dynamic;
    dae_targetable_float_type* el_mass;
    dae_rigid_body_type_technique_common_mass_frame* el_mass_frame;
    dae_targetable_float3_type* el_inertia;
    dae_instance_physics_material_type* el_instance_physics_material;
    dae_physics_material_type* el_physics_material;
    struct
    {
        dae_rigid_body_type_technique_common_shape** values;
        size_t size;
    } el_shape;
};

struct dae_rigid_body_type_technique_common_dynamic_s
{
    dae_sid_type* at_sid;
    int data;
};

struct dae_rigid_body_type_technique_common_mass_frame_s
{
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
};

struct dae_rigid_body_type_technique_common_shape_s
{
    dae_rigid_body_type_technique_common_shape_hollow* el_hollow;
    dae_targetable_float_type* el_mass;
    dae_targetable_float_type* el_density;
    dae_instance_physics_material_type* el_instance_physics_material;
    dae_physics_material_type* el_physics_material;
    dae_instance_geometry_type* el_instance_geometry;
    dae_plane_type* el_plane;
    dae_box_type* el_box;
    dae_sphere_type* el_sphere;
    dae_cylinder_type* el_cylinder;
    dae_capsule_type* el_capsule;
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_rigid_body_type_technique_common_shape_hollow_s
{
    dae_sid_type* at_sid;
    int data;
};

struct dae_instance_rigid_body_type_s
{
    dae_NCName* at_body;
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_anyURI* at_target;
    dae_instance_rigid_body_type_technique_common* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_instance_rigid_body_type_technique_common_s
{
    dae_float3_type* el_angular_velocity;
    dae_float3_type* el_velocity;
    dae_instance_rigid_body_type_technique_common_dynamic* el_dynamic;
    dae_targetable_float_type* el_mass;
    dae_instance_rigid_body_type_technique_common_mass_frame* el_mass_frame;
    dae_targetable_float3_type* el_inertia;
    dae_instance_physics_material_type* el_instance_physics_material;
    dae_physics_material_type* el_physics_material;
    struct
    {
        dae_instance_rigid_body_type_technique_common_shape** values;
        size_t size;
    } el_shape;
};

struct dae_instance_rigid_body_type_technique_common_dynamic_s
{
    dae_sid_type* at_sid;
    int data;
};

struct dae_instance_rigid_body_type_technique_common_mass_frame_s
{
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
};

struct dae_instance_rigid_body_type_technique_common_shape_s
{
    dae_instance_rigid_body_type_technique_common_shape_hollow* el_hollow;
    dae_targetable_float_type* el_mass;
    dae_targetable_float_type* el_density;
    dae_instance_physics_material_type* el_instance_physics_material;
    dae_physics_material_type* el_physics_material;
    dae_instance_geometry_type* el_instance_geometry;
    dae_plane_type* el_plane;
    dae_box_type* el_box;
    dae_sphere_type* el_sphere;
    dae_cylinder_type* el_cylinder;
    dae_capsule_type* el_capsule;
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_instance_rigid_body_type_technique_common_shape_hollow_s
{
    dae_sid_type* at_sid;
    int data;
};

struct dae_instance_physics_model_type_s
{
    dae_anyURI* at_url;
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_anyURI* at_parent;
    struct
    {
        dae_instance_force_field_type** values;
        size_t size;
    } el_instance_force_field;
    struct
    {
        dae_instance_rigid_body_type** values;
        size_t size;
    } el_instance_rigid_body;
    struct
    {
        dae_instance_rigid_constraint_type** values;
        size_t size;
    } el_instance_rigid_constraint;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_physics_model_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_rigid_body_type** values;
        size_t size;
    } el_rigid_body;
    struct
    {
        dae_rigid_constraint_type** values;
        size_t size;
    } el_rigid_constraint;
    struct
    {
        dae_instance_physics_model_type** values;
        size_t size;
    } el_instance_physics_model;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_physics_models_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_physics_model_type** values;
        size_t size;
    } el_physics_model;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_physics_scene_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_instance_force_field_type** values;
        size_t size;
    } el_instance_force_field;
    struct
    {
        dae_instance_physics_model_type** values;
        size_t size;
    } el_instance_physics_model;
    dae_physics_scene_type_technique_common* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_physics_scene_type_technique_common_s
{
    dae_targetable_float3_type* el_gravity;
    dae_targetable_float_type* el_time_step;
};

struct dae_library_physics_scenes_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_physics_scene_type** values;
        size_t size;
    } el_physics_scene;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_kinematics_newparam_type_s
{
    dae_sid_type* at_sid;
    dae_float_type* el_float;
    dae_int_type* el_int;
    dae_sidref_type* el_SIDREF;
    int* el_bool;
};

struct dae_kinematics_frame_type_s
{
    dae_token* at_link;
    struct
    {
        dae_translate_type** values;
        size_t size;
    } el_translate;
    struct
    {
        dae_rotate_type** values;
        size_t size;
    } el_rotate;
};

struct dae_common_bool_or_param_type_s
{
    int* el_bool;
    dae_common_param_type* el_param;
};

struct dae_common_float_or_param_type_s
{
    dae_float_type* el_float;
    dae_common_param_type* el_param;
};

struct dae_kinematics_limits_type_s
{
    dae_common_float_or_param_type* el_min;
    dae_common_float_or_param_type* el_max;
};

struct dae_common_sidref_or_param_type_s
{
    dae_sidref_type* el_SIDREF;
    dae_common_param_type* el_param;
};

struct dae_bind_joint_axis_type_s
{
    dae_token* at_target;
    dae_common_sidref_or_param_type* el_axis;
    dae_common_float_or_param_type* el_value;
};

struct dae_bind_kinematics_model_type_s
{
    dae_token* at_node;
    dae_sidref_type* el_SIDREF;
    dae_common_param_type* el_param;
};

struct dae_kinematics_connect_param_type_s
{
    dae_token* at_ref;
};

struct dae_kinematics_setparam_type_s
{
    dae_token* at_ref;
    dae_float_type* el_float;
    dae_int_type* el_int;
    dae_sidref_type* el_SIDREF;
    int* el_bool;
    dae_kinematics_connect_param_type* el_connect_param;
};

struct dae_instance_kinematics_scene_type_s
{
    dae_anyURI* at_url;
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_kinematics_newparam_type** values;
        size_t size;
    } el_newparam;
    struct
    {
        dae_kinematics_setparam_type** values;
        size_t size;
    } el_setparam;
    struct
    {
        dae_bind_kinematics_model_type** values;
        size_t size;
    } el_bind_kinematics_model;
    struct
    {
        dae_bind_joint_axis_type** values;
        size_t size;
    } el_bind_joint_axis;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_kinematics_index_type_s
{
    dae_NMTOKEN* at_semantic;
    dae_int_type* el_int;
    dae_common_param_type* el_param;
};

struct dae_kinematics_param_type_s
{
    dae_token* at_ref;
};

struct dae_kinematics_bind_type_s
{
    dae_NCName* at_symbol;
    dae_kinematics_param_type* el_param;
    int* el_bool;
    dae_float_type* el_float;
    dae_int_type* el_int;
    dae_sidref_type* el_SIDREF;
};

struct dae_motion_axis_info_type_s
{
    dae_sid_type* at_sid;
    dae_token* at_axis;
    dae_token* at_name;
    struct
    {
        dae_kinematics_bind_type** values;
        size_t size;
    } el_bind;
    struct
    {
        dae_kinematics_newparam_type** values;
        size_t size;
    } el_newparam;
    struct
    {
        dae_kinematics_setparam_type** values;
        size_t size;
    } el_setparam;
    dae_common_float_or_param_type* el_speed;
    dae_common_float_or_param_type* el_acceleration;
    dae_common_float_or_param_type* el_deceleration;
    dae_common_float_or_param_type* el_jerk;
};

struct dae_instance_kinematics_model_type_s
{
    dae_anyURI* at_url;
    dae_sid_type* at_sid;
    dae_token* at_name;
    struct
    {
        dae_kinematics_bind_type** values;
        size_t size;
    } el_bind;
    struct
    {
        dae_kinematics_newparam_type** values;
        size_t size;
    } el_newparam;
    struct
    {
        dae_kinematics_setparam_type** values;
        size_t size;
    } el_setparam;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_instance_articulated_system_type_s
{
    dae_sid_type* at_sid;
    dae_anyURI* at_url;
    dae_token* at_name;
    struct
    {
        dae_kinematics_bind_type** values;
        size_t size;
    } el_bind;
    struct
    {
        dae_kinematics_setparam_type** values;
        size_t size;
    } el_setparam;
    struct
    {
        dae_kinematics_newparam_type** values;
        size_t size;
    } el_newparam;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_kinematics_scene_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_instance_kinematics_model_type** values;
        size_t size;
    } el_instance_kinematics_model;
    struct
    {
        dae_instance_articulated_system_type** values;
        size_t size;
    } el_instance_articulated_system;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_kinematics_scenes_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_kinematics_scene_type** values;
        size_t size;
    } el_kinematics_scene;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_common_float2_or_param_type_s
{
    dae_float2_type* el_float2;
    dae_common_param_type* el_param;
};

struct dae_motion_effector_info_type_s
{
    dae_sid_type* at_sid;
    dae_token* at_name;
    struct
    {
        dae_kinematics_bind_type** values;
        size_t size;
    } el_bind;
    struct
    {
        dae_kinematics_newparam_type** values;
        size_t size;
    } el_newparam;
    struct
    {
        dae_kinematics_setparam_type** values;
        size_t size;
    } el_setparam;
    dae_common_float2_or_param_type* el_speed;
    dae_common_float2_or_param_type* el_acceleration;
    dae_common_float2_or_param_type* el_deceleration;
    dae_common_float2_or_param_type* el_jerk;
};

struct dae_motion_technique_type_s
{
    struct
    {
        dae_motion_axis_info_type** values;
        size_t size;
    } el_axis_info;
    dae_motion_effector_info_type* el_effector_info;
};

struct dae_motion_type_s
{
    dae_instance_articulated_system_type* el_instance_articulated_system;
    dae_motion_technique_type* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_minmax_type_s
{
    dae_token* at_name;
    dae_sid_type* at_sid;
    float data;
};

struct dae_joint_limits_type_s
{
    dae_minmax_type* el_min;
    dae_minmax_type* el_max;
};

struct dae_axis_type_s
{
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_float_type data[3];
};

struct dae_axis_constraint_type_s
{
    dae_sid_type* at_sid;
    dae_axis_type* el_axis;
    dae_joint_limits_type* el_limits;
};

struct dae_joint_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_sid_type* at_sid;
    struct
    {
        dae_axis_constraint_type** values;
        size_t size;
    } el_prismatic;
    struct
    {
        dae_axis_constraint_type** values;
        size_t size;
    } el_revolute;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_joints_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_joint_type** values;
        size_t size;
    } el_joint;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_formula_technique_type_s
{
    dae_math* el_math_math;
};

struct dae_formula_newparam_type_s
{
    dae_sid_type* at_sid;
    dae_float_type* el_float;
    dae_int_type* el_int;
    dae_sidref_type* el_SIDREF;
    int* el_bool;
};

struct dae_formula_setparam_type_s
{
    dae_token* at_ref;
    dae_float_type* el_float;
    dae_int_type* el_int;
    dae_sidref_type* el_SIDREF;
    int* el_bool;
    dae_kinematics_connect_param_type* el_connect_param;
};

struct dae_instance_formula_type_s
{
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_anyURI* at_url;
    struct
    {
        dae_formula_setparam_type** values;
        size_t size;
    } el_setparam;
};

struct dae_animation_clip_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_float_type* at_start;
    dae_float_type* at_end;
    dae_asset_type* el_asset;
    struct
    {
        dae_instance_with_extra_type** values;
        size_t size;
    } el_instance_animation;
    struct
    {
        dae_instance_formula_type** values;
        size_t size;
    } el_instance_formula;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_animation_clips_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_animation_clip_type** values;
        size_t size;
    } el_animation_clip;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_formula_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_sid_type* at_sid;
    struct
    {
        dae_formula_newparam_type** values;
        size_t size;
    } el_newparam;
    dae_common_float_or_param_type* el_target;
    dae_formula_technique_type* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
};

struct dae_kinematics_model_technique_type_s
{
    struct
    {
        dae_kinematics_newparam_type** values;
        size_t size;
    } el_newparam;
    struct
    {
        dae_instance_joint_type** values;
        size_t size;
    } el_instance_joint;
    struct
    {
        dae_joint_type** values;
        size_t size;
    } el_joint;
    struct
    {
        dae_link_type** values;
        size_t size;
    } el_link;
    struct
    {
        dae_formula_type** values;
        size_t size;
    } el_formula;
    struct
    {
        dae_instance_formula_type** values;
        size_t size;
    } el_instance_formula;
};

struct dae_kinematics_model_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    dae_kinematics_model_technique_type* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_kinematics_models_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_kinematics_model_type** values;
        size_t size;
    } el_kinematics_model;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_kinematics_axis_info_type_s
{
    dae_sid_type* at_sid;
    dae_token* at_name;
    dae_token* at_axis;
    struct
    {
        dae_kinematics_newparam_type** values;
        size_t size;
    } el_newparam;
    dae_common_bool_or_param_type* el_active;
    dae_common_bool_or_param_type* el_locked;
    struct
    {
        dae_kinematics_index_type** values;
        size_t size;
    } el_index;
    dae_kinematics_limits_type* el_limits;
    struct
    {
        dae_formula_type** values;
        size_t size;
    } el_formula;
    struct
    {
        dae_instance_formula_type** values;
        size_t size;
    } el_instance_formula;
};

struct dae_kinematics_technique_type_s
{
    struct
    {
        dae_kinematics_axis_info_type** values;
        size_t size;
    } el_axis_info;
    dae_kinematics_frame_type* el_frame_origin;
    dae_kinematics_frame_type* el_frame_tip;
    dae_kinematics_frame_type* el_frame_tcp;
    dae_kinematics_frame_type* el_frame_object;
};

struct dae_kinematics_type_s
{
    struct
    {
        dae_instance_kinematics_model_type** values;
        size_t size;
    } el_instance_kinematics_model;
    dae_kinematics_technique_type* el_technique_common;
    struct
    {
        dae_technique_type** values;
        size_t size;
    } el_technique;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_articulated_system_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    dae_kinematics_type* el_kinematics;
    dae_motion_type* el_motion;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_articulated_systems_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_articulated_system_type** values;
        size_t size;
    } el_articulated_system;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_library_formulas_type_s
{
    dae_ID* at_id;
    dae_token* at_name;
    dae_asset_type* el_asset;
    struct
    {
        dae_formula_type** values;
        size_t size;
    } el_formula;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_COLLADA_s
{
    dae_version_enum* at_version;
    dae_anyURI* at_xml_base;
    dae_asset_type* el_asset;
    struct
    {
        dae_library_animations_type** values;
        size_t size;
    } el_library_animations;
    struct
    {
        dae_library_animation_clips_type** values;
        size_t size;
    } el_library_animation_clips;
    struct
    {
        dae_library_cameras_type** values;
        size_t size;
    } el_library_cameras;
    struct
    {
        dae_library_controllers_type** values;
        size_t size;
    } el_library_controllers;
    struct
    {
        dae_library_geometries_type** values;
        size_t size;
    } el_library_geometries;
    struct
    {
        dae_library_effects_type** values;
        size_t size;
    } el_library_effects;
    struct
    {
        dae_library_force_fields_type** values;
        size_t size;
    } el_library_force_fields;
    struct
    {
        dae_library_images_type** values;
        size_t size;
    } el_library_images;
    struct
    {
        dae_library_lights_type** values;
        size_t size;
    } el_library_lights;
    struct
    {
        dae_library_materials_type** values;
        size_t size;
    } el_library_materials;
    struct
    {
        dae_library_nodes_type** values;
        size_t size;
    } el_library_nodes;
    struct
    {
        dae_library_physics_materials_type** values;
        size_t size;
    } el_library_physics_materials;
    struct
    {
        dae_library_physics_models_type** values;
        size_t size;
    } el_library_physics_models;
    struct
    {
        dae_library_physics_scenes_type** values;
        size_t size;
    } el_library_physics_scenes;
    struct
    {
        dae_library_visual_scenes_type** values;
        size_t size;
    } el_library_visual_scenes;
    struct
    {
        dae_library_joints_type** values;
        size_t size;
    } el_library_joints;
    struct
    {
        dae_library_kinematics_models_type** values;
        size_t size;
    } el_library_kinematics_models;
    struct
    {
        dae_library_articulated_systems_type** values;
        size_t size;
    } el_library_articulated_systems;
    struct
    {
        dae_library_kinematics_scenes_type** values;
        size_t size;
    } el_library_kinematics_scenes;
    struct
    {
        dae_library_formulas_type** values;
        size_t size;
    } el_library_formulas;
    dae_COLLADA_scene* el_scene;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_COLLADA_scene_s
{
    struct
    {
        dae_instance_with_extra_type** values;
        size_t size;
    } el_instance_physics_scene;
    dae_instance_with_extra_type* el_instance_visual_scene;
    struct
    {
        dae_instance_kinematics_scene_type** values;
        size_t size;
    } el_instance_kinematics_scene;
    struct
    {
        dae_extra_type** values;
        size_t size;
    } el_extra;
};

struct dae_fx_surface_common_type_s
{
    dae_token* at_type;
    struct
    {
        dae_image_type_init_from** values;
        size_t size;
    } el_init_from;
};



//****************************************************************************
// functions

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

dae_obj_ptr dae_add_attrib(
    dae_obj_ptr parent,
    const char* name,
    const char* value);

dae_obj_ptr dae_add_element(
    dae_obj_ptr parent,
    const char* name);

dae_COLLADA* dae_create();

void dae_destroy(
    dae_COLLADA* doc);

size_t dae_get_data(
    dae_obj_ptr obj,
    dae_native_typeid* type_out,
    void** data_out,
    size_t* datalen_out);

dae_obj_ptr dae_get_first_attrib(
    dae_obj_ptr obj);

dae_obj_ptr dae_get_first_element(
    dae_obj_ptr obj);

const char* dae_get_name(
    dae_obj_ptr obj);

dae_obj_ptr dae_get_next(
    dae_obj_ptr obj);

dae_obj_ptr dae_get_parent(
    dae_obj_ptr child);

dae_obj_typeid dae_get_typeid(
    dae_obj_ptr obj);

void dae_set_string(
    dae_obj_ptr obj,
    const char* data);

#ifdef __cplusplus
}
#endif // __cplusplus

#endif // DAE_H_

